(function(){var e={28486:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{_getPollInterval:function(){return cr},awaitHeight:function(){return mr},getAccount:function(){return hr},getBalance:function(){return yr},getContract:function(){return br},getContractByteCode:function(){return Tr},getCurrentGeneration:function(){return gr},getGeneration:function(){return fr},getHeight:function(){return dr},getKeyBlock:function(){return Cr},getMicroBlockHeader:function(){return wr},getMicroBlockTransactions:function(){return Nr},getName:function(){return xr},poll:function(){return ur},resolveName:function(){return Ar},txDryRun:function(){return zr},waitForTxConfirm:function(){return pr}});var a={};n.r(a),n.d(a,{Account:function(){return $i},AuctionEntry:function(){return ss},ByteCode:function(){return ts},Channel:function(){return cs},ChannelCloseMutualTx:function(){return Os},ChannelCloseSoloTx:function(){return Es},ChannelCreateTx:function(){return Ps},ChannelDepositTx:function(){return Is},ChannelForceProgressTx:function(){return ks},ChannelSetDelegatesTx:function(){return Ds},ChannelSettleTx:function(){return Rs},ChannelSlashTx:function(){return Ms},ChannelSnapshotSoloTx:function(){return Bs},ChannelWithdrawTx:function(){return _s},CheckTxInPoolResponse:function(){return Ys},CommitmentId:function(){return As},ContractCallObject:function(){return Qi},ContractCallTx:function(){return Ws},ContractCreateTx:function(){return Us},ContractObject:function(){return es},CountResponse:function(){return Bi},CreateContractUnsignedTx:function(){return ao},Currency:function(){return hs},Delegates:function(){return ki},DryRunAccount:function(){return ji},DryRunCallContext:function(){return Ui},DryRunCallReq:function(){return Gi},DryRunInput:function(){return Fi},DryRunInputItem:function(){return Hi},DryRunResult:function(){return Li},DryRunResults:function(){return Wi},EncodedTx:function(){return Yi},ErrorModel:function(){return Ti},Event:function(){return Ki},GAAttachTx:function(){return Ks},GAMetaTx:function(){return Js},GAObject:function(){return Xi},GasPricesItem:function(){return gs},Generation:function(){return Di},HashResponse:function(){return xi},Header:function(){return zi},HeightResponse:function(){return Ai},Image:function(){return ys},KeyBlock:function(){return bi},MicroBlockHeader:function(){return qi},NameClaimTx:function(){return zs},NameEntry:function(){return os},NameHash:function(){return qs},NamePointer:function(){return Ri},NamePreclaimTx:function(){return vs},NameRevokeTx:function(){return xs},NameTransferTx:function(){return bs},NameUpdateTx:function(){return Ts},NextNonceResponse:function(){return Vi},OffChainCallContract:function(){return ro},OffChainDeposit:function(){return to},OffChainNewContract:function(){return no},OffChainTransfer:function(){return Zs},OffChainUpdate:function(){return Oi},OffChainWithdrawal:function(){return eo},OracleExtendTx:function(){return Cs},OracleQueries:function(){return as},OracleQuery:function(){return is},OracleQueryTx:function(){return ws},OracleRegisterTx:function(){return Ns},OracleRespondTx:function(){return Ss},PayingForTx:function(){return Xs},PeerConnections:function(){return ps},PeerCount:function(){return js},PeerCountAvailable:function(){return Gs},PeerCountConnected:function(){return Hs},PeerDetails:function(){return Vs},PeerPubKey:function(){return ls},Peers:function(){return Fs},PoI:function(){return ns},PostTxResponse:function(){return Zi},Protocol:function(){return ms},PubKey:function(){return $s},RegisteredOracle:function(){return rs},RelativeTTL:function(){return Ei},SignedTx:function(){return Ii},SignedTxs:function(){return Pi},SpendTx:function(){return fs},Status:function(){return us},SyncStatus:function(){return ds},TokenSupply:function(){return Qs},Ttl:function(){return Mi},Tx:function(){return _i},TxInfoObject:function(){return Ji},UnsignedTx:function(){return Ls},discriminators:function(){return io}});var i={};n.r(i),n.d(i,{aensBid:function(){return Fc},aensClaim:function(){return $c},aensPreclaim:function(){return Vc},aensQuery:function(){return Dc},aensRevoke:function(){return Mc},aensTransfer:function(){return Bc},aensUpdate:function(){return Rc}});var s={};n.r(s),n.d(s,{payForTransaction:function(){return Gc},spend:function(){return jc},transferFunds:function(){return Hc}});var o={};n.r(o),n.d(o,{extendOracleTtl:function(){return Kc},getOracleObject:function(){return Xc},getQueryObject:function(){return Lc},pollForQueries:function(){return Uc},pollForQueryResponse:function(){return Wc},postQueryToOracle:function(){return Qc},registerOracle:function(){return Yc},respondToQuery:function(){return Jc}});var c={};n.r(c),n.d(c,{buildAuthTxHash:function(){return Sl},buildAuthTxHashByGaMetaTx:function(){return vl},createGeneralizedAccount:function(){return wl}});var l={};n.r(l),n.d(l,{ApiVersion:function(){return zd},ByteCodeInput:function(){return Cd},BytecodeCallResultInput:function(){return ud},Calldata:function(){return hd},CompileOpts:function(){return sd},CompileResult:function(){return ld},CompilerError:function(){return od},CompilerVersion:function(){return vd},Contract:function(){return id},DecodeCalldataBytecode:function(){return yd},DecodeCalldataSource:function(){return Nd},DecodedCalldata:function(){return gd},DecodedCallresult:function(){return md},ErrorModel:function(){return fd},ErrorPos:function(){return cd},FateAssembler:function(){return wd},FunctionCallInput:function(){return pd},SophiaBinaryData:function(){return Td},SophiaCallResultInput:function(){return dd},SophiaJsonData:function(){return bd},ValidateByteCodeInput:function(){return Sd}});var d=n(53751),u=n(20641),m=n(90033);const p=e=>((0,u.Qi)("data-v-40b913fe"),e=e(),(0,u.jt)(),e),h=p((()=>(0,u.Lk)("input",{id:"toggle-aepp",type:"checkbox"},null,-1))),y=p((()=>(0,u.Lk)("h2",null,[(0,u.eW)(" Wallet Iframe "),(0,u.Lk)("label",{for:"toggle-aepp"})],-1))),g={class:"group"},f=p((()=>(0,u.Lk)("div",null,"Aepp URL",-1))),N=p((()=>(0,u.Lk)("div",null,"Address",-1))),C=p((()=>(0,u.Lk)("div",null,"Node",-1))),w=p((()=>(0,u.Lk)("div",null,"Balance",-1))),S=p((()=>(0,u.Lk)("div",null,"RPC client",-1))),v=["src"];function z(e,t,n,r,a,i){const s=(0,u.g2)("Value");return(0,u.uX)(),(0,u.CE)(u.FK,null,[h,y,(0,u.Lk)("div",g,[(0,u.Lk)("div",null,[f,(0,u.Lk)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,d.D$)(((...e)=>i.navigate&&i.navigate(...e)),["prevent"]))},[(0,u.bo)((0,u.Lk)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[d.Jo,e.nextAeppUrl]])],32)]),(0,u.Lk)("div",null,[N,(0,u.Lk)("div",null,(0,m.v_)(e.address),1)]),(0,u.Lk)("div",null,[C,(0,u.Lk)("div",null,(0,m.v_)(e.nodeName),1)]),(0,u.Lk)("div",null,[w,(0,u.bF)(s,{value:e.balancePromise},null,8,["value"])]),(0,u.Lk)("div",null,[S,(0,u.Lk)("div",null,"status: "+(0,m.v_)(e.clientStatus??"no client")+", id: "+(0,m.v_)(e.clientId??"not defined"),1)]),(0,u.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>i.switchAccount&&i.switchAccount(...e))},"Switch Account"),(0,u.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>i.switchNode&&i.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,u.uX)(),(0,u.CE)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>i.disconnect&&i.disconnect(...e))}," Disconnect ")):((0,u.uX)(),(0,u.CE)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??i.shareWalletInfo)())},(0,m.v_)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,u.Q3)("",!0):((0,u.uX)(),(0,u.CE)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,v))],64)}var T=n(30982),b=n(15232);class x extends Error{constructor(e){super(e),this.name="BaseError"}}class A extends x{constructor(e){super(e),this.name="AccountError"}}class q extends x{constructor(e){super(e),this.name="AensError"}}class P extends x{constructor(e){super(e),this.name="AeppError"}}class I extends x{constructor(e){super(e),this.name="CompilerError"}}class _ extends x{constructor(e){super(e),this.name="ContractError"}}class k extends x{constructor(e){super(e),this.name="CryptographyError"}}class O extends x{constructor(e){super(e),this.name="NodeError"}}class E extends x{constructor(e){super(e),this.name="TransactionError"}}class M extends x{constructor(e){super(e),this.name="WalletError"}}class R extends x{constructor(e,t,n){super(`${e} should be ${t}, got ${n} instead`),this.name="ArgumentError"}}class B extends k{constructor(e){super(e),this.name="IllegalArgumentError"}}class D extends x{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class $ extends x{constructor(e){super(`Giving up at height ${e}`),this.name="RequestTimedOutError"}}class V extends x{constructor(e,t){super([`Giving up after ${e} blocks mined`,`transaction hash: ${t}`].join(", ")),this.name="TxTimedOutError"}}class F extends x{constructor(e){super(e),this.name="TypeError"}}class j extends x{constructor(e){super(e),this.name="UnsupportedProtocolError"}}class H extends x{constructor(e){super(e),this.name="NotImplementedError"}}class G extends x{constructor(e,t,n,r){super(`Unsupported ${e} version ${t}. Supported: >= ${n} < ${r}`),this.name="UnsupportedVersionError"}}class U extends x{constructor(e){super(e),this.name="InternalError"}}class W extends U{constructor(e="Expected to not happen, required for TS"){super(e),this.name="UnexpectedTsError"}}class L extends A{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class Q extends q{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class K extends q{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class J extends q{constructor(e){super(e),this.name="InvalidAensNameError"}}class X extends P{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class Y extends P{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class Z extends P{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class ee extends _{constructor(e){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`),this.name="BytecodeMismatchError"}}class te extends _{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class ne extends _{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class re extends _{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class ae extends _{constructor(e){super(e),this.name="MissingContractAddressError"}}class ie extends _{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class se extends _{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class oe extends _{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class ce extends _{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class le extends _{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class de extends _{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class ue extends _{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((([e])=>`"${e}"`)).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class me extends k{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class pe extends k{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class he extends k{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ye extends k{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class ge extends k{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class fe extends O{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class Ne extends O{constructor(e){super(e),this.name="NodeNotFoundError"}}class Ce extends E{constructor(e){super(e),this.name="DecodeError"}}class we extends E{constructor(e){super(e),this.name="PayloadLengthError"}}class Se extends E{constructor(e){super(e),this.name="DryRunError"}}class ve extends E{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class ze extends E{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class Te extends E{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class be extends E{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class xe extends M{constructor(e){super(e),this.name="AlreadyConnectedError"}}class Ae extends M{constructor(e){super(e),this.name="NoWalletConnectedError"}}class qe extends M{constructor(e){super(e),this.name="RpcConnectionError"}}class Pe{constructor({debug:e=!1}){this.debug=e}connect(e,t){if(this.isConnected())throw new xe("You already connected")}disconnect(){if(!this.isConnected())throw new Ae("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}n(43838);var Ie=n(1814);let _e=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),ke=function(e){return e["window"]="window",e["extension"]="extension",e}({}),Oe=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),Ee=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["unsafeSign"]="data.unsafeSign",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegationToContract"]="delegationToContract.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),Me=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const Re=[];class Be extends x{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Re.find((t=>t.code===e.code));if(null==t)throw new U(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class De extends Be{constructor(e){super("Invalid transaction"),(0,Ie.A)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,Ie.A)(De,"code",2),Re.push(De);class $e extends Be{constructor(e){super("Operation rejected by user"),(0,Ie.A)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,Ie.A)($e,"code",4),Re.push($e);class Ve extends Be{constructor(){super("Unsupported Protocol Version"),(0,Ie.A)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,Ie.A)(Ve,"code",5),Re.push(Ve);class Fe extends Be{constructor(e){super("Wallet deny your connection request"),(0,Ie.A)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,Ie.A)(Fe,"code",9),Re.push(Fe);class je extends Be{constructor(){super("You are not connected to the wallet"),(0,Ie.A)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,Ie.A)(je,"code",10),Re.push(je);class He extends Be{constructor(e){super(`You are not subscribed for account ${e}`),(0,Ie.A)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,Ie.A)(He,"code",11),Re.push(He);class Ge extends Be{constructor(){super("The peer failed to execute your request due to unknown error"),(0,Ie.A)(this,"code",12),this.name="RpcInternalError"}}(0,Ie.A)(Ge,"code",12),Re.push(Ge);class Ue extends Be{constructor(){super("Method not found"),(0,Ie.A)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function We(e,t,n){Le(e,t),t.set(e,n)}function Le(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(0,Ie.A)(Ue,"code",-32601),Re.push(Ue);var Qe=new WeakMap,Ke=new WeakMap,Je=new WeakMap;class Xe extends Pe{constructor({target:e,self:t=window,origin:n,sendDirection:r,receiveDirection:a=_e.to_aepp,...i}={}){super(i),We(this,Qe,{writable:!0,value:void 0}),We(this,Ke,{writable:!0,value:void 0}),We(this,Je,{writable:!0,value:void 0}),(0,b.A)(this,Ke,e),(0,b.A)(this,Je,t),this.origin=n,this.sendDirection=r,this.receiveDirection=a}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var n,r;if("object"!==typeof t.data||"2.0"!==(null!==(n=t.data.jsonrpc)&&void 0!==n?n:null===(r=t.data.data)||void 0===r?void 0:r.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=(0,T.A)(this,Ke)&&(0,T.A)(this,Ke)!==t.source)return;this.receiveMessage(t);let{data:a}=t;if(null!=a.type){if(t.data.type!==this.receiveDirection)return;a=a.data}e(a,t.origin,t.source)},(0,T.A)(this,Je).addEventListener("message",this.listener),(0,b.A)(this,Qe,t)}disconnect(){if(super.disconnect(),null==this.listener||null==(0,T.A)(this,Qe))throw new U("Expected to not happen, required for TS");(0,T.A)(this,Je).removeEventListener("message",this.listener),delete this.listener,(0,T.A)(this,Qe).call(this),(0,b.A)(this,Qe,void 0)}sendMessage(e){var t;if(null==(0,T.A)(this,Ke))throw new qe("Can't send messages without target");const n=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(n),(0,T.A)(this,Ke).postMessage(n,null!==(t=this.origin)&&void 0!==t?t:"*")}}n(16573),n(78100),n(77936),n(69431),n(704),n(16925);var Ye=n(81429);class Ze{async signTypedData(e,t,n){throw new H("signTypedData method")}async signDelegationToContract(e,t){throw new H("signDelegationToContract method")}async signNameDelegationToContract(e,t,n){throw new H("signNameDelegationToContract method")}async signAllNamesDelegationToContract(e,t){throw new H("signAllNamesDelegationToContract method")}async signOracleQueryDelegationToContract(e,t,n){throw new H("signOracleQueryDelegationToContract method")}async signDelegation(e,t){throw new H("signDelegation method")}}var et=n(50925),tt=n(12330),nt=n(25363),rt=n(71400);const{Buffer:at}=Ye,it=async e=>new Promise((t=>{setTimeout(t,e)})),st=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),ot=(()=>{try{return at.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),ct=ot?(e,t)=>at.concat(e.map((e=>at.from(e))),t):at.concat;function lt(e,t){return e in t}function dt(e,t){return t.includes(e)}function ut(e){return e instanceof rt.p&&404===e.statusCode&&e.message.includes("Account not found")}function mt(e){if(!(e instanceof Error))throw e}let pt=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});var ht=n(58649),yt=n(39685);const{Buffer:gt}=Ye,{encode:ft,decode:Nt}=ht;function Ct(e){return(new yt).update(e).digest()}const wt=[pt.ContractBytearray,pt.ContractStoreKey,pt.ContractStoreValue,pt.Transaction,pt.OracleQuery,pt.OracleResponse,pt.State,pt.Poi,pt.StateTrees,pt.CallStateTree,pt.Bytearray],St=[pt.KeyBlockHash,pt.MicroBlockHash,pt.BlockPofHash,pt.BlockTxHash,pt.BlockStateHash,pt.Channel,pt.ContractAddress,pt.TxHash,pt.OracleAddress,pt.OracleQueryId,pt.AccountAddress,pt.Signature,pt.Commitment,pt.PeerPubkey,pt.Name],vt={[pt.KeyBlockHash]:32,[pt.MicroBlockHash]:32,[pt.BlockPofHash]:32,[pt.BlockTxHash]:32,[pt.BlockStateHash]:32,[pt.Channel]:32,[pt.ContractAddress]:32,[pt.TxHash]:32,[pt.OracleAddress]:32,[pt.OracleQueryId]:32,[pt.AccountAddress]:32,[pt.Signature]:64,[pt.Commitment]:32,[pt.PeerPubkey]:32,[pt.State]:32};function zt(e,t){if(!lt(t,vt))return;const n=vt[t];if(null!=n&&e.length!==n)throw new we(`Payload should be ${n} bytes, got ${e.length} instead`)}const Tt=e=>Ct(Ct(e)).slice(0,4),bt=e=>ct([e,Tt(e)]);function xt(e){const t=e.slice(0,-4);if(!Tt(t).equals(e.slice(-4)))throw new me;return t}const At={encode:e=>bt(e).toString("base64"),decode:e=>xt(gt.from(e,"base64"))},qt={encode:e=>ft(bt(e)),decode:e=>xt(gt.from(Nt(e)))},Pt=e=>{const t=wt.find((t=>t===e));if(null!=t)return[t,At];const n=St.find((t=>t===e));if(null!=n)return[n,qt];throw new R("prefix",`one of ${[...St,...wt].join(", ")}`,e)};function It(e){const[t,n,r]=e.split("_");if(null==n)throw new Ce(`Encoded string missing payload: ${e}`);if(null!=r)throw new Ce(`Encoded string have extra parts: ${e}`);const[a,i]=Pt(t),s=i.decode(n);return zt(s,a),s}function _t(e,t){const[,n]=Pt(t);return zt(e,t),`${t}_${n.encode(e)}`}const{Buffer:kt}=Ye,{blake2b:Ot}=tt,{encode:Et}=nt;function Mt(e,...t){0===t.length&&(t=[pt.AccountAddress]);try{It(e);const n=e.split("_")[0];if(!dt(n,t))throw new R("Encoded string type",t.length>1?`one of ${t.join(", ")}`:t[0],n);return!0}catch(n){return!1}}function Rt(){const[e]=new BigUint64Array(et.randomBytes(8).buffer);return Number(e%BigInt(Number.MAX_SAFE_INTEGER))}function Bt(e){return kt.from(Ot(e,void 0,32))}function Dt(e){return et.sign.keyPair.fromSecretKey(e)}function $t(e=!1){const t=et.sign.keyPair(),n=kt.from(t.publicKey),r=kt.from(t.secretKey);return e?{publicKey:n,secretKey:r}:{publicKey:_t(n,pt.AccountAddress),secretKey:r.toString("hex")}}function Vt(e,t){return et.sign.detached(kt.from(e),kt.from(t))}function Ft(e,t,n){return et.sign.detached.verify(e,t,It(n))}const jt=kt.from("aeternity Signed Message:\n","utf8"),Ht=Et(jt.length);function Gt(e){const t=kt.from(e,"utf8");return Bt(ct([Ht,jt,Et(t.length),t]))}var Ut=n(67962),Wt=n(45195);const{TypeResolver:Lt,ContractByteArrayEncoder:Qt}=Ut;function Kt(e){var t;return Bt(null!==(t=Wt(e))&&void 0!==t?t:"")}function Jt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},n=(new Lt).resolveType(t,{}),r=(new Qt).encodeWithType(e,n);return Bt(It(r))}function Xt(e,t,n){return Bt(ct([Ht,new Uint8Array([0]),Jt(n),Kt(t),Bt(It(e))]))}var Yt=n(46062);const Zt={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n},en=5e4,tn=1e9,nn=1e14,rn=31,an=st({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(([e,t])=>[e,new Yt.A(t).times(nn)]));let sn=function(e){return e[e["Iris"]=5]="Iris",e[e["Ceres"]=6]="Ceres",e}({}),on=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),cn=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),ln=function(e){return e[e["Account"]=10]="Account",e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["Oracle"]=20]="Oracle",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["Name"]=30]="Name",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["ChannelClientReconnectTx"]=575]="ChannelClientReconnectTx",e[e["Channel"]=58]="Channel",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({});const{Buffer:dn}=Ye;function un(e){return{serialize(t,{buildTx:n}){return ArrayBuffer.isView(t)?dn.from(t):"string"===typeof t&&t.startsWith("tx_")?It(t):It(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackTx:n}){return n(_t(t,pt.Transaction),e)}}}function mn(e){return{serialize(t,n){return t.map((t=>e.serialize(t,n)))},deserialize(t,n){return t.map((t=>e.deserialize(t,n)))}}}function pn(e,t){return{serialize(e,{buildTx:n}){return It(n({tag:ln.Mtree,values:Object.entries(e).map((([e,r])=>({tag:ln.MtreeValue,key:It(e),value:It(n({...r,tag:t}))})))}))},deserialize(n,{unpackTx:r}){const{values:a}=r(_t(n,pt.Transaction),ln.Mtree);return Object.fromEntries(a.filter((({key:t})=>e!==pt.ContractAddress||32===t.length)).map((({key:n,value:a})=>[_t(n,e),r(_t(a,pt.Transaction),t)])))},recursiveType:!0}}function hn(e,t){return{...t,serialize(n,r){return t.serialize(null!==n&&void 0!==n?n:e,r)}}}n(21215),n(36538),n(91946);const{Buffer:yn}=Ye;function gn(e,t=!1){if(null==e)return yn.from([]);if(Number.isInteger(e)||Yt.A.isBigNumber(e)||t){if(Yt.A.isBigNumber(e)||(e=new Yt.A(e)),!e.isInteger())throw new F(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),yn.from(t,"hex")}if("string"===typeof e)return yn.from(e);throw new D}const{Buffer:fn}=Ye;function Nn(e,t){const n=fn.from([...It(e),...gn(t)]),r=Bt(n);return _t(r,pt.ContractAddress)}function Cn(e,t,n){function r(e){const t=gn(e,!0);return ct([fn.alloc(32-t.length),t])}const a=Bt(fn.from([...It(e),...r(t),...It(n)]));return _t(a,pt.OracleQueryId)}const wn=".chain";function Sn(e){const[t,n,...r]=e.split(".");if(0!==r.length)throw new R("aens name","including only one dot",e);if(n!==wn.slice(1))throw new R("aens name",`suffixed with ${wn}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new R("aens name","not containing emoji",e);let a;try{const r=new URL(`http://${t}.${n}`);if(r.username+r.password+r.port+r.search+r.hash!==""||"/"!==r.pathname)throw new R("aens name","valid",e);a=r.host}catch(i){if(i instanceof TypeError&&i.message.includes("Invalid URL"))throw new R("aens name","valid",e);throw i}if(!/^[a-z0-9.-]+$/i.test(a))throw new R("aens name","without illegal chars",e);if(a.length>63+wn.length)throw new R("aens name","not too long",e);return a}function vn(e){return _t(Bt(Sn(e)),pt.Name)}function zn(e,t=Rt()){return _t(Bt(ct([fn.from(Sn(e)),fn.from(t.toString(16).padStart(64,"0"),"hex")])),pt.Commitment)}function Tn(e=fn.from([])){return new Yt.A(fn.from(e).toString("hex"),16).toString(10)}function bn(e){Sn(e)}function xn(e){try{return bn(e),!0}catch(t){return!1}}pt.AccountAddress,pt.OracleAddress,pt.ContractAddress,pt.Channel;function An(e){const t=Sn(e).length-wn.length;return an[Math.min(t,rn)]}function qn(e){return Sn(e).length<13+wn.length}var Pn={serialize(e){if(Number(e)<0)throw new R("value","greater or equal to 0",e);return gn(e,!0)},deserialize(e){return Tn(e)}},In={serialize(e){return Pn.serialize(e)},deserialize(e){return+Pn.deserialize(e)}};function _n(e,t){return{...t,serialize(n,r,a){return t.serialize(e(n),r,a)}}}function kn(e,t){return{serialize(n){if((!0!==t||null!=n)&&n!==e)throw new R("ShortUIntConst",e,n);return In.serialize(e)},deserialize(t){const n=In.deserialize(t);if(n!==e)throw new R("ShortUIntConst",e,n);return e},constValue:e,constValueOptional:!0===t}}const{Buffer:On}=Ye,En=[pt.AccountAddress,pt.Name,pt.Commitment,pt.OracleAddress,pt.ContractAddress,pt.Channel];function Mn(...e){return{serialize(t){const n=t.slice(0,2);if(!dt(n,En))throw new Te(n);if(!dt(n,e))throw new R("Address encoding",e.join(", "),n);const r=En.indexOf(n)+1;return On.from([...gn(r),...It(t)])},deserialize(t){const n=On.from(t).readUIntBE(0,1),r=En[n-1];if(null==r)throw new ve(n);if(!dt(r,e))throw new R("Address encoding",e.join(", "),r);return _t(t.subarray(1),r)}}}const{Buffer:Rn}=Ye;function Bn(e,t){return{serialize(e){if(null==e){if(!0===t)return Rn.from([]);throw new R("Encoded data","provided",e)}return It(e)},deserialize(t){return _t(t,e)}}}const{Buffer:Dn}=Ye;var $n={serialize(e){return Dn.from(e)},deserialize(e){return e}};const Vn=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||Yt.A.isBigNumber(e));let Fn=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const jn={[Fn.AE]:0,[Fn.MILI_AE]:-3,[Fn.MICRO_AE]:-6,[Fn.NANO_AE]:-9,[Fn.PICO_AE]:-12,[Fn.FEMTO_AE]:-15,[Fn.AETTOS]:-18},Hn=(e,{denomination:t=Fn.AETTOS,targetDenomination:n=Fn.AETTOS})=>{if(!Vn(e))throw new R("value","a number",e);return new Yt.A("bigint"===typeof e?e.toString():e).shiftedBy(jn[t]-jn[n]).toFixed()};var Gn={...Pn,serializeAettos(e,t,n){return null!==e&&void 0!==e?e:"0"},serialize(e,t,{denomination:n=Fn.AETTOS,...r}){return Pn.serialize(this.serializeAettos(null!=e?Hn(e,{denomination:n}):e,t,r))}};function Un(e,t){const n=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),r=n(e),a=n(t),i=Math.max(...r,...a)+1,s=e=>e.reverse().reduce(((e,t,n)=>e+t*i**n),0);return s(r)-s(a)}function Wn(e,t,n){return Un(e,t)>=0&&(null==n||Un(e,n)<0)}const Ln=new WeakMap;async function Qn(e){const t=Ln.get(e);if(null!=t&&t.time>Date.now()-2e4)return t.gasPrice;const{nodeVersion:n}=await e._getCachedStatus();if(!Wn(n,"6.13.0"))return 0n;const{minGasPrice:r,utilization:a}=(await e.getRecentGasPrices())[0];let i=a<70?0n:BigInt(new Yt.A(r.toString()).times(1.01).integerValue().toFixed());const s=100000n*BigInt(tn);return i>s&&(console.warn([`Estimated gas price ${i} exceeds the maximum safe value for unknown reason.`,`It will be limited to ${s}.`,"To overcome this restriction provide `gasPrice`/`fee` in options."].join(" ")),i=s),Ln.set(e,{gasPrice:i,time:Date.now()}),i}var Kn={...Gn,async prepare(e,t,{onNode:n,denomination:r}){if(null!=e)return e;if(null==n)throw new R("onNode","provided (or provide `gasPrice` instead)",n);const a=await Qn(n);return 0n!==a?Hn(a,{targetDenomination:r}):void 0},serializeAettos(e=tn.toString()){if(+e<tn)throw new B(`Gas price ${e.toString()} must be bigger than ${tn}`);return e}};const Jn=15e3,Xn=20,Yn=3,Zn=e=>{var t;const n={[ln.ChannelForceProgressTx]:30,[ln.ChannelOffChainTx]:0,[ln.ContractCreateTx]:5,[ln.ContractCallTx]:12,[ln.GaAttachTx]:5,[ln.GaMetaTx]:5,[ln.PayingForTx]:.2},r=null!==(t=n[e])&&void 0!==t?t:1;return r*Jn},er=(e,t,{relativeTtl:n,innerTxSize:r})=>{switch(e){case ln.OracleRegisterTx:case ln.OracleExtendTx:case ln.OracleQueryTx:case ln.OracleResponseTx:return t*Xn+Math.ceil(32e3*n/Math.floor(525600/Yn));case ln.GaMetaTx:case ln.PayingForTx:return(t-r)*Xn;default:return t*Xn}};function tr(e){const t={[ln.OracleRegisterTx]:"oracleTtlValue",[ln.OracleExtendTx]:"oracleTtlValue",[ln.OracleQueryTx]:"queryTtlValue",[ln.OracleResponseTx]:"responseTtlValue"},{tag:n}=e;return lt(n,t)?e[t[n]]:1}function nr(e,t,n){const{length:r}=It(e),a=t(e);let i=0;return a.tag!==ln.GaMetaTx&&a.tag!==ln.PayingForTx||(i=It(n(a.tx.encodedTx)).length),Zn(a.tag)+er(a.tag,r,{relativeTtl:tr(a),innerTxSize:i})}function rr(e,t,n){let r,a=new Yt.A(0);do{r=a,a=new Yt.A(tn).times(nr(e(a),t,n))}while(!a.eq(r));return a}const ar="_gas-price:";var ir={...Gn,async prepare(e,t,{onNode:n}){if(null!=e)return e;if(null==n)throw new R("onNode","provided (or provide `fee` instead)",n);const r=await Qn(n);return 0n!==r?ar+r:void 0},serializeAettos(e,{rebuildTx:t,unpackTx:n,buildTx:r,_computingMinFee:a},{_canIncreaseFee:i}){if(null!=a)return a.toFixed();const s=rr((e=>t({_computingMinFee:e})),n,r),o=!0===(null===e||void 0===e?void 0:e.startsWith(ar))?s.dividedBy(tn).times(e.replace(ar,"")):new Yt.A(null!==e&&void 0!==e?e:s);if(s.gt(o)){if(!0===i)return s.toFixed();throw new B(`Fee ${o.toString()} must be bigger than ${s}`)}return o.toFixed()},serialize(e,t,n){return"string"===typeof e&&e.startsWith(ar)?Pn.serialize(this.serializeAettos(e,t,n)):Gn.serialize.call(this,e,t,n)}};n(10315),n(70757),n(38672),n(17637),n(61990),n(77661),n(22417);function sr(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,(n,...r)=>{const a=e();if(null==a)throw new R("wrapped value","defined",a);if("get"===t&&"_wrappedValue"===r[0])return a;const i=Reflect[t](a,...r);return"function"===typeof i&&"get"===t?i.bind(a):i}]))))}function or(e){var t;return null!==(t=e._wrappedValue)&&void 0!==t?t:e}async function cr(e,{_expectedMineRate:t,_microBlockCycle:n,onNode:r}){var a,i;const s=async(t,n,a,i)=>t!==e?null:null!=n?n:"ae_dev"===await(null===r||void 0===r?void 0:r.getNetworkId())?a:i,o=null!==(a=null!==(i=await s("key-block",t,0,18e4))&&void 0!==i?i:await s("micro-block",n,0,3e3))&&void 0!==a?a:(()=>{throw new U(`Unknown type: ${e}`)})();return Math.floor(o/3)}const lr=new WeakMap;async function dr({cached:e=!1,...t}){const n=or(t.onNode);if(e){const e=lr.get(n);if(null!=e&&e.time>Date.now()-await cr("key-block",t))return e.height}const{height:r}=await n.getCurrentKeyBlockHeight();return lr.set(n,{height:r,time:Date.now()}),r}async function ur(e,{blocks:t=5,interval:n,...r}){var a;let i;null!==(a=n)&&void 0!==a||(n=await cr("micro-block",r));do{const a=await r.onNode.getTransactionByHash(e);if(-1!==a.blockHeight)return a;null==i&&(i=0!==a.tx.ttl?-1:await dr({...r,cached:!0})+t),await it(n)}while(-1===i||await dr({...r,cached:!0})<i);throw new V(t,e)}async function mr(e,{interval:t,...n}){var r;let a;null!==(r=t)&&void 0!==r||(t=Math.min(await cr("key-block",n),5e3));do{null!=a&&await it(t),a=await dr(n)}while(a<e);return a}async function pr(e,{confirm:t=3,onNode:n,...r}){const{blockHeight:a}=await n.getTransactionByHash(e),i=await mr(a+t,{onNode:n,...r}),{blockHeight:s}=await n.getTransactionByHash(e);switch(s){case-1:throw new be(e);case a:return i;default:return pr(e,{onNode:n,confirm:t,...r})}}async function hr(e,{height:t,hash:n,onNode:r}){return null!=t?r.getAccountByPubkeyAndHeight(e,t):null!=n?r.getAccountByPubkeyAndHash(e,n):r.getAccountByPubkey(e)}async function yr(e,{format:t=Fn.AETTOS,...n}){const r=e.startsWith("ok_")?_t(It(e),pt.AccountAddress):e,{balance:a}=await hr(r,n).catch((e=>{if(!ut(e))throw e;return{balance:0n}}));return Hn(a,{targetDenomination:t})}async function gr({onNode:e}){return e.getCurrentGeneration()}async function fr(e,{onNode:t}){return"number"===typeof e?t.getGenerationByHeight(e):t.getGenerationByHash(e)}async function Nr(e,{onNode:t}){return(await t.getMicroBlockTransactionsByHash(e)).transactions}async function Cr(e,{onNode:t}){return"number"===typeof e?t.getKeyBlockByHeight(e):t.getKeyBlockByHash(e)}async function wr(e,{onNode:t}){return t.getMicroBlockHeaderByHash(e)}const Sr=new Map;async function vr(e,t){const n=Sr.get(e);if(Sr.delete(e),null==n)throw new U("Can't get dry-run request");let r;try{const e="number"===typeof n[0].top?(await Cr(n[0].top,{onNode:t})).hash:n[0].top;r=await t.protectedDryRunTxs({top:e,txEvents:n[0].txEvents,txs:n.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(n.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:Zt.amount})))})}catch(s){return void n.forEach((({reject:e})=>e(s)))}const{results:a,txEvents:i}=r;a.forEach((({result:e,reason:t,...r},a)=>{const{resolve:s,reject:o,tx:c,accountAddress:l}=n[a];"ok"===e?s({...r,txEvents:i}):o(Object.assign(new Se(t),{tx:c,accountAddress:l}))}))}async function zr(e,t,{top:n,txEvents:r,combine:a,onNode:i}){var s;const o=!0===a?[n,r].join():"immediate",c=null!==(s=Sr.get(o))&&void 0!==s?s:[];return Sr.set(o,c),new Promise(((s,l)=>{var d;c.push({tx:e,accountAddress:t,top:n,txEvents:r,resolve:s,reject:l}),!0===a?null!==(d=c.timeout)&&void 0!==d||(c.timeout=setTimeout((()=>{vr(o,i)}))):vr(o,i)}))}async function Tr(e,{onNode:t}){return t.getContractCode(e)}async function br(e,{onNode:t}){return t.getContract(e)}async function xr(e,{onNode:t}){return t.getNameEntryByName(e)}async function Ar(e,t,{verify:n=!0,resolveByNode:r=!1,onNode:a}){if(xn(e)){if(n||r){const n=await a.getNameEntryByName(e),i=n.pointers.find((e=>e.key===t));if(null==i)throw new Q(e,t);if(r)return i.id}return vn(e)}try{return It(e),e}catch(i){throw new J(`Invalid name or address: ${e}`)}}var qr={...In,serialize(e){return In.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,{onNode:n,absoluteTtl:r,_isInternalBuild:a,...i}){if(!0!==r&&0!==e&&(null!=e||!0===a)){var s;if(null==n)throw new R("onNode","provided",n);e=(null!==(s=e)&&void 0!==s?s:3)+await dr({...i,onNode:n,cached:!0})}return e}};function Pr(e){return{...In,async prepare(t,n,r){if(null!=t)return t;const{onNode:a,strategy:i}=r,s=r[e],o="provided (or provide `nonce` instead)";if(null==a)throw new R("onNode",o,a);if(null==s)throw new R("senderId",o,s);return(await a.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:i}).catch((e=>{if(!ut(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const Ir=Mn(...En);var _r={serialize(e){if(e.length>32)throw new B(`Expected 32 pointers or less, got ${e.length} instead`);return e.map((e=>[gn(e.key),Ir.serialize(e.id)]))},deserialize(e){return e.map((([e,t])=>({key:e.toString(),id:Ir.deserialize(t)})))}};const{Buffer:kr}=Ye;var Or={serialize(e){return kr.from(e)},deserialize(e){return e.toString()}},Er={serialize(e){return Or.serialize(e)},deserialize(e){return Or.deserialize(e)}},Mr={...Gn,serializeAettos(e,t){const n=An(t.name),r=new Yt.A(null!==e&&void 0!==e?e:n);if(n.gt(r))throw new K(r,n);return r.toFixed()},serialize(e,t,n){return Gn.serialize.call(this,e,t,n)}};const Rr=Mn(pt.Name);var Br={...Rr,serialize(e){return Rr.serialize(xn(e)?vn(e):e)}};const{Buffer:Dr}=Ye,$r=Dr.from([1]),Vr=Dr.from([2]),Fr=1024,jr=Mn(...En);var Hr={serialize(e){if(e.length>32)throw new B(`Expected 32 pointers or less, got ${e.length} instead`);return e.map((({key:e,id:t})=>{let n;if(Mt(t,...En)&&(n=[$r,jr.serialize(t)]),Mt(t,pt.Bytearray)){const e=It(t);if(e.length>Fr)throw new R("Raw pointer",`shorter than ${Fr+1} bytes`,`${e.length} bytes`);n=[Vr,e]}if(null==n)throw new Ce(`Unknown AENS pointer value: ${t}`);return[gn(e),Dr.concat(n)]}))},deserialize(e){return e.map((([e,t])=>{const n=t.subarray(0,1),r=t.subarray(1);let a;if(n.equals($r)&&(a=jr.deserialize(r)),n.equals(Vr)&&(a=_t(r,pt.Bytearray)),null==a)throw new Ce(`Unknown AENS pointer tag: ${n}`);return{key:e.toString(),id:a}}))}};const{Buffer:Gr}=Ye,Ur={[sn.Iris]:{"contract-create":{vmVersion:[on.Fate2],abiVersion:[cn.Fate]},"contract-call":{vmVersion:[],abiVersion:[cn.Fate,cn.Sophia]},"oracle-call":{vmVersion:[],abiVersion:[cn.NoAbi,cn.Fate]}},[sn.Ceres]:{"contract-create":{vmVersion:[on.Fate3],abiVersion:[cn.Fate]},"contract-call":{vmVersion:[],abiVersion:[cn.Fate]},"oracle-call":{vmVersion:[],abiVersion:[cn.NoAbi,cn.Fate]}}};function Wr(e,t){var n;const r=Ur[e][t];return{vmVersion:null!==(n=r.vmVersion[0])&&void 0!==n?n:on.Fate2,abiVersion:r.abiVersion[0]}}var Lr={serialize(e,t,{consensusProtocolVersion:n=sn.Iris}){var r;return null!==(r=e)&&void 0!==r||(e=Wr(n,"contract-create")),Gr.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(sn).length&&null!=n.onNode?Wr((await n.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,n]=e;return{vmVersion:+t,abiVersion:+n}}};const{Buffer:Qr}=Ye;var Kr={serialize(e){return Qr.from([e?1:0])},deserialize(e){return 1===e[0]}};function Jr(e,t,n,r){return e-+nr(t(e),n,r)}var Xr={...In,serialize(e,{tag:t,rebuildTx:n,unpackTx:r,buildTx:a,_computingGasLimit:i},{gasMax:s=6e6}){if(null!=i)return In.serialize(i);const o=t===ln.GaMetaTx?en:Jr(s,(e=>n({_computingGasLimit:e,_canIncreaseFee:!0})),r,a),c=null!==e&&void 0!==e?e:o;if(c>o)throw new B(`Gas limit ${c} must be less or equal to ${o}`);return In.serialize(c)}};const{Buffer:Yr}=Ye;var Zr={_getProtocolDetails(e,t){const n=ln.ContractCallTx===t||ln.GaMetaTx===t?"contract-call":"oracle-call";return Wr(e,n).abiVersion},serialize(e,{tag:t},{consensusProtocolVersion:n=sn.Iris}){const r=null!==e&&void 0!==e?e:this._getProtocolDetails(n,t);return Yr.from([r])},async prepare(e,{tag:t},n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(sn).length&&null!=n.onNode?this._getProtocolDetails((await n.onNode.getNodeInfo()).consensusProtocolVersion,t):void 0},deserialize(e){return e[0]}};const{Buffer:ea}=Ye;function ta(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new R("value","to be a number",e);if(e>255)throw new R("value","to be less than 256",e);if(!dt(e,t))throw new R("value","to be a value of Enum",e);return ea.from([e])},deserialize(e){if(1!==e.length)throw new R("buffer","to have single element",e.length);const n=e[0];if(!dt(n,t))throw new R("value","to be a value of Enum",n);return n}}}var na={serialize(e){return gn(e)},deserialize(e){return e.toString()}},ra={...Gn,async prepare(e,t,n){if(null!=e)return e;const{onNode:r,oracleId:a}=n,i="provided (or provide `queryFee` instead)";if(null==r)throw new R("onNode",i,r);if(null==a)throw new R("oracleId",i,a);return(await r.getOracleByPubkey(a)).queryFee.toString()}},aa=n(18212);const{Buffer:ia}=Ye;var sa;function oa(e,t){la(e,t),t.add(e)}function ca(e,t,n){la(e,t),t.set(e,n)}function la(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function da(e,t,n){return ma(t,e),n}function ua(e,t,n){return ma(t,e),n}function ma(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const{encode:pa}=aa;var ha=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}(ha||{}),ya=new WeakMap,ga=new WeakMap,fa=new WeakMap,Na=new WeakMap,Ca=new WeakMap,wa=new WeakMap,Sa=new WeakSet,va=new WeakSet;class za{get isComplete(){return(0,T.A)(this,ga)}constructor(e,t,n,r){if(oa(this,va),oa(this,Sa),ca(this,ya,{writable:!0,value:void 0}),ca(this,ga,{writable:!0,value:!0}),ca(this,fa,{writable:!0,value:void 0}),ca(this,Na,{writable:!0,value:void 0}),ca(this,Ca,{writable:!0,value:void 0}),ca(this,wa,{writable:!0,value:void 0}),(0,b.A)(this,Na,t),(0,b.A)(this,Ca,n),(0,b.A)(this,wa,r),(0,b.A)(this,ya,e[0].toString("hex")),(0,b.A)(this,fa,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=(0,T.A)(this,fa)[(0,T.A)(this,ya)])Object.entries((0,T.A)(this,fa)).forEach((([e,t])=>{if(ua(za,za,Ta).call(za,t)!==e)throw new pe;const{type:n}=ua(za,za,ba).call(za,t);switch(n){case ha.Branch:t.slice(0,16).filter((e=>e.length)).forEach((e=>{null==(0,T.A)(this,fa)[e.toString("hex")]&&(0,b.A)(this,ga,!1)}));break;case ha.Extension:if(null==(0,T.A)(this,fa)[t[1].toString("hex")])throw new he("Can't find a node by hash in extension node");break;case ha.Leaf:break;default:throw new U(`Unknown MPTree node type: ${n}`)}}));else{if(0!==Object.keys((0,T.A)(this,fa)).length)throw new he("Can't find a node by root hash");(0,b.A)(this,ga,!1)}}isEqual(e){return(0,T.A)(this,ya)===(0,T.A)(e,ya)}serialize(){return[ia.from((0,T.A)(this,ya),"hex"),Object.entries((0,T.A)(this,fa)).map((([e,t])=>[ia.from(e,"hex"),t]))]}get(e){const t=da(this,Sa,xa).call(this,It(e).toString("hex"));return null==t?t:(0,T.A)(this,wa).call(this,_t(t,pt.Transaction),(0,T.A)(this,Ca))}toObject(){return Object.fromEntries(da(this,va,Aa).call(this).filter((([e])=>(0,T.A)(this,Na)!==pt.ContractAddress||66!==e.length)).map((([e,t])=>[_t(ia.from(e,"hex"),(0,T.A)(this,Na)),(0,T.A)(this,wa).call(this,_t(t,pt.Transaction),(0,T.A)(this,Ca))])))}}function Ta(e){return ia.from(Bt(pa(e))).toString("hex")}function ba(e){switch(e.length){case 17:return{type:ha.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new ge(t);const n=t<=1?ha.Extension:ha.Leaf,r=[0,2].includes(t)?2:1;return{type:n,...n===ha.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(r)}}default:throw new ye(e.length)}}function xa(e){let t=(0,T.A)(this,ya),n=e;while(1){const e=(0,T.A)(this,fa)[t];if(null==e){if(!this.isComplete)return;throw new U("Can't find node in complete tree")}const{type:r,value:a,path:i}=ua(sa,sa,ba).call(sa,e);switch(r){case ha.Branch:if(0===n.length)return a;t=e[+`0x${n[0]}`].toString("hex"),n=n.substring(1);break;case ha.Extension:if(n.substring(0,null===i||void 0===i?void 0:i.length)!==i)return;t=e[1].toString("hex"),n=n.substring(i.length);break;case ha.Leaf:if(i!==n)return;return a;default:throw new U(`Unknown MPTree node type: ${r}`)}}}function Aa(){const e=[],t=(n,r)=>{const a=(0,T.A)(this,fa)[n];if(null==a){if(!this.isComplete)return;throw new U("Can't find node in complete tree")}const{type:i,value:s,path:o}=ua(sa,sa,ba).call(sa,a);switch(i){case ha.Branch:a.slice(0,16).map(((e,t)=>[e,t])).filter((([e])=>e.length)).forEach((([e,n])=>t(e.toString("hex"),r+n.toString(16)))),null!=s&&e.push([r,s]);break;case ha.Extension:t(a[1].toString("hex"),r+o);break;case ha.Leaf:if(null==s)throw new W;e.push([r+o,s]);break;default:throw new U(`Unknown MPTree node type: ${i}`)}};return t((0,T.A)(this,ya),""),e}function qa(e,t){return{serialize(e){return e.serialize()},deserialize(n,{unpackTx:r}){return new za(n,e,t,r)}}}function Pa(e){return{serialize(t,{buildTx:n}){return It(n({tag:e,payload:t}))},deserialize(t,{unpackTx:n}){return n(_t(t,pt.Transaction),e).payload},recursiveType:!0}}sa=za;let Ia=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({}),_a=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({});const ka=un(),Oa=un(ln.SignedTx),Ea=mn(un(ln.MtreeValue)),Ma=un(ln.TreesPoi),Ra=pn(pt.ContractAddress,ln.Contract),Ba=pn(pt.AccountAddress,ln.Account),Da=pn(pt.Bytearray,ln.ContractCall),$a=pn(pt.Channel,ln.Channel),Va=pn(pt.Name,ln.Name),Fa=pn(pt.OracleAddress,ln.Oracle),ja=hn(3600,In),Ha=_n((e=>{var t;const n=18e4;if(null!==(t=e)&&void 0!==t||(e=n),e>=1&&e<=n)return e;throw new R("nameTtl",`a number between 1 and ${n} blocks`,e)}),In),Ga=[{tag:kn(ln.Account),version:kn(1),nonce:In,balance:Pn},{tag:kn(ln.Account),version:kn(2,!0),flags:Pn,nonce:In,balance:Pn,gaContract:Mn(pt.ContractAddress,pt.Name),gaAuthFun:Bn(pt.ContractBytearray)},{tag:kn(ln.SignedTx),version:kn(1,!0),signatures:mn($n),encodedTx:ka},{tag:kn(ln.SpendTx),version:kn(1,!0),senderId:Mn(pt.AccountAddress),recipientId:Mn(pt.AccountAddress,pt.ContractAddress,pt.Name),amount:Gn,fee:ir,ttl:qr,nonce:Pr("senderId"),payload:Bn(pt.Bytearray,!0)},{tag:kn(ln.Name),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nameTtl:In,status:$n,clientTtl:In,pointers:_r},{tag:kn(ln.NamePreclaimTx),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),commitmentId:Mn(pt.Commitment),fee:ir,ttl:qr},{tag:kn(ln.NameClaimTx),version:kn(2,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),name:Er,nameSalt:Pn,nameFee:Mr,fee:ir,ttl:qr},{tag:kn(ln.NameUpdateTx),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),nameId:Br,nameTtl:Ha,pointers:_r,clientTtl:ja,fee:ir,ttl:qr},{tag:kn(ln.NameUpdateTx),version:kn(2),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),nameId:Br,nameTtl:Ha,pointers:Hr,clientTtl:ja,fee:ir,ttl:qr},{tag:kn(ln.NameTransferTx),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),nameId:Br,recipientId:Mn(pt.AccountAddress,pt.Name),fee:ir,ttl:qr},{tag:kn(ln.NameRevokeTx),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),nameId:Br,fee:ir,ttl:qr},{tag:kn(ln.Contract),version:kn(1,!0),owner:Mn(pt.AccountAddress),ctVersion:Lr,code:Bn(pt.ContractBytearray),log:Bn(pt.ContractBytearray),active:Kr,referers:mn(Mn(pt.AccountAddress)),deposit:Gn},{tag:kn(ln.ContractCreateTx),version:kn(1,!0),ownerId:Mn(pt.AccountAddress),nonce:Pr("ownerId"),code:Bn(pt.ContractBytearray),ctVersion:Lr,fee:ir,ttl:qr,deposit:_n(((e=0)=>{if(0===+e)return e;throw new R("deposit","equal 0 (because is not refundable)",e)}),Gn),amount:Gn,gasLimit:Xr,gasPrice:Kn,callData:Bn(pt.ContractBytearray)},{tag:kn(ln.ContractCallTx),version:kn(1,!0),callerId:Mn(pt.AccountAddress),nonce:Pr("callerId"),contractId:Mn(pt.ContractAddress,pt.Name),abiVersion:Zr,fee:ir,ttl:qr,amount:Gn,gasLimit:Xr,gasPrice:Kn,callData:Bn(pt.ContractBytearray)},{tag:kn(ln.ContractCall),version:kn(2,!0),callerId:Mn(pt.AccountAddress),callerNonce:In,height:In,contractId:Mn(pt.ContractAddress),gasPrice:Pn,gasUsed:In,returnValue:Bn(pt.ContractBytearray),returnType:ta(_a),log:mn($n)},{tag:kn(ln.Oracle),version:kn(1,!0),accountId:Mn(pt.AccountAddress),queryFormat:na,responseFormat:na,queryFee:Gn,oracleTtlValue:In,abiVersion:Zr},{tag:kn(ln.OracleRegisterTx),version:kn(1,!0),accountId:Mn(pt.AccountAddress),nonce:Pr("accountId"),queryFormat:na,responseFormat:na,queryFee:Gn,oracleTtlType:hn(Ia.delta,ta(Ia)),oracleTtlValue:hn(500,In),fee:ir,ttl:qr,abiVersion:Zr},{tag:kn(ln.OracleExtendTx),version:kn(1,!0),oracleId:Mn(pt.OracleAddress,pt.Name),nonce:Pr("oracleId"),oracleTtlType:hn(Ia.delta,ta(Ia)),oracleTtlValue:hn(500,In),fee:ir,ttl:qr},{tag:kn(ln.OracleQueryTx),version:kn(1,!0),senderId:Mn(pt.AccountAddress),nonce:Pr("senderId"),oracleId:Mn(pt.OracleAddress,pt.Name),query:na,queryFee:ra,queryTtlType:hn(Ia.delta,ta(Ia)),queryTtlValue:hn(10,In),responseTtlType:hn(Ia.delta,ta(Ia)),responseTtlValue:hn(10,In),fee:ir,ttl:qr},{tag:kn(ln.OracleResponseTx),version:kn(1,!0),oracleId:Mn(pt.OracleAddress),nonce:Pr("oracleId"),queryId:Bn(pt.OracleQueryId),response:na,responseTtlType:hn(Ia.delta,ta(Ia)),responseTtlValue:hn(10,In),fee:ir,ttl:qr},{tag:kn(ln.ChannelCreateTx),version:kn(2,!0),initiator:Mn(pt.AccountAddress),initiatorAmount:Pn,responder:Mn(pt.AccountAddress),responderAmount:Pn,channelReserve:Pn,lockPeriod:Pn,ttl:qr,fee:ir,initiatorDelegateIds:mn(Mn(...En)),responderDelegateIds:mn(Mn(...En)),stateHash:Bn(pt.State),nonce:Pr("initiator")},{tag:kn(ln.ChannelCloseMutualTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),initiatorAmountFinal:Pn,responderAmountFinal:Pn,ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelCloseSoloTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),payload:Bn(pt.Transaction),poi:Ma,ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelSlashTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),payload:Bn(pt.Transaction),poi:Ma,ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelDepositTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),amount:Pn,ttl:qr,fee:ir,stateHash:Bn(pt.State),round:In,nonce:Pr("fromId")},{tag:kn(ln.ChannelWithdrawTx),version:kn(1,!0),channelId:Mn(pt.Channel),toId:Mn(pt.AccountAddress),amount:Pn,ttl:qr,fee:ir,stateHash:Bn(pt.State),round:In,nonce:Pr("fromId")},{tag:kn(ln.ChannelSettleTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),initiatorAmountFinal:Pn,responderAmountFinal:Pn,ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelForceProgressTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),payload:Bn(pt.Transaction),round:In,update:Bn(pt.ContractBytearray),stateHash:Bn(pt.State),offChainTrees:Bn(pt.StateTrees),ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelOffChainTx),version:kn(2,!0),channelId:Mn(pt.Channel),round:In,stateHash:Bn(pt.State)},{tag:kn(ln.Channel),version:kn(3,!0),initiator:Mn(pt.AccountAddress),responder:Mn(pt.AccountAddress),channelAmount:Pn,initiatorAmount:Pn,responderAmount:Pn,channelReserve:Pn,initiatorDelegateIds:mn(Mn(...En)),responderDelegateIds:mn(Mn(...En)),stateHash:Bn(pt.State),round:In,soloRound:Pn,lockPeriod:Pn,lockedUntil:Pn,initiatorAuth:Bn(pt.ContractBytearray),responderAuth:Bn(pt.ContractBytearray)},{tag:kn(ln.ChannelSnapshotSoloTx),version:kn(1,!0),channelId:Mn(pt.Channel),fromId:Mn(pt.AccountAddress),payload:Bn(pt.Transaction),ttl:qr,fee:ir,nonce:Pr("fromId")},{tag:kn(ln.ChannelOffChainUpdateTransfer),version:kn(1,!0),from:Mn(pt.AccountAddress),to:Mn(pt.AccountAddress),amount:Pn},{tag:kn(ln.ChannelOffChainUpdateDeposit),version:kn(1,!0),from:Mn(pt.AccountAddress),amount:Pn},{tag:kn(ln.ChannelOffChainUpdateWithdraw),version:kn(1,!0),from:Mn(pt.AccountAddress),amount:Pn},{tag:kn(ln.ChannelOffChainUpdateCreateContract),version:kn(1,!0),owner:Mn(pt.AccountAddress),ctVersion:Lr,code:Bn(pt.ContractBytearray),deposit:Pn,callData:Bn(pt.ContractBytearray)},{tag:kn(ln.ChannelOffChainUpdateCallContract),version:kn(1,!0),caller:Mn(pt.AccountAddress),contract:Mn(pt.ContractAddress),abiVersion:Zr,amount:Pn,callData:Bn(pt.ContractBytearray),callStack:$n,gasPrice:Kn,gasLimit:Xr},{tag:kn(ln.ChannelClientReconnectTx),version:kn(1,!0),channelId:Mn(pt.Channel),round:In,role:na,pubkey:Mn(pt.AccountAddress)},{tag:kn(ln.TreesPoi),version:kn(1,!0),accounts:mn(qa(pt.AccountAddress,ln.Account)),calls:mn(qa(pt.Bytearray,ln.ContractCall)),channels:mn(qa(pt.Channel,ln.Channel)),contracts:mn(qa(pt.ContractAddress,ln.Contract)),ns:mn(qa(pt.Name,ln.Name)),oracles:mn(qa(pt.OracleAddress,ln.Oracle))},{tag:kn(ln.StateTrees),version:kn(0,!0),contracts:Pa(ln.ContractsMtree),calls:Pa(ln.CallsMtree),channels:Pa(ln.ChannelsMtree),ns:Pa(ln.NameserviceMtree),oracles:Pa(ln.OraclesMtree),accounts:Pa(ln.AccountsMtree)},{tag:kn(ln.Mtree),version:kn(1,!0),values:Ea},{tag:kn(ln.MtreeValue),version:kn(1,!0),key:$n,value:$n},{tag:kn(ln.ContractsMtree),version:kn(1,!0),payload:Ra},{tag:kn(ln.CallsMtree),version:kn(1,!0),payload:Da},{tag:kn(ln.ChannelsMtree),version:kn(1,!0),payload:$a},{tag:kn(ln.NameserviceMtree),version:kn(1,!0),payload:Va},{tag:kn(ln.OraclesMtree),version:kn(1,!0),payload:Fa},{tag:kn(ln.AccountsMtree),version:kn(1,!0),payload:Ba},{tag:kn(ln.GaAttachTx),version:kn(1,!0),ownerId:Mn(pt.AccountAddress),nonce:Pr("ownerId"),code:Bn(pt.ContractBytearray),authFun:$n,ctVersion:Lr,fee:ir,ttl:qr,gasLimit:Xr,gasPrice:Kn,callData:Bn(pt.ContractBytearray)},{tag:kn(ln.GaMetaTx),version:kn(2,!0),gaId:Mn(pt.AccountAddress),authData:Bn(pt.ContractBytearray),abiVersion:Zr,fee:ir,gasLimit:Xr,gasPrice:Kn,tx:Oa},{tag:kn(ln.PayingForTx),version:kn(1,!0),payerId:Mn(pt.AccountAddress),nonce:Pr("payerId"),fee:ir,tx:Oa},{tag:kn(ln.GaMetaTxAuthData),version:kn(1,!0),fee:Gn,gasPrice:Kn,txHash:Bn(pt.TxHash)}],{decode:Ua,encode:Wa}=aa;function La(e,t,n,r){const a=e.filter((e=>e.tag.constValue===n));if(0===a.length)throw new ze(`${t[n]} (${n})`,0);if(null==r){const e=a.find((e=>e.version.constValueOptional));if(null==e)throw new U(`Can't find default schema of ${t[n]} (${n})`);r=e.version.constValue}const i=a.find((e=>e.version.constValue===r));if(null==i)throw new ze(`${t[n]} (${n})`,r);return Object.entries(i)}function Qa(e,t,n,r,a){const i=La(e,t,n.tag,n.version),s=i.map((([e,t])=>t.serialize(n[e],{...n,...r},n)));return _t(Wa(s),a)}function Ka(e,t,n,r,a){const i=Ua(It(n)),s=+Tn(i[0]),o=+Tn(i[1]),c=La(e,t,s,o);if(null!=r&&r!==s)throw new Ce(`Expected ${t[r]} tag, got ${t[s]} instead`);if(i.length!==c.length)throw new R("RLP length",c.length,i.length);return Object.fromEntries(c.map((([e,t],n)=>[e,t.deserialize(i[n],a)])))}function Ja(e,t){return La(Ga,ln,e,t)}function Xa(e,{prefix:t}={}){return Qa(Ga,ln,e,{unpackTx:Za,buildTx:Xa,rebuildTx:t=>Xa({...e,...t})},null!==t&&void 0!==t?t:pt.Transaction)}async function Ya(e){return await Promise.all(Ja(e.tag,e.version).map((async([t,n])=>{null!=n.prepare&&(e[t]=await n.prepare(e[t],e,e))}))),Xa(e)}function Za(e,t){return Ka(Ga,ln,e,t,{unpackTx:Za})}function ei(e){const t="string"===typeof e&&e.startsWith("tx_")?It(e):e;return _t(Bt(t),pt.TxHash)}function ti(e){let t=Za(e);if(ln.SignedTx===t.tag&&(t=t.encodedTx),ln.ContractCreateTx!==t.tag&&ln.GaAttachTx!==t.tag)throw new R("contractTx","a contractCreateTx or gaAttach",t.tag);return Nn(t.ownerId,t.nonce)}let ni=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const ri=Mn(pt.OracleAddress),ai={serialize(e){return ri.serialize(_t(It(e),pt.OracleAddress))},deserialize(e){return _t(It(ri.deserialize(e)),pt.OracleQueryId)}},ii=[{tag:kn(ni.AensWildcard),version:kn(1,!0),accountAddress:Mn(pt.AccountAddress),contractAddress:Mn(pt.ContractAddress)},{tag:kn(ni.AensName),version:kn(1,!0),accountAddress:Mn(pt.AccountAddress),nameId:Br,contractAddress:Mn(pt.ContractAddress)},{tag:kn(ni.AensPreclaim),version:kn(1,!0),accountAddress:Mn(pt.AccountAddress),contractAddress:Mn(pt.ContractAddress)},{tag:kn(ni.Oracle),version:kn(1,!0),accountAddress:Mn(pt.AccountAddress),contractAddress:Mn(pt.ContractAddress)},{tag:kn(ni.OracleResponse),version:kn(1,!0),queryId:ai,contractAddress:Mn(pt.ContractAddress)}];function si(e){return Qa(ii,ni,e,{},pt.Bytearray)}function oi(e,t){return Ka(ii,ni,e,t,{})}const{Buffer:ci}=Ye,li=new WeakMap;function di(e,t,n){const r=[t];n&&r.push("inner_tx");const a=It(e);return ct([ci.from(r.join("-")),Bt(a)])}class ui extends Ze{constructor(e){if(super(),e="string"===typeof e?ci.from(e,"hex"):e,64!==e.length)throw new R("secretKey","64 bytes",e.length);li.set(this,e),this.address=_t(Dt(e).publicKey,pt.AccountAddress)}static generate(){return new ui($t().secretKey)}async sign(e,t){const n=li.get(this);if(null==n)throw new W;return Vt(e,n)}async signTransaction(e,{innerTx:t,networkId:n,...r}={}){if(null==n)throw new R("networkId","provided",n);const a=It(e),i=di(e,n,!0===t),s=[await this.sign(i,r)];return Xa({tag:ln.SignedTx,encodedTx:a,signatures:s})}async signMessage(e,t){return this.sign(Gt(e),t)}async signTypedData(e,t,{name:n,version:r,networkId:a,contractAddress:i,...s}={}){const o=Xt(e,t,{name:n,version:r,networkId:a,contractAddress:i}),c=await this.sign(o,s);return _t(c,pt.Signature)}async signDelegationToContract(e,{networkId:t,consensusProtocolVersion:n,isOracle:r}={}){if(null==r){const e=null!=n?sn[n]:"unknown";console.warn(`AccountMemory:signDelegationToContract: isOracle is not set. By default, sdk would generate an AENS preclaim delegation signature, but it won't be the same as the oracle delegation signature in Ceres (current protocol is ${e}).`)}if(n===sn.Ceres){const n=si({tag:!0===r?ni.Oracle:ni.AensPreclaim,accountAddress:this.address,contractAddress:e});return this.signDelegation(n,{networkId:t})}if(null==t)throw new R("networkId","provided",t);const a=ct([ci.from(t),It(this.address),It(e)]),i=await this.sign(a);return _t(i,pt.Signature)}async signNameDelegationToContract(e,t,{networkId:n,consensusProtocolVersion:r}={}){if(r===sn.Ceres){const r=si({tag:ni.AensName,accountAddress:this.address,contractAddress:e,nameId:t});return this.signDelegation(r,{networkId:n})}if(null==n)throw new R("networkId","provided",n);const a=ct([ci.from(n),It(this.address),It(vn(t)),It(e)]),i=await this.sign(a);return _t(i,pt.Signature)}async signAllNamesDelegationToContract(e,{networkId:t,consensusProtocolVersion:n}={}){if(n===sn.Ceres){const n=si({tag:ni.AensWildcard,accountAddress:this.address,contractAddress:e});return this.signDelegation(n,{networkId:t})}if(null==t)throw new R("networkId","provided",t);const r=ct([ci.from(t),It(this.address),ci.from("AENS"),It(e)]),a=await this.sign(r);return _t(a,pt.Signature)}async signOracleQueryDelegationToContract(e,t,{networkId:n,consensusProtocolVersion:r}={}){if(r===sn.Ceres){const r=si({tag:ni.OracleResponse,queryId:t,contractAddress:e});return this.signDelegation(r,{networkId:n})}const a=It(t),i=It(this.address);if(0===a.compare(i))throw new R("oracleQueryId","not equal to account address",t);if(null==n)throw new R("networkId","provided",n);const s=ct([ci.from(n),a,It(e)]),o=await this.sign(s);return _t(o,pt.Signature)}async signDelegation(e,{networkId:t}={}){if(null==t)throw new R("networkId","provided",t);const n=ct([Ht,new Uint8Array([1]),ci.from(t),It(e)]),r=await this.sign(n);return _t(r,pt.Signature)}}var mi=n(79562),pi=n(48283),hi=n(15314);const yi=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,n){var r;const a=t.headers.get("__queue");t.headers.delete("__queue");const i=async()=>n(t);if(null==a)return i();const s=(null!==(r=e.get(a))&&void 0!==r?r:Promise.resolve()).then(i);return e.set(a,s.catch((()=>{}))),s}},position:"perCall"}},gi=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const a=JSON.stringify([t.url,t.body]),i=null!==(r=e.get(a))&&void 0!==r?r:n(t);e.set(a,i);try{return await i}finally{e.delete(a)}}},position:"perCall"}},fi=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const a=JSON.stringify([t.url,t.body]),i=null!==(r=e.get(a))&&void 0!==r?r:n(t);return e.set(a,i),i}},position:"perCall"}},Ni=e=>({policy:{name:"error-formatter",async sendRequest(t,n){try{return await n(t)}catch(a){var r;if(!(a instanceof rt.p)||null==a.request)throw a;const t=`${new URL(a.request.url).pathname.slice(1)} error`;if(null==(null===(r=a.response)||void 0===r?void 0:r.bodyAsText))throw""===a.message&&(a.message=`${t}: ${a.code}`),a;const n=a.response.parsedBody;a.message=t;const i=null==n?` ${a.response.status} status code`:e(n);throw""!==i&&(a.message+=`:${i}`),a}}},position:"perCall"}),Ci=(e,t,n,r)=>({policy:{name:"version-check",async sendRequest(a,i){if(a.headers.has("__version-check"))return a.headers.delete("__version-check"),i(a);const s={requestOptions:{customHeaders:{"__version-check":"true"}}},o=[await t(s),n,r];if(!Wn(...o))throw new G(e,...o);return i(a)}},position:"perCall"}),wi=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(n,r){var a;const i=null!==(a=n.headers.get("__retry-code"))&&void 0!==a?a:NaN;n.headers.delete("__retry-code");const s=[200,400,403,410,500].filter((e=>e!==+i)),o=new Array(e).fill(0).map(((t,n)=>((n+1)/e)**2)),c=o.reduce(((e,t)=>e+t),0),l=o.map((e=>Math.floor(e/c*t)));let d=new rt.p("Not expected to be thrown");for(let t=0;t<=e;t+=1){if(0!==t){await it(l[t-1]);const e=new URL(n.url);e.searchParams.set("__sdk-retry",t.toString()),n.url=e.toString()}try{return await r(n)}catch(p){var u,m;if(!(p instanceof rt.p))throw p;if(s.includes(null!==(u=null===(m=p.response)||void 0===m?void 0:m.status)&&void 0!==u?u:0))throw p;d=p}}throw d}},position:"perCall"});var Si=n(12173),vi=n(87634);const zi={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Ti={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}},errorCode:{serializedName:"error_code",type:{name:"String"}}}}},bi={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{serializedName:"target",required:!0,type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},xi={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},Ai={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{serializedName:"height",required:!0,type:{name:"String"}}}}},qi={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}}}}},Pi={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},Ii={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{serializedName:"block_height",required:!0,type:{name:"String"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},encodedTx:{serializedName:"encoded_tx",type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},_i={type:{name:"Composite",className:"Tx",modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",type:{name:"String"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{serializedName:"responder_amount",type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",type:{name:"String"}},lockPeriod:{serializedName:"lock_period",type:{name:"String"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{serializedName:"round",type:{name:"String"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",type:{name:"String"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{serializedName:"query_fee",type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{serializedName:"name_salt",type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{serializedName:"name_ttl",type:{name:"String"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",type:{name:"String"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{serializedName:"vm_version",type:{name:"String"}},deposit:{serializedName:"deposit",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},gasPrice:{serializedName:"gas_price",type:{name:"String"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},ki={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Oi={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},Ei={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},Mi={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},Ri={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},Bi={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{serializedName:"count",required:!0,type:{name:"String"}}}}},Di={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},$i={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{serializedName:"balance",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},Vi={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{serializedName:"next_nonce",required:!0,type:{name:"String"}}}}},Fi={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},ji={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Hi={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},Gi={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},Ui={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},Wi={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Li={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},Qi={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{serializedName:"caller_nonce",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},Ki={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},Ji={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},Xi={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},Yi={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},Zi={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},es={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}}}}},ts={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},ns={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},rs={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}}}}},as={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},is={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{serializedName:"sender_nonce",required:!0,type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}}}}},ss={type:{name:"Composite",className:"AuctionEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},startedAt:{serializedName:"started_at",type:{name:"String"}},endsAt:{serializedName:"ends_at",required:!0,type:{name:"String"}},highestBidder:{serializedName:"highest_bidder",required:!0,type:{name:"String"}},highestBid:{serializedName:"highest_bid",required:!0,type:{name:"String"}}}}},os={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},cs={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{serializedName:"channel_amount",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},soloRound:{serializedName:"solo_round",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},lockedUntil:{serializedName:"locked_until",required:!0,type:{name:"String"}}}}},ls={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},ds={type:{name:"Composite",className:"SyncStatus",modelProperties:{progress:{serializedName:"progress",required:!0,type:{name:"Number"}},target:{serializedName:"target",required:!0,type:{name:"String"}},speed:{serializedName:"speed",required:!0,type:{name:"Number"}},estimate:{serializedName:"estimate",required:!0,type:{name:"String"}}}}},us={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{serializedName:"solutions",required:!0,type:{name:"String"}},difficulty:{serializedName:"difficulty",required:!0,type:{name:"String"}},hashrate:{serializedName:"hashrate",required:!0,type:{name:"String"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},uptime:{serializedName:"uptime",required:!0,type:{name:"String"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{serializedName:"peer_count",required:!0,type:{name:"String"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{serializedName:"pending_transactions_count",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{serializedName:"top_block_height",required:!0,type:{name:"String"}}}}},ms={type:{name:"Composite",className:"Protocol",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}},effectiveAtHeight:{serializedName:"effective_at_height",required:!0,type:{name:"String"}}}}},ps={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{serializedName:"inbound",required:!0,type:{name:"String"}},outbound:{serializedName:"outbound",required:!0,type:{name:"String"}}}}},hs={type:{name:"Composite",className:"Currency",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},symbol:{serializedName:"symbol",required:!0,type:{name:"String"}},subunit:{serializedName:"subunit",required:!0,type:{name:"String"}},subunitsPerUnit:{serializedName:"subunits_per_unit",required:!0,type:{name:"String"}},fiatConverstionUrl:{serializedName:"fiat_converstion_url",type:{name:"String"}},logo:{serializedName:"logo",type:{name:"Composite",className:"Image"}},primaryColour:{serializedName:"primary_colour",required:!0,type:{name:"String"}},secondaryColour:{serializedName:"secondary_colour",required:!0,type:{name:"String"}},networkName:{serializedName:"network_name",required:!0,type:{name:"String"}}}}},ys={type:{name:"Composite",className:"Image",modelProperties:{type:{serializedName:"type",type:{name:"String"}},data:{serializedName:"data",type:{name:"String"}}}}},gs={type:{name:"Composite",className:"GasPricesItem",modelProperties:{minGasPrice:{serializedName:"min_gas_price",required:!0,type:{name:"String"}},utilization:{serializedName:"utilization",required:!0,type:{name:"String"}},minutes:{serializedName:"minutes",required:!0,type:{name:"String"}}}}},fs={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},Ns={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}}}}},Cs={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{serializedName:"fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}}}}},ws={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ss={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},vs={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},zs={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{serializedName:"name_salt",required:!0,type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ts={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{serializedName:"name_ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},bs={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},xs={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},As={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},qs={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},Ps={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},Is={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},_s={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},ks={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},Os={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},Es={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ms={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Rs={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},Bs={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ds={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},$s={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},Vs={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{serializedName:"port",required:!0,type:{name:"String"}},firstSeen:{serializedName:"first_seen",required:!0,type:{name:"String"}},lastSeen:{serializedName:"last_seen",required:!0,type:{name:"String"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{serializedName:"top_difficulty",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},Fs={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},js={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{serializedName:"blocked",required:!0,type:{name:"String"}}}}},Hs={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{serializedName:"inbound",type:{name:"String"}},outbound:{serializedName:"outbound",type:{name:"String"}}}}},Gs={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{serializedName:"verified",type:{name:"String"}},unverified:{serializedName:"unverified",type:{name:"String"}}}}},Us={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ws={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ls={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},Qs={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{serializedName:"accounts",type:{name:"String"}},contracts:{serializedName:"contracts",type:{name:"String"}},contractOracles:{serializedName:"contract_oracles",type:{name:"String"}},locked:{serializedName:"locked",type:{name:"String"}},oracles:{serializedName:"oracles",type:{name:"String"}},oracleQueries:{serializedName:"oracle_queries",type:{name:"String"}},pendingRewards:{serializedName:"pending_rewards",type:{name:"String"}},total:{serializedName:"total",type:{name:"String"}}}}},Ks={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},Js={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Xs={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Ys={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},Zs={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:Oi.type.polymorphicDiscriminator,modelProperties:{...Oi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},eo={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:Oi.type.polymorphicDiscriminator,modelProperties:{...Oi.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},to={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:Oi.type.polymorphicDiscriminator,modelProperties:{...Oi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},no={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Oi.type.polymorphicDiscriminator,modelProperties:{...Oi.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ro={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Oi.type.polymorphicDiscriminator,modelProperties:{...Oi.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ao={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...Ls.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let io={OffChainUpdate:Oi,"OffChainUpdate.OffChainTransfer":Zs,"OffChainUpdate.OffChainWithdrawal":eo,"OffChainUpdate.OffChainDeposit":to,"OffChainUpdate.OffChainNewContract":no,"OffChainUpdate.OffChainCallContract":ro};const so={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},oo={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},co={parameterPath:"intAsString",mapper:{defaultValue:!1,serializedName:"int-as-string",type:{name:"Boolean"}}},lo={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},uo={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},mo={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},po={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},ho={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},yo={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},go={parameterPath:"body",mapper:Fi},fo={parameterPath:"body",mapper:Yi},No={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},Co={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},wo={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},So={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},vo={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}};class zo extends Si.N{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}getTopHeader(e){return this.sendOperationRequest({options:e},bo)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},xo)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},Ao)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},qo)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},Po)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Io)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},_o)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ko)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Oo)}getMicroBlockTransactionByHashAndIndex(e,t,n){return this.sendOperationRequest({hash:e,index:t,options:n},Eo)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Mo)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},Ro)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Bo)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Do)}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},$o)}getAccountByPubkeyAndHeight(e,t,n){return this.sendOperationRequest({pubkey:e,height:t,options:n},Vo)}getAccountByPubkeyAndHash(e,t,n){return this.sendOperationRequest({pubkey:e,hash:t,options:n},Fo)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},jo)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ho)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},Go)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Uo)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Wo)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},Lo)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},Qo)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ko)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},Jo)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Xo)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Yo)}getOracleQueryByPubkeyAndQueryId(e,t,n){return this.sendOperationRequest({pubkey:e,queryId:t,options:n},Zo)}getAuctionEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},ec)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},tc)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},nc)}getPeerPubkey(e){return this.sendOperationRequest({options:e},rc)}getSyncStatus(e){return this.sendOperationRequest({options:e},ac)}getStatus(e){return this.sendOperationRequest({options:e},ic)}getChainEnds(e){return this.sendOperationRequest({options:e},sc)}getCurrency(e){return this.sendOperationRequest({options:e},oc)}getRecentGasPrices(e){return this.sendOperationRequest({options:e},cc)}}const To=vi.r(a,!1),bo={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:zi},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},xo={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:bi},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},Ao={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:xi},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},qo={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:Ai},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},Po={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:bi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},Io={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:bi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},_o={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:bi},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,uo],headerParameters:[so],serializer:To},ko={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:qi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Oo={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:Pi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Eo={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:Ii},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo,mo],headerParameters:[so],serializer:To},Mo={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:Bi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Ro={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:Di},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},Bo={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Di},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Do={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Di},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,uo],headerParameters:[so],serializer:To},$o={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:$i},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Vo={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:$i},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0},410:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,uo,po],headerParameters:[so],serializer:To},Fo={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:$i},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo,po],headerParameters:[so],serializer:To},jo={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:Pi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Ho={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:Vi},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co,ho],urlParameters:[oo,po],headerParameters:[so],serializer:To},Go={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:Wi},400:{bodyMapper:Ti,isError:!0},403:{bodyMapper:Ti,isError:!0}},requestBody:go,queryParameters:[co],urlParameters:[oo],headerParameters:[so,yo],mediaType:"json",serializer:To},Uo={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ii},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Wo={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:Ji},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0},410:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,lo],headerParameters:[so],serializer:To},Lo={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:Zi},400:{bodyMapper:Ti,isError:!0}},requestBody:fo,queryParameters:[co],urlParameters:[oo],headerParameters:[so,yo],mediaType:"json",serializer:To},Qo={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:es},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Ko={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:ts},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Jo={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:ns},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Xo={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:rs},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},Yo={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:as},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co,No,Co,wo],urlParameters:[oo,po],headerParameters:[so],serializer:To},Zo={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:is},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po,So],headerParameters:[so],serializer:To},ec={path:"/v3/auctions/{name}",httpMethod:"GET",responses:{200:{bodyMapper:ss},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,vo],headerParameters:[so],serializer:To},tc={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:os},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,vo],headerParameters:[so],serializer:To},nc={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:cs},400:{bodyMapper:Ti,isError:!0},404:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo,po],headerParameters:[so],serializer:To},rc={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:ls}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},ac={path:"/v3/sync-status",httpMethod:"GET",responses:{200:{bodyMapper:ds},404:{bodyMapper:Ti,isError:!0}},urlParameters:[oo],headerParameters:[so],serializer:To},ic={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:us}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},sc={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},oc={path:"/v3/currency",httpMethod:"GET",responses:{200:{bodyMapper:hs}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To},cc={path:"/v3/recent-gas-prices",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"GasPricesItem"}}}}},400:{bodyMapper:Ti,isError:!0}},queryParameters:[co],urlParameters:[oo],headerParameters:[so],serializer:To};function lc(e,t,n){uc(e,t),t.set(e,n)}function dc(e,t){uc(e,t),t.add(e)}function uc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function mc(e,t,n){return pc(t,e),n}function pc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const hc=["balance","queryFee","fee","amount","nameFee","channelAmount","initiatorAmount","responderAmount","channelReserve","initiatorAmountFinal","responderAmountFinal","gasPrice","minGasPrice","deposit"],yc=["time","gas","gasUsed","nameSalt","nonce","nextNonce","height","blockHeight","topBlockHeight","ttl","nameTtl","clientTtl","inbound","outbound","peerCount","pendingTransactionsCount","effectiveAtHeight","version","solutions","round","minutes","utilization","difficulty","hashrate"];var gc=new WeakSet,fc=new WeakSet,Nc=new WeakSet;class Cc extends zo{constructor(...e){super(...e),dc(this,Nc),dc(this,fc),dc(this,gc)}async sendOperationRequest(e,t){const n=st(e,(([e,t])=>[e,mc(this,fc,Sc).call(this,t)]));return mc(this,Nc,vc).call(this,await super.sendOperationRequest(n,t))}}function wc(e,t){return Array.isArray(e)?e.map((e=>mc(this,gc,wc).call(this,e,t))):null!=e&&"object"===typeof e?st(e,(([e,n])=>null==n?[e,n]:hc.some((t=>t===e))?[e,t.bigInt(n)]:yc.some((t=>t===e))?[e,t.number(n)]:[e,mc(this,gc,wc).call(this,n,t)])):e}function Sc(e){return mc(this,gc,wc).call(this,e,{bigInt:e=>e instanceof Yt.A?e.toFixed():e.toString(),number:e=>e.toString()})}function vc(e){return mc(this,gc,wc).call(this,e,{bigInt:e=>BigInt(e),number:e=>+e})}var zc=new WeakMap;class Tc extends Cc{constructor(e,{ignoreVersion:t=!1,retryCount:n=3,retryOverallDelay:r=800,...a}={}){const i=async e=>(await this._getCachedStatus(e)).nodeVersion;super(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[Ci("node",i,"6.2.0","8.0.0")],yi(),gi(),wi(n,r),Ni((e=>[" ",e.reason,null==e.errorCode?"":` (${e.errorCode})`].join("")))],...a}),lc(this,zc,{writable:!0,value:void 0}),this.pipeline.removePolicy({name:pi.O}),this.pipeline.removePolicy({name:hi.P}),this.pipeline.removePolicy({name:"defaultRetryPolicy"}),this.intAsString=!0}async _getCachedStatus(e){return null!=(0,T.A)(this,zc)?(0,T.A)(this,zc):this.getStatus(e)}async getStatus(...e){const t=super.getStatus(...e);return t.then((()=>{(0,b.A)(this,zc,t)}),(()=>{})),t}async getNetworkId(){return(await this._getCachedStatus()).networkId}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:n,topBlockHeight:r}=await this.getStatus(),a=n.filter((({effectiveAtHeight:e})=>r>=e)).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==sn[a]){const e=a.toString(),t=Object.values(sn).filter((e=>"number"===typeof e)).map((e=>+e)),n=Math.min(...t).toString(),r=(Math.max(...t)+1).toString();throw new G("consensus protocol",e,n,r)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:a}}}function bc(e){var t;const n=Za(e);switch(n.tag){case ln.SignedTx:return bc(Xa(n.encodedTx));case ln.GaMetaTx:return n.gaId;default:}const r=null===(t=Ja(n.tag,n.version).find((([e])=>"nonce"===e)))||void 0===t?void 0:t[1];if(null==r)throw new E(`Transaction doesn't have nonce: ${ln[n.tag]}`);if(!("senderKey"in r))throw new W;const a=n[r.senderKey];return a.replace(/^ok_/,"ak_")}function xc(e,{innerTx:t,gasUsed:n,queryFee:r,isInitiator:a}={}){const i=Za(e);if(i.tag===ln.SignedTx)throw new B("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in i&&"freeloader"!==t&&(s+=BigInt(i.fee)),i.tag===ln.NameClaimTx&&(s+=BigInt(i.nameFee)),i.tag===ln.OracleQueryTx&&(s+=BigInt(i.queryFee)),i.tag===ln.OracleResponseTx&&(s-=BigInt(null!==r&&void 0!==r?r:0)),i.tag===ln.ChannelSettleTx&&(!0===a&&(s-=BigInt(i.initiatorAmountFinal)),!1===a&&(s-=BigInt(i.responderAmountFinal))),(i.tag===ln.SpendTx&&i.senderId!==i.recipientId||i.tag===ln.ContractCreateTx||i.tag===ln.ContractCallTx||i.tag===ln.ChannelDepositTx)&&"fee-payer"!==t&&(s+=BigInt(i.amount)),i.tag===ln.ContractCreateTx&&(s+=BigInt(i.deposit)),i.tag!==ln.ContractCreateTx&&i.tag!==ln.ContractCallTx&&i.tag!==ln.GaAttachTx&&i.tag!==ln.GaMetaTx||"freeloader"===t||(s+=BigInt(i.gasPrice)*BigInt(null!==n&&void 0!==n?n:i.gasLimit)),i.tag!==ln.GaMetaTx&&i.tag!==ln.PayingForTx||(s+=xc(Xa(i.tx.encodedTx),i.tag===ln.PayingForTx?{innerTx:"fee-payer"}:{})),s}function Ac(e,t,n){const r=Za(e,ln.SignedTx);if(r.encodedTx.tag===ln.GaMetaTx)return xc(Xa(r.encodedTx),n);const a=Xa(r.encodedTx),i=bc(a),[s,o]=[!0,!1].map((e=>Ft(di(a,t,e),r.signatures[0],i)));if(!s&&!o)throw new E("Can't verify signature");return xc(Xa(r.encodedTx),{...s&&{innerTx:"freeloader"},...n})}async function qc(e,t,{isMined:n,...r}={}){let a=Za(e);const i=a.tag===ln.SignedTx,s=i&&!0===n&&ei(e);if(a.tag===ln.SignedTx&&(a=a.encodedTx),null==r.gasUsed&&!1!==s&&[ln.ContractCreateTx,ln.ContractCallTx,ln.GaAttachTx,ln.GaMetaTx].includes(a.tag)){const{callInfo:e,gaInfo:n}=await t.getTransactionInfoByHash(s),a=null!==e&&void 0!==e?e:n;if(null==a)throw new U(`callInfo and gaInfo is not available for transaction ${s}`);r.gasUsed=a.gasUsed}if(null==r.queryFee&&ln.OracleResponseTx===a.tag&&(r.queryFee=(await t.getOracleByPubkey(a.oracleId)).queryFee.toString()),null==r.isInitiator&&ln.ChannelSettleTx===a.tag&&!0!==n){const{initiatorId:e}=await t.getChannelByPubkey(a.channelId);r.isInitiator=a.fromId===e}return i?Ac(e,await t.getNetworkId(),r):xc(e,r)}const{Buffer:Pc}=Ye,Ic=[];async function _c(e,t,n){const r=bc(Xa(e)),[a,{height:i},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(r).catch((e=>{if(!ut(e))throw e;return{id:r,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Ic.map((async r=>r(e,{node:t,account:a,height:i,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:n}))))).flat()}async function kc(e,t){const n=new Tc(t.$host,{ignoreVersion:!0,pipeline:t.pipeline.clone(),additionalPolicies:[fi()]});return _c(Za(e),n,[])}Ic.push(((e,{account:t,nodeNetworkId:n,parentTxTypes:r})=>{if(e.tag!==ln.SignedTx)return[];const{encodedTx:a,signatures:i}=e;if(null==(null!==a&&void 0!==a?a:i))return[];if(1!==i.length)return[];const s=Pc.from([n,...r.includes(ln.PayingForTx)?["inner_tx"]:[]].join("-")),o=It(Xa(a)),c=ct([s,o]),l=ct([s,Bt(o)]);return Ft(c,i[0],t.id)||Ft(l,i[0],t.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,{node:t,parentTxTypes:n})=>{let r;return"encodedTx"in e&&(r=e.encodedTx),"tx"in e&&(r=e.tx),null==r?[]:_c(r,t,[...n,e.tag])}),((e,{height:t})=>"ttl"in e?0===e.ttl||e.ttl>t?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${t}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]),(async(e,{account:t,parentTxTypes:n,node:r})=>{if(0!==n.length)return[];const a=await qc(Xa(e),r).catch((()=>0n));return a<=t.balance?[]:[{message:`Account balance ${t.balance} is not enough to execute the transaction that costs ${a}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),(async(e,{node:t})=>{if(e.tag!==ln.SpendTx||Mt(e.recipientId,pt.Name))return[];const n=await t.getAccountByPubkey(e.recipientId).catch((e=>{if(!ut(e))throw e;return null}));return null==n||!0===n.payable?[]:[{message:"Recipient account is not payable",key:"RecipientAccountNotPayable",checkedKeys:["recipientId"]}]}),((e,{account:t})=>{let n;return e.tag===ln.SignedTx&&"generalized"===t.kind&&0!==e.signatures.length&&(n="Generalized account can't be used to generate SignedTx with signatures"),e.tag===ln.GaMetaTx&&"basic"===t.kind&&(n="Basic account can't be used to generate GaMetaTx"),null==n?[]:[{message:n,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,{consensusProtocolVersion:t})=>{var n,r;const a=ln.OracleRegisterTx===e.tag,i=ln.ContractCreateTx===e.tag||ln.GaAttachTx===e.tag,s=ln.ContractCallTx===e.tag||ln.GaMetaTx===e.tag,o=null!==(n=null!==(r=a?"oracle-call":null)&&void 0!==r?r:i?"contract-create":null)&&void 0!==n?n:s?"contract-call":null;if(null==o)return[];const c=Ur[t][o];let l;if("abiVersion"in e&&(l={abiVersion:e.abiVersion}),"ctVersion"in e&&(l=e.ctVersion),null==l)throw new W;return!c.abiVersion.includes(l.abiVersion)||i&&!c.vmVersion.includes(l.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(l)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,{node:t})=>{if(ln.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:n}=await t.getContract(e.contractId);return n?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(r){var n;if(!(r instanceof rt.p)||null==(null===(n=r.response)||void 0===n?void 0:n.bodyAsText))throw r;return[{message:JSON.parse(r.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}),((e,{consensusProtocolVersion:t})=>ln.GaAttachTx===e.tag&&sn.Ceres===t&&1!==e.nonce?[{message:`Account ${e.ownerId} can't become generalized because it is already used`,key:"AccountUsed",checkedKeys:["nonce"]}]:[]));class Oc extends E{constructor(e,t,n){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=n}}async function Ec(e,{onNode:t,onAccount:n,verify:r=!0,waitMined:a=!0,confirm:i,innerTx:s,...o}){const c=await n.signTransaction(e,{...o,onNode:t,innerTx:s,networkId:await t.getNetworkId()});if(!0===s)return{hash:ei(c),rawTx:c};if(r){const e=await kc(c,t);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new Oc(t,e,c)}}try{let e;try{e=null!=n?`tx-${n.address}`:null}catch(l){e=null}const{txHash:r}=await t.postTransaction({tx:c},{requestOptions:{customHeaders:{"__retry-code":"400",...null!=e?{__queue:e}:{}}}});if(a){const e=await ur(r,{onNode:t,...o}),n={...e,hash:e.hash,rawTx:c};if(null!=i&&+i>0){const e="boolean"===typeof i?void 0:i;return{...n,confirmationHeight:await pr(r,{onNode:t,confirm:e,...o})}}return n}return{hash:r,rawTx:c}}catch(l){throw mt(l),Object.assign(l,{rawTx:c,verifyTx:async()=>kc(c,t)})}}async function Mc(e,t){const n=await Ya({_isInternalBuild:!0,...t,tag:ln.NameRevokeTx,nameId:e,accountId:t.onAccount.address});return Ec(n,t)}async function Rc(e,t,{extendPointers:n,...r}){const a={...!0===n&&Object.fromEntries((await xr(e,r)).pointers.map((({key:e,id:t})=>[e,t]))),...t},i=Object.values(a).some((e=>Mt(e,pt.Bytearray))),s=(await r.onNode.getNodeInfo()).consensusProtocolVersion===sn.Iris;if(i&&s)throw new j("Raw pointers are available only in Ceres, the current protocol is Iris");const o=await Ya({_isInternalBuild:!0,...r,tag:ln.NameUpdateTx,version:i?2:1,nameId:e,accountId:r.onAccount.address,pointers:Object.entries(a).map((([e,t])=>({key:e,id:t})))});return Ec(o,r)}async function Bc(e,t,n){const r=await Ya({_isInternalBuild:!0,...n,tag:ln.NameTransferTx,nameId:e,accountId:n.onAccount.address,recipientId:t});return Ec(r,n)}async function Dc(e,t){const n=await xr(e,t);return Object.freeze({...n,id:n.id,owner:n.owner,async update(n,r){return{...await Rc(e,n,{...t,...r}),...await Dc(e,{...t,...r})}},async transfer(n,r){return{...await Bc(e,n,{...t,...r}),...await Dc(e,{...t,...r})}},async revoke(n){return Mc(e,{...t,...n})},async extendTtl(n,r={}){return{...await Rc(e,{},{...t,...r,nameTtl:n,extendPointers:!0}),...await Dc(e,{...t,...r})}}})}async function $c(e,t,n){const r=await Ya({_isInternalBuild:!0,...n,tag:ln.NameClaimTx,accountId:n.onAccount.address,nameSalt:t,name:e}),a=await Ec(r,n);if(!qn(e)){const t=null!=a.blockHeight&&a.blockHeight>0?await Dc(e,n):{};return Object.assign(a,t)}return a}async function Vc(e,t){const n=Rt(),r=zn(e,n),a=await Ya({_isInternalBuild:!0,...t,tag:ln.NamePreclaimTx,accountId:t.onAccount.address,commitmentId:r});return Object.freeze({...await Ec(a,t),salt:n,commitmentId:r,async claim(r){const{version:a,...i}=t;return $c(e,n,{...i,...r})}})}async function Fc(e,t,n){return $c(e,0,{...n,nameFee:t})}async function jc(e,t,n){return Ec(await Ya({_isInternalBuild:!0,...n,tag:ln.SpendTx,senderId:n.onAccount.address,recipientId:await Ar(t,"account_pubkey",n),amount:e}),n)}async function Hc(e,t,n){if(+e<0||+e>1)throw new R("fraction","a number between 0 and 1",e);const r=await Ar(t,"account_pubkey",n),a=n.onAccount.address,i=new Yt.A(await yr.bind(n.onAccount)(a,n)),s=i.times(e).integerValue(Yt.A.ROUND_HALF_UP),{fee:o}=Za(await Ya({_isInternalBuild:!0,...n,tag:ln.SpendTx,senderId:a,recipientId:r,amount:s}),ln.SpendTx),c=s.plus(o).gt(i)?i.minus(o):s;return Ec(await Ya({_isInternalBuild:!0,...n,tag:ln.SpendTx,senderId:a,recipientId:r,amount:c}),n)}async function Gc(e,t){return Ec(await Ya({_isInternalBuild:!0,...t,tag:ln.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}function Uc(e,t,{interval:n,...r}){const a=new Set,i=async()=>{var n;const i=(null!==(n=(await r.onNode.getOracleQueriesByPubkey(e)).oracleQueries)&&void 0!==n?n:[]).filter((({id:e})=>!a.has(e)));i.forEach((e=>{a.add(e.id),t(e)}))};let s=!1;return(async e=>{null!==(e=n)&&void 0!==e||(n=await cr("micro-block",r));while(!s)await i().catch(console.error),await it(n)})(),()=>{s=!0}}async function Wc(e,t,{interval:n,...r}){var a;let i,s,o;null!==(a=n)&&void 0!==a||(n=await cr("micro-block",r));do{({response:o,ttl:s}=await r.onNode.getOracleQueryByPubkeyAndQueryId(e,t));const a=It(o);if(a.length>0)return a.toString();await it(n),i=await dr({...r,cached:!0})}while(s>=i);throw new $(i)}async function Lc(e,t,n){const r=await n.onNode.getOracleQueryByPubkeyAndQueryId(e,t);return{...r,decodedQuery:It(r.query).toString(),decodedResponse:It(r.response).toString(),respond:async(e,r)=>Jc(t,e,{...n,...r}),pollForResponse:async r=>Wc(e,t,{...n,...r})}}async function Qc(e,t,n){const r=n.onAccount.address,a=await Ya({_isInternalBuild:!0,...n,tag:ln.OracleQueryTx,oracleId:e,senderId:r,query:t}),{nonce:i}=Za(a,ln.OracleQueryTx),s=Cn(r,i,e);return{...await Ec(a,n),...await Lc(e,s,n)}}async function Kc(e){const t=_t(It(e.onAccount.address),pt.OracleAddress),n=await Ya({_isInternalBuild:!0,...e,tag:ln.OracleExtendTx,oracleId:t});return{...await Ec(n,e),...await Xc(t,e)}}async function Jc(e,t,n){const r=_t(It(n.onAccount.address),pt.OracleAddress),a=await Ya({_isInternalBuild:!0,...n,tag:ln.OracleResponseTx,oracleId:r,queryId:e,response:t});return{...await Ec(a,n),...await Xc(r,n)}}async function Xc(e,t){return{...await t.onNode.getOracleByPubkey(e),queries:(await t.onNode.getOracleQueriesByPubkey(e)).oracleQueries,...st({pollQueries:Uc,postQuery:Qc,respondToQuery:Jc,extendOracle:Kc,getQuery:Lc},(([n,r])=>[n,(...a)=>{const i=a[a.length-1];return null!=i&&"object"===typeof i&&i.constructor===Object?Object.assign(i,{...t,...i}):a.push(t),r(...["extendOracle","respondToQuery"].includes(n)?[]:[e],...a)}]))}}async function Yc(e,t,n){const r=n.onAccount.address,a=await Ya({_isInternalBuild:!0,...n,tag:ln.OracleRegisterTx,accountId:r,queryFormat:e,responseFormat:t});return{...await Ec(a,n),...await Xc(_t(It(r),pt.OracleAddress),n)}}function Zc(e,t,n){tl(e,t),t.set(e,n)}function el(e,t){tl(e,t),t.add(e)}function tl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function nl(e,t,n){return rl(t,e),n}function rl(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const{Encoder:al}=Ut;var il=new WeakSet,sl=new WeakSet,ol=new WeakSet,cl=new WeakSet,ll=new WeakMap;class dl{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new B("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new B("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,n){const{callInfo:r}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==r)throw new _(`callInfo is not available for transaction ${e}`);const a=r;return{...nl(this,il,ul).call(this,a,t,void 0,n),result:a}}async _estimateGas(e,t,n={}){const{result:r}=await this.$call(e,t,{...n,callStatic:!0});if(null==r)throw new W;const{gasUsed:a}=r;return Math.floor(1.25*a)}async $deploy(e,t){var n,r;const{callStatic:a,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===a)return this.$call("init",e,{...i,callStatic:a});if(null!=this.$options.address)throw new te;if(null==i.onAccount)throw new B("Can't deploy without account");const s=i.onAccount.address;if(null==this.$options.bytecode)throw new B("Can't deploy without bytecode");const o=await Ya({_isInternalBuild:!0,...i,tag:ln.ContractCreateTx,gasLimit:null!==(n=i.gasLimit)&&void 0!==n?n:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:s}),{hash:c,...l}=await nl(this,sl,ml).call(this,o,"init",{...i,onAccount:i.onAccount});return this.$options.address=ti(l.rawTx),{...l,...null!=(null===(r=l.result)||void 0===r?void 0:r.log)&&{decodedEvents:this.$decodeEvents(l.result.log,i)},owner:s,transaction:c,address:this.$options.address}}async $call(e,t,n={}){var r;const{callStatic:a,top:i,...s}={...this.$options,...n},o=nl(this,ol,pl).call(this,e),{address:c,name:l}=this.$options,d=null!=l?vn(l):c,{onNode:u}=s;if(null==e)throw new se;if("init"===e&&!0!==a)throw new re('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&Number(s.amount)>0&&!o.payable)throw new le(s.amount,e);let m;try{if(null==s.onAccount)throw new U("Use fallback account");m=s.onAccount.address}catch(y){const e=!0===a&&(y instanceof F&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof Ae||y instanceof U&&"Use fallback account"===y.message);if(!e)throw y;m=Zt.pub}const p=this._calldata.encode(this._name,e,t);if(!0===a){if(null==s.nonce){const e=null!=i&&{["number"===typeof i?"height":"hash"]:i},t=await hr(m,{...e,onNode:u}).catch((e=>{if(!ut(e))throw e;return{kind:"basic",nonce:0}}));s.nonce="generalized"===t.kind?0:t.nonce+1}const t={...s,onNode:u,callData:p};let n;if("init"===e){if(null==this.$options.bytecode)throw new B('Can\'t dry-run "init" without bytecode');n=await Ya({...t,tag:ln.ContractCreateTx,code:this.$options.bytecode,ownerId:m})}else{if(null==d)throw new ae("Can't dry-run contract without address");n=await Ya({...t,tag:ln.ContractCallTx,callerId:m,contractId:d})}const{callObj:r,...a}=await zr(n,m,{...s,top:i});if(null==r)throw new U(`callObj is not available for transaction ${n}`);const o=r;return{...a,...nl(this,il,ul).call(this,o,e,n,s),tx:Za(n),result:o,rawTx:n,hash:ei(n),txData:void 0}}if(null!=i)throw new B("Can't handle `top` option in on-chain contract call");if(null==d)throw new ae("Can't call contract without address");const h=await Ya({_isInternalBuild:!0,...s,tag:ln.ContractCallTx,gasLimit:null!==(r=s.gasLimit)&&void 0!==r?r:await this._estimateGas(e,t,s),callerId:m,contractId:d,callData:p});if(null==s.onAccount)throw new B("Can't call contract on chain without account");return nl(this,sl,ml).call(this,h,e,{...s,onAccount:s.onAccount})}$decodeEvents(e,{omitUnknown:t,...n}={}){return e.map((e=>{const r=e.topics.map((e=>BigInt(e)));let a;try{a=nl(this,cl,hl).call(this,e.address,r[0],n)}catch(c){if(null!==t&&void 0!==t&&t&&c instanceof de)return null;throw c}const i=this._calldata.decodeEvent(a,e.data,r),[s,o]=Object.entries(i)[0];return{name:s,args:o,contract:{name:a,address:e.address}}})).filter((e=>null!=e))}static async initialize({onCompiler:e,onNode:t,bytecode:n,aci:r,address:a,sourceCodePath:i,sourceCode:s,fileSystem:o,validateBytecode:c,...l}){if(null==r&&null!=e){let t;var d;if(null!=i&&(t=await e.compile(i)),null!=s&&(t=await e.compileBySourceCode(s,o)),null!=t)r=t.aci,null!==(d=n)&&void 0!==d||(n=t.bytecode)}if(null==r)throw new ie;let u;if(null!=a){a=await Ar(a,"contract_pubkey",{resolveByNode:!0,onNode:t});const e=(await t.getNodeInfo()).consensusProtocolVersion===sn.Iris;!e&&xn(a)&&(u=a)}if(null==a&&null==s&&null==i&&null==n)throw new ae("Can't create instance by ACI without address");if(null!=a){const e=await br(a,{onNode:t});if(null==e.active)throw new ne(a)}if(!0===c){if(null==a)throw new ae("Can't validate bytecode without contract address");const r=(await Tr(a,{onNode:t})).bytecode;let c=!1;if(null!=n)c=n===r;else if(null!=s){if(null==e)throw new B("Can't validate bytecode without compiler");c=await e.validateBySourceCode(r,s,o)}else if(null!=i){if(null==e)throw new B("Can't validate bytecode without compiler");c=await e.validate(r,i)}if(!c)throw new ee(null!=(null!==s&&void 0!==s?s:i)?"source code":"bytecode")}return new yl({onCompiler:e,onNode:t,sourceCode:s,sourceCodePath:i,bytecode:n,aci:r,address:a,name:u,fileSystem:o,...l})}constructor({aci:e,...t}){el(this,cl),el(this,ol),el(this,sl),el(this,il),Zc(this,ll,{writable:!0,value:void 0}),this._aci=e;const n=e[e.length-1];if(null==n.contract)throw new B(`The last 'aci' item should have 'contract' key, got ${Object.keys(n)} keys instead`);(0,b.A)(this,ll,n.contract),this._name=(0,T.A)(this,ll).name,this._calldata=new al(e),this.$options=t,Object.assign(this,Object.fromEntries((0,T.A)(this,ll).functions.map((({name:e,arguments:t,stateful:n})=>{const r="init"!==e&&!n;return[e,async(...n)=>{const a=n.length===t.length+1?n.pop():{};if("object"!==typeof a)throw new F(`Options should be an object: ${a}`);return"init"===e?this.$deploy(n,{callStatic:r,...a}):this.$call(e,n,{callStatic:r,...a})}]}))))}}function ul({returnType:e,returnValue:t,log:n},r,a,i){let s;switch(e){case"ok":{const e=nl(this,ol,pl).call(this,r);return{decodedResult:this._calldata.decode(this._name,e.name,t),decodedEvents:this.$decodeEvents(n,i)}}case"revert":s=this._calldata.decodeFateString(t);break;case"error":if(s=It(t).toString(),/Expected \d+ arguments, got \d+/.test(s))throw new _(`ACI doesn't match called contract. Error provided by node: ${s}`);break;default:throw new U(`Unknown return type: ${e}`)}throw new oe(s,a)}async function ml(e,t,n){const r=await Ec(e,{...this.$options,...n});return{hash:r.hash,tx:Za(r.rawTx),txData:r,rawTx:r.rawTx,...null!=r.blockHeight&&await this.$getCallResultByTxHash(r.hash,t,n)}}function pl(e){const t=(0,T.A)(this,ll).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new ce(e)}function hl(e,t,{contractAddressToName:n}){const r={...this.$options.contractAddressToName,...n};if(null!=r[e])return r[e];const a=(e,t)=>JSON.stringify(e)===JSON.stringify(t),i=this._aci.map((({contract:e})=>e)).filter((e=>null===e||void 0===e?void 0:e.event)),s=i.map((e=>[e.name,e.event.variant])).map((([e,t])=>t.map((t=>[e,Object.keys(t)[0],Object.values(t)[0]])))).flat().filter((([,e])=>BigInt(`0x${Bt(e).toString("hex")}`)===t)).filter((([,,e],t,n)=>!n.slice(0,t).some((t=>a(t[2],e)))));switch(s.length){case 0:throw new de(t.toString(),e);case 1:return s[0][0];default:throw new ue(e,s)}}const yl=dl;var gl=yl;function fl(e){if(!e.startsWith("oq_"))throw new R("oq","oracle query",e)}async function Nl(e,t,{onAccount:n,omitAddress:r,isOracle:a,...i}){if(t.length>1)throw new R("ids","shorter than 2",t);const{nodeNetworkId:s,consensusProtocolVersion:o}=await i.onNode.getNodeInfo(),c={networkId:s,consensusProtocolVersion:o};if(0===t.length){if(!0===r)throw new R("omitAddress","equal false",r);return It(await n.signDelegationToContract(e,{...c,isOracle:a}))}const[l]=t;if(xn(l)){if(!0===r)throw new R("omitAddress","equal false",r);return It(await n.signNameDelegationToContract(e,l,c))}if(fl(l),!0!==r)throw new R("omitAddress","equal true",r);return It(await n.signOracleQueryDelegationToContract(e,l,c))}const{Buffer:Cl}=Ye;async function wl(e,t,{onAccount:n,onCompiler:r,onNode:a,bytecode:i,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l,...d}){var u;const m=n.address;if("generalized"===(await hr(m,{onNode:a})).kind)throw new B(`Account ${m} is already GA`);const p=await gl.initialize({onAccount:n,onCompiler:r,onNode:a,bytecode:i,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l}),h=await Ya({_isInternalBuild:!0,...d,tag:ln.GaAttachTx,onNode:a,code:await p.$compile(),gasLimit:null!==(u=d.gasLimit)&&void 0!==u?u:await p._estimateGas("init",t,d),ownerId:m,callData:p._calldata.encode(p._name,"init",t),authFun:Bt(e)}),{hash:y,rawTx:g}=await Ec(h,{onNode:a,onAccount:n,onCompiler:r,...d}),f=ti(g);return Object.freeze({owner:m,transaction:y,rawTx:g,gaContractId:f})}async function Sl(e,{fee:t,gasPrice:n,onNode:r}){const{nodeNetworkId:a,consensusProtocolVersion:i}=await r.getNodeInfo();let s=Bt(ct([Cl.from(a),It(e)]));if(i===sn.Ceres){if(null==t)throw new R("fee","provided (in Ceres)",t);if(null==n)throw new R("gasPrice","provided (in Ceres)",n);s=Bt(It(Xa({tag:ln.GaMetaTxAuthData,fee:t,gasPrice:n,txHash:_t(s,pt.TxHash)})))}return s}async function vl(e,{onNode:t}){const n=Za(e,ln.SignedTx);if(n.encodedTx.tag!==ln.GaMetaTx)throw new R("transaction","to include GaMetaTx",ln[n.encodedTx.tag]);return Sl(Xa(n.encodedTx.tx.encodedTx),{fee:n.encodedTx.fee,gasPrice:n.encodedTx.gasPrice,onNode:t})}function zl(e,t,n){Tl(e,t),t.set(e,n)}function Tl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}const bl={...r,sendTransaction:Ec,...i,...s,...o,createDelegationSignature:Nl,...c};var xl=new WeakMap;class Al{constructor(e={}){(0,Ie.A)(this,"_options",{}),zl(this,xl,{writable:!0,value:void 0}),Object.assign(this._options,e),(0,b.A)(this,xl,{onAccount:sr((()=>this._options.onAccount)),onNode:sr((()=>this._options.onNode)),onCompiler:sr((()=>this._options.onCompiler))})}getContext(e={}){return{...this._options,...(0,T.A)(this,xl),...e}}async buildTx(e){return Ya({...this.getContext(),...e})}async initializeContract(e){return gl.initialize(this.getContext(e))}}Object.assign(Al.prototype,st(bl,(([e,t])=>[e,function(...e){e.length=t.length;const n=e[e.length-1];return e[e.length-1]=this.getContext(n),t(...e)}])));const ql=Al;var Pl=ql;function Il(e,t,n){_l(e,t),t.set(e,n)}function _l(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}var kl=new WeakMap;class Ol extends Pl{constructor({nodes:e=[],...t}={}){super(t),(0,Ie.A)(this,"pool",new Map),Il(this,kl,{writable:!0,value:void 0}),e.forEach((({name:e,instance:t},n)=>this.addNode(e,t,0===n))),(0,b.A)(this,kl,{onNode:sr((()=>this.api)),onCompiler:sr((()=>this.compilerApi)),onAccount:sr((()=>this._resolveAccount()))})}get compilerApi(){if(null==this._options.onCompiler)throw new I("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t,n=!1){if(this.pool.has(e))throw new fe(e);this.pool.set(e,t),(n||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new Ne(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new Ne("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async([e,t])=>({name:e,...await t.getNodeInfo()}))))}addresses(){return[]}_resolveAccount(e=this._options.onAccount){if("string"===typeof e)throw new H("Address in AccountResolver");if("object"===typeof e)return e;throw new F(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e,{onAccount:t,...n}={}){return this._resolveAccount(t).sign(e,n)}async signTransaction(e,{onAccount:t,...n}={}){const r=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:r,...n})}async signMessage(e,{onAccount:t,...n}={}){return this._resolveAccount(t).signMessage(e,n)}async signTypedData(e,t,{onAccount:n,...r}={}){return this._resolveAccount(n).signTypedData(e,t,r)}async signDelegationToContract(e,{onAccount:t,...n}={}){var r,a;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(a=n.consensusProtocolVersion)&&void 0!==a||(n.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(t).signDelegationToContract(e,n)}async signNameDelegationToContract(e,t,{onAccount:n,...r}={}){var a,i;return null!==(a=r.networkId)&&void 0!==a||(r.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(i=r.consensusProtocolVersion)&&void 0!==i||(r.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(n).signNameDelegationToContract(e,t,r)}async signAllNamesDelegationToContract(e,{onAccount:t,...n}={}){var r,a;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(a=n.consensusProtocolVersion)&&void 0!==a||(n.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(t).signAllNamesDelegationToContract(e,n)}async signOracleQueryDelegationToContract(e,t,{onAccount:n,...r}={}){var a,i;return null!==(a=r.networkId)&&void 0!==a||(r.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(i=r.consensusProtocolVersion)&&void 0!==i||(r.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(n).signOracleQueryDelegationToContract(e,t,r)}async signDelegation(e,{onAccount:t,...n}={}){var r;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(t).signDelegation(e,n)}getContext(e={}){return{...this._options,...(0,T.A)(this,kl),...e,...null!=e.onAccount&&{onAccount:this._resolveAccount(e.onAccount)}}}}class El extends Ol{constructor({accounts:e,...t}={}){super(t),(0,Ie.A)(this,"accounts",{}),null===e||void 0===e||e.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(e=this.selectedAddress){if("string"===typeof e){const t=e;if(It(t),null==this.accounts[t])throw new L(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e,{select:t}={}){const{address:n}=e;this.accounts[n]=e,!0===t&&this.selectAccount(n)}removeAccount(e){if(null==this.accounts[e])throw new L(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(It(e),null==this.accounts[e])throw new L(e);this.selectedAddress=e}}function Ml(e,t){Bl(e,t),t.add(e)}function Rl(e,t,n){Bl(e,t),t.set(e,n)}function Bl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Dl(e,t,n){return $l(t,e),n}function $l(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Vl=new WeakMap,Fl=new WeakMap,jl=new WeakMap,Hl=new WeakSet,Gl=new WeakSet,Ul=new WeakSet,Wl=new WeakSet;class Ll{constructor(e,t,n){Ml(this,Wl),Ml(this,Ul),Ml(this,Gl),Ml(this,Hl),Rl(this,Vl,{writable:!0,value:new Map}),Rl(this,Fl,{writable:!0,value:0}),Rl(this,jl,{writable:!0,value:void 0}),this.connection=e,(0,b.A)(this,jl,n),e.connect(Dl(this,Hl,Ql).bind(this),t)}async request(e,t){return Dl(this,Gl,Kl).call(this,(0,b.A)(this,Fl,(0,T.A)(this,Fl)+1),e,t),new Promise(((e,t)=>{(0,T.A)(this,Vl).set((0,T.A)(this,Fl),{resolve:e,reject:t})}))}notify(e,t){Dl(this,Gl,Kl).call(this,void 0,e,t)}}async function Ql(e,t){if("2.0"!==(null===e||void 0===e?void 0:e.jsonrpc))throw new X(JSON.stringify(e));if("result"in e||"error"in e)return void Dl(this,Wl,Xl).call(this,e);const n=e;let r,a;try{if(!(n.method in(0,T.A)(this,jl)))throw new Ue;const e=n.method;r=await(0,T.A)(this,jl)[e](n.params,t)}catch(i){mt(i),a=i}if(null!=n.id&&Dl(this,Ul,Jl).call(this,n.id,n.method,r,null==a||a instanceof Be?a:new Ge),null!=a&&!(a instanceof Be))throw a}function Kl(e,t,n){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=n?{params:n}:{}})}function Jl(e,t,n,r){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=r?{error:r.toJSON()}:{result:n}})}function Xl({id:e,error:t,result:n}){const r=(0,T.A)(this,Vl).get(e);if(null==r)throw new Y(e);null!=t?r.reject(Be.deserialize(t)):r.resolve(n),(0,T.A)(this,Vl).delete(e)}const Yl=1;var Zl=n(59643);const ed=Zl({storeAsString:!0}),td=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return st(e,(([e,t])=>[e,td(t)]));if(Array.isArray(e))return e.map((e=>td(e)));if("string"===typeof e&&new Yt.A(e).toString(10)===e){const t=new Yt.A(e);return t.toJSON=()=>t.toString(10),t}return e};var nd={stringify:(...e)=>ed.stringify(td(e[0]),...e.slice(1)),parse:ed.parse};const{Buffer:rd}=Ye;class ad extends El{constructor({name:e,id:t,type:n,onConnection:r,onSubscription:a,onDisconnect:i,onAskAccounts:s,...o}){super(o),(0,Ie.A)(this,"_clients",new Map),this.onConnection=r,this.onSubscription=a,this.onDisconnect=i,this.onAskAccounts=s,this.name=e,this.id=t,this._type=n}_getAccountsForClient({addressSubscription:e}){const{current:t,connected:n}=this.getAccounts();return{current:e.has("current")||e.has("connected")?t:{},connected:e.has("connected")?n:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(Ee.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(Ee.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new Z(e);return t}_isRpcClientConnected(e){return Me.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=Me.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=(0,mi.A)();let n;const r={id:t,status:Me.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new Ll(e,(()=>{this._clients.delete(t),this.onDisconnect(t,n)}),{[Ee.closeConnection]:e=>{n=e,this._disconnectRpcClient(t)},[Ee.connect]:async({name:e,version:n,icons:a,connectNode:i},s)=>{if(n!==Yl)throw new Ve;return await this.onConnection(t,{name:e,icons:a,connectNode:i},s),r.status=Me.CONNECTED,r.connectNode=i,{...await this.getWalletInfo(),...i&&this._getNode()}},[Ee.subscribeAddress]:async({type:e,value:n},a)=>{if(!this._isRpcClientConnected(t))throw new je;switch(e){case Oe.subscribe:await this.onSubscription(t,{type:e,value:n},a),r.addressSubscription.add(n);break;case Oe.unsubscribe:r.addressSubscription.delete(n);break;default:throw new U(`Unknown subscription type: ${e}`)}return{subscription:Array.from(r.addressSubscription),address:this._getAccountsForClient(r)}},[Ee.address]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new je;return await this.onAskAccounts(t,e,n),this.addresses()},[Ee.sign]:async({tx:e,onAccount:n=this.address,returnSigned:r,innerTx:a},i)=>{if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(n))throw new He(n);const s={onAccount:n,aeppOrigin:i,aeppRpcClientId:t,innerTx:a};if(r||!0===a)return{signedTransaction:await this.signTransaction(e,s)};try{return nd.parse(nd.stringify({transactionHash:await this.sendTransaction(e,{...s,verify:!1})}))}catch(o){const t=await kc(e,this.api);if(t.length>0)throw new De(t);throw o}},[Ee.signMessage]:async({message:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(n))throw new He(n);const a={onAccount:n,aeppOrigin:r,aeppRpcClientId:t};return{signature:rd.from(await this.signMessage(e,a)).toString("hex")}},[Ee.signTypedData]:async({domain:e,aci:n,data:r,onAccount:a=this.address},i)=>{if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(a))throw new He(a);const s={...e,onAccount:a,aeppOrigin:i,aeppRpcClientId:t};return{signature:await this.signTypedData(r,n,s)}},[Ee.signDelegationToContract]:async({contractAddress:e,name:n,oracleQueryId:r,allNames:a,onAccount:i=this.address,isOracle:s},o)=>{var c,l,d,u;if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(i))throw new He(i);null!==(c=s)&&void 0!==c||(s=!1);const m={onAccount:i,aeppOrigin:o,aeppRpcClientId:t},p=await(null!==(l=null!==(d=null!==(u=null==n?null:this.signNameDelegationToContract(e,n,m))&&void 0!==u?u:null==r?null:this.signOracleQueryDelegationToContract(e,r,m))&&void 0!==d?d:!0!==a?null:this.signAllNamesDelegationToContract(e,m))&&void 0!==l?l:this.signDelegationToContract(e,{...m,isOracle:s}));return{signature:p}},[Ee.unsafeSign]:async({data:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(n))throw new He(n);const a={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},i=_t(await this.sign(It(e),a),pt.Signature);return{signature:i}},[Ee.signDelegation]:async({delegation:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new je;if(!this.addresses().includes(n))throw new He(n);const a={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},i=await this.signDelegation(e,a);return{signature:i}}})};return this._clients.set(t,r),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(Ee.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:window.location.origin,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}const id={type:{name:"Composite",className:"Contract",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},sd={type:{name:"Composite",className:"CompileOpts",modelProperties:{fileSystem:{serializedName:"file_system",type:{name:"Dictionary",value:{type:{name:"any"}}}},srcFile:{serializedName:"src_file",type:{name:"String"}}}}},od={type:{name:"Composite",className:"CompilerError",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},pos:{serializedName:"pos",type:{name:"Composite",className:"ErrorPos"}},message:{serializedName:"message",required:!0,type:{name:"String"}},context:{serializedName:"context",type:{name:"String"}}}}},cd={type:{name:"Composite",className:"ErrorPos",modelProperties:{file:{serializedName:"file",type:{name:"String"}},line:{serializedName:"line",required:!0,type:{name:"Number"}},col:{serializedName:"col",required:!0,type:{name:"Number"}}}}},ld={type:{name:"Composite",className:"CompileResult",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},aci:{serializedName:"aci",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}},warnings:{serializedName:"warnings",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}}}}},dd={type:{name:"Composite",className:"SophiaCallResultInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},ud={type:{name:"Composite",className:"BytecodeCallResultInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},md={type:{name:"Composite",className:"DecodedCallresult",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},pd={type:{name:"Composite",className:"FunctionCallInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},hd={type:{name:"Composite",className:"Calldata",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}}}}},yd={type:{name:"Composite",className:"DecodeCalldataBytecode",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},gd={type:{name:"Composite",className:"DecodedCalldata",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},fd={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Nd={type:{name:"Composite",className:"DecodeCalldataSource",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}}}}},Cd={type:{name:"Composite",className:"ByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},wd={type:{name:"Composite",className:"FateAssembler",modelProperties:{fateAssembler:{serializedName:"fate-assembler",required:!0,type:{name:"String"}}}}},Sd={type:{name:"Composite",className:"ValidateByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},vd={type:{name:"Composite",className:"CompilerVersion",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}}}}},zd={type:{name:"Composite",className:"ApiVersion",modelProperties:{apiVersion:{serializedName:"api-version",required:!0,type:{name:"String"}}}}},Td={type:{name:"Composite",className:"SophiaBinaryData",modelProperties:{sophiaType:{serializedName:"sophia-type",required:!0,type:{name:"String"}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},bd={type:{name:"Composite",className:"SophiaJsonData",modelProperties:{data:{serializedName:"data",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},xd={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Ad={parameterPath:"body",mapper:id},qd={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},Pd={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},Id={parameterPath:"body",mapper:dd},_d={parameterPath:"body",mapper:ud},kd={parameterPath:"body",mapper:pd},Od={parameterPath:"body",mapper:yd},Ed={parameterPath:"body",mapper:Nd},Md={parameterPath:"body",mapper:Cd},Rd={parameterPath:"body",mapper:Sd};class Bd extends Si.N{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-compiler/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}generateACI(e,t){return this.sendOperationRequest({body:e,options:t},$d)}compileContract(e,t){return this.sendOperationRequest({body:e,options:t},Vd)}decodeCallResult(e,t){return this.sendOperationRequest({body:e,options:t},Fd)}decodeCallResultBytecode(e,t){return this.sendOperationRequest({body:e,options:t},jd)}encodeCalldata(e,t){return this.sendOperationRequest({body:e,options:t},Hd)}decodeCalldataBytecode(e,t){return this.sendOperationRequest({body:e,options:t},Gd)}decodeCalldataSource(e,t){return this.sendOperationRequest({body:e,options:t},Ud)}getFateAssemblerCode(e,t){return this.sendOperationRequest({body:e,options:t},Wd)}validateByteCode(e,t){return this.sendOperationRequest({body:e,options:t},Ld)}getCompilerVersion(e,t){return this.sendOperationRequest({body:e,options:t},Qd)}version(e){return this.sendOperationRequest({options:e},Kd)}apiVersion(e){return this.sendOperationRequest({options:e},Jd)}api(e){return this.sendOperationRequest({options:e},Xd)}}const Dd=vi.r(l,!1),$d={path:"/aci",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:Ad,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Vd={path:"/compile",httpMethod:"POST",responses:{200:{bodyMapper:ld},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:Ad,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Fd={path:"/decode-call-result",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"any"}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:Id,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},jd={path:"/decode-call-result/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:md},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:_d,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Hd={path:"/encode-calldata",httpMethod:"POST",responses:{200:{bodyMapper:hd},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:kd,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Gd={path:"/decode-calldata/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:gd},400:{bodyMapper:fd,isError:!0}},requestBody:Od,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Ud={path:"/decode-calldata/source",httpMethod:"POST",responses:{200:{bodyMapper:gd},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:Ed,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Wd={path:"/fate-assembler",httpMethod:"POST",responses:{200:{bodyMapper:wd},400:{bodyMapper:fd,isError:!0}},requestBody:Md,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Ld={path:"/validate-byte-code",httpMethod:"POST",responses:{200:{},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:Rd,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Qd={path:"/compiler-version",httpMethod:"POST",responses:{200:{bodyMapper:vd},400:{bodyMapper:fd,isError:!0}},requestBody:Md,urlParameters:[Pd],headerParameters:[xd,qd],mediaType:"json",serializer:Dd},Kd={path:"/version",httpMethod:"GET",responses:{200:{bodyMapper:vd},500:{bodyMapper:fd,isError:!0}},urlParameters:[Pd],headerParameters:[qd],serializer:Dd},Jd={path:"/api-version",httpMethod:"GET",responses:{200:{bodyMapper:zd},500:{bodyMapper:fd,isError:!0}},urlParameters:[Pd],headerParameters:[qd],serializer:Dd},Xd={path:"/api",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Dictionary",value:{type:{name:"any"}}}}},400:{bodyMapper:fd,isError:!0}},urlParameters:[Pd],headerParameters:[qd],serializer:Dd};class Yd{}class Zd extends Yd{constructor(e,{ignoreVersion:t=!1}={}){let n;super();const r=async e=>(null!=n||(n=(await this.api.apiVersion(e)).apiVersion),n);this.api=new Bd(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[Ci("compiler",r,"7.3.0","9.0.0")],Ni((e=>{let t="";return"reason"in e&&(t+=` ${e.reason}${null!=e.parameter?` in ${e.parameter}`:""}${null!=e.info?` (${JSON.stringify(e.info)})`:""}`),Array.isArray(e)&&(t+=`\n${e.map((e=>`${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${null!=e.context?` (${e.context})`:""}`)).join("\n")}`),t}))]}),this.api.pipeline.removePolicy({name:pi.O}),this.api.pipeline.removePolicy({name:hi.P})}async compileBySourceCode(e,t){try{var n;const r=await this.api.compileContract({code:e,options:{fileSystem:t}});null!==(n=r.warnings)&&void 0!==n||(r.warnings=[]);const a=r.warnings.map((({type:e,...t})=>t)),i={...r,warnings:a};return i}catch(r){if(r instanceof rt.p&&400===r.statusCode)throw new I(r.message);throw r}}async compile(e){throw new H("File system access, use CompilerHttpNode instead")}async generateAciBySourceCode(e,t){try{return await this.api.generateACI({code:e,options:{fileSystem:t}})}catch(n){if(n instanceof rt.p&&400===n.statusCode)throw new I(n.message);throw n}}async generateAci(e){throw new H("File system access, use CompilerHttpNode instead")}async validateBySourceCode(e,t,n){try{return await this.api.validateByteCode({bytecode:e,source:t,options:{fileSystem:n}}),!0}catch{return!1}}async validate(e,t){throw new H("File system access, use CompilerHttpNode instead")}async version(){return(await this.api.version()).version}}var eu=n(66176);function tu(e,t,n,r,a,i){return(0,u.uX)(),(0,u.CE)("div",{class:(0,m.C4)({error:e.error})},(0,m.v_)(e.text),3)}var nu={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},ru=n(66262);const au=(0,ru.A)(nu,[["render",tu]]);var iu=au,su={components:{Value:iu},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const n=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,r=new Xe({target:n});this.clientId=this.aeSdk.addRpcClient(r),this.aeSdk.shareWalletInfo(this.clientId);const a=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(a);const e=this.aeSdk._getClient(this.clientId);e.status===Me.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===Me.CONNECTED&&e.rpc.notify(Ee.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){const e=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e));this.nodeName=e[(e.indexOf(this.nodeName)+1)%e.length],this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(n,r,a)=>{if(!confirm([`Client ${e[n].name} with id ${n} at ${a} want to ${t}`,iu.methods.valueToString(r)].join("\n")))throw new $e};class n extends ui{async signTransaction(e,{aeppRpcClientId:n,aeppOrigin:r,...a}={}){if(null!=n){const i={...a,unpackedTx:Za(e)};i.onCompiler&&(i.onCompiler="<Compiler>"),i.onNode&&(i.onNode="<Node>"),t(`sign transaction ${e}`)(n,i,r)}return super.signTransaction(e,a)}async signMessage(e,{aeppRpcClientId:n,aeppOrigin:r,...a}={}){return null!=n&&t(`sign message ${e}`)(n,a,r),super.signMessage(e,a)}async signTypedData(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const s=(new eu.TypeResolver).resolveType(n),o=(new eu.ContractByteArrayEncoder).decodeWithType(e,s),c={...i,aci:n,decodedData:o};t(`sign typed data ${e}`)(r,c,a)}return super.signTypedData(e,n,i)}async signDelegationToContract(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,contractAddress:e};t("sign delegation to contract")(n,i,r)}return super.signDelegationToContract(e,a)}async signNameDelegationToContract(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const s={...i,contractAddress:e,name:n};t("sign delegation of name to contract")(r,s,a)}return super.signNameDelegationToContract(e,n,i)}async signAllNamesDelegationToContract(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,contractAddress:e};t("sign delegation of all names to contract")(n,i,r)}return super.signAllNamesDelegationToContract(e,a)}async signOracleQueryDelegationToContract(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const s={...i,contractAddress:e,oracleQueryId:n};t("sign delegation of oracle query to contract")(r,s,a)}return super.signOracleQueryDelegationToContract(e,n,i)}async sign(e,{aeppRpcClientId:n,aeppOrigin:r,...a}={}){return null!=n&&t(`sign raw data ${e}`)(n,a,r),super.sign(e,a)}async signDelegation(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,...oi(e)};t("sign delegation")(n,i,r)}return super.signDelegation(e,a)}static generate(){return new n($t().secretKey)}}this.aeSdk=new ad({id:window.origin,type:ke.window,nodes:[{name:"ae_uat",instance:new Tc("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new Tc("https://mainnet.aeternity.io")},{name:"ae_next",instance:new Tc("https://next.aeternity.io")}],accounts:[new n("9ebd7beda0c79af72a42ece3821a56eff16359b6df376cf049aee995565f022f840c974b97164776454ba119d84edc4d6058a8dec92b6edc578ab2d30b4c4200"),n.generate()],onCompiler:new Zd("https://v7.compiler.aepps.com"),name:"Wallet Iframe",onConnection:(t,n,r)=>{if(!confirm(`Client ${n.name} with id ${t} at ${r} want to connect`))throw new Fe;e[t]=n,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const ou=(0,ru.A)(su,[["render",z],["__scopeId","data-v-40b913fe"]]);var cu=ou;(0,d.Ef)(cu).mount("#app")},73519:function(){}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.m=e,function(){var e=[];n.O=function(t,r,a,i){if(!r){var s=1/0;for(d=0;d<e.length;d++){r=e[d][0],a=e[d][1],i=e[d][2];for(var o=!0,c=0;c<r.length;c++)(!1&i||s>=i)&&Object.keys(n.O).every((function(e){return n.O[e](r[c])}))?r.splice(c--,1):(o=!1,i<s&&(s=i));if(o){e.splice(d--,1);var l=a();void 0!==l&&(t=l)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[r,a,i]}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var a,i,s=r[0],o=r[1],c=r[2],l=0;if(s.some((function(t){return 0!==e[t]}))){for(a in o)n.o(o,a)&&(n.m[a]=o[a]);if(c)var d=c(n)}for(t&&t(r);l<s.length;l++)i=s[l],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(d)},r=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[504],(function(){return n(28486)}));r=n.O(r)})();
//# sourceMappingURL=app.56b726a8.js.map