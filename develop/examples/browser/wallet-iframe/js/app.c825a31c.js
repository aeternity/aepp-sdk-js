(function(){var e={70255:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{_getPollInterval:function(){return Ln},awaitHeight:function(){return Xn},getAccount:function(){return Zn},getBalance:function(){return er},getContract:function(){return ur},getContractByteCode:function(){return lr},getCurrentGeneration:function(){return tr},getGeneration:function(){return nr},getHeight:function(){return Qn},getKeyBlock:function(){return ir},getMicroBlockHeader:function(){return ar},getMicroBlockTransactions:function(){return rr},getName:function(){return mr},poll:function(){return Jn},resolveName:function(){return dr},txDryRun:function(){return cr},waitForTxConfirm:function(){return Yn}});var i={};n.r(i),n.d(i,{Account:function(){return ji},AuctionEntry:function(){return na},ByteCode:function(){return aa},Channel:function(){return ra},ChannelCloseMutualTx:function(){return Va},ChannelCloseSoloTx:function(){return Ga},ChannelCreateTx:function(){return Ua},ChannelDepositTx:function(){return ja},ChannelForceProgressTx:function(){return Wa},ChannelSetDelegatesTx:function(){return La},ChannelSettleTx:function(){return Ka},ChannelSlashTx:function(){return Qa},ChannelSnapshotSoloTx:function(){return Ja},ChannelWithdrawTx:function(){return Xa},CheckTxInPoolResponse:function(){return Ya},CommitmentId:function(){return Za},ContractCallObject:function(){return fa},ContractCallTx:function(){return es},ContractCreateTx:function(){return ts},ContractObject:function(){return ia},CountResponse:function(){return Ma},CreateContractUnsignedTx:function(){return As},Currency:function(){return oa},Delegates:function(){return Xi},DryRunAccount:function(){return ua},DryRunCallContext:function(){return pa},DryRunCallReq:function(){return da},DryRunInput:function(){return la},DryRunInputItem:function(){return ma},DryRunResult:function(){return ya},DryRunResults:function(){return ha},EncodedTx:function(){return $a},ErrorModel:function(){return Wi},Event:function(){return ga},GAAttachTx:function(){return rs},GAMetaTx:function(){return is},GAObject:function(){return Fa},GasPricesItem:function(){return Pa},Generation:function(){return Na},HCContractPubkeys:function(){return wa},HashResponse:function(){return Ca},Header:function(){return xa},HeightResponse:function(){return ba},Image:function(){return ca},KeyBlock:function(){return va},MicroBlockHeader:function(){return za},NameClaimTx:function(){return as},NameEntry:function(){return Ta},NameHash:function(){return ss},NamePointer:function(){return ta},NamePointerComplete:function(){return Sa},NamePreclaimTx:function(){return os},NameRevokeTx:function(){return cs},NameTransferTx:function(){return ls},NameUpdateTx:function(){return us},NextNonceResponse:function(){return Li},OffChainCallContract:function(){return bs},OffChainDeposit:function(){return zs},OffChainNewContract:function(){return Ms},OffChainTransfer:function(){return Ts},OffChainUpdate:function(){return Yi},OffChainWithdrawal:function(){return Ss},OracleExtendTx:function(){return ds},OracleQueries:function(){return qa},OracleQuery:function(){return _a},OracleQueryTx:function(){return ps},OracleRegisterTx:function(){return hs},OracleRespondTx:function(){return ys},PayingForTx:function(){return fs},PeerConnections:function(){return Oa},PeerCount:function(){return gs},PeerCountAvailable:function(){return vs},PeerCountConnected:function(){return Ns},PeerDetails:function(){return ms},PeerPubKey:function(){return ka},Peers:function(){return xs},PinningTx:function(){return Ia},PoI:function(){return sa},PostTxResponse:function(){return Da},Protocol:function(){return Ba},PubKey:function(){return Is},RegisteredOracle:function(){return Aa},RelativeTTL:function(){return Zi},SignedTx:function(){return Qi},SignedTxs:function(){return Ki},SpendTx:function(){return ws},Status:function(){return Ea},SyncStatus:function(){return Ra},TokenSupply:function(){return Cs},Ttl:function(){return ea},Tx:function(){return Ji},TxInfoObject:function(){return Ha},UnsignedTx:function(){return ns},discriminators:function(){return qs}});var a={};n.r(a),n.d(a,{payForTransaction:function(){return rc},spend:function(){return tc},transferFunds:function(){return nc}});var s={};n.r(s),n.d(s,{buildAuthTxHash:function(){return xc},buildAuthTxHashByGaMetaTx:function(){return Ic},createGeneralizedAccount:function(){return vc}});var o=n(53751),c=n(20641),l=n(90033);const u={class:"group"},m=["src"];function d(e,t,n,r,i,a){const s=(0,c.g2)("Value");return(0,c.uX)(),(0,c.CE)(c.FK,null,[t[12]||(t[12]=(0,c.Lk)("input",{id:"toggle-aepp",type:"checkbox"},null,-1)),t[13]||(t[13]=(0,c.Lk)("h2",null,[(0,c.eW)(" Wallet Iframe "),(0,c.Lk)("label",{for:"toggle-aepp"})],-1)),(0,c.Lk)("div",u,[(0,c.Lk)("div",null,[t[7]||(t[7]=(0,c.Lk)("div",null,"Aepp URL",-1)),(0,c.Lk)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,o.D$)(((...e)=>a.navigate&&a.navigate(...e)),["prevent"]))},[(0,c.bo)((0,c.Lk)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[o.Jo,e.nextAeppUrl]])],32)]),(0,c.Lk)("div",null,[t[8]||(t[8]=(0,c.Lk)("div",null,"Address",-1)),(0,c.Lk)("div",null,(0,l.v_)(e.address),1)]),(0,c.Lk)("div",null,[t[9]||(t[9]=(0,c.Lk)("div",null,"Node",-1)),(0,c.Lk)("div",null,(0,l.v_)(e.nodeName),1)]),(0,c.Lk)("div",null,[t[10]||(t[10]=(0,c.Lk)("div",null,"Balance",-1)),(0,c.bF)(s,{value:e.balancePromise},null,8,["value"])]),(0,c.Lk)("div",null,[t[11]||(t[11]=(0,c.Lk)("div",null,"RPC client",-1)),(0,c.Lk)("div",null,"status: "+(0,l.v_)(e.clientStatus??"no client")+", id: "+(0,l.v_)(e.clientId??"not defined"),1)]),(0,c.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>a.switchAccount&&a.switchAccount(...e))},"Switch Account"),(0,c.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>a.switchNode&&a.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,c.uX)(),(0,c.CE)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>a.disconnect&&a.disconnect(...e))},"Disconnect")):((0,c.uX)(),(0,c.CE)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??a.shareWalletInfo)())},(0,l.v_)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,c.Q3)("",!0):((0,c.uX)(),(0,c.CE)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,m))],64)}n(18111),n(20116),n(61701);class p extends Error{constructor(e){super(e),this.name="BaseError"}}class h extends p{constructor(e){super(e),this.name="AccountError"}}class y extends p{constructor(e){super(e),this.name="AensError"}}class f extends p{constructor(e){super(e),this.name="AeppError"}}class g extends p{constructor(e){super(e),this.name="CompilerError"}}class N extends p{constructor(e){super(e),this.name="ContractError"}}class v extends p{constructor(e){super(e),this.name="CryptographyError"}}class x extends p{constructor(e){super(e),this.name="NodeError"}}class I extends p{constructor(e){super(e),this.name="TransactionError"}}class w extends p{constructor(e){super(e),this.name="WalletError"}}class C extends p{constructor(e,t,n){super(`${e} should be ${t}, got ${n} instead`),this.name="ArgumentError"}}class b extends v{constructor(e){super(e),this.name="IllegalArgumentError"}}class z extends p{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class M extends p{constructor(e,t){super(`Giving up after ${e} blocks mined, transaction hash: ${t}`),this.name="TxTimedOutError"}}class T extends p{constructor(e){super(e),this.name="TypeError"}}class S extends p{constructor(e){super(e),this.name="NotImplementedError"}}class A extends p{constructor(e,t,n,r){super(`Unsupported ${e} version ${t}. Supported: >= ${n}`+(null==r?"":` < ${r}`)),this.name="UnsupportedVersionError"}}class q extends p{constructor(e){super(e),this.name="InternalError"}}class _ extends q{constructor(e="Expected to not happen, required for TS"){super(e),this.name="UnexpectedTsError"}}class k extends h{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class P extends y{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class E extends y{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class B extends y{constructor(e){super(e),this.name="InvalidAensNameError"}}class O extends f{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class R extends f{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class $ extends f{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class D extends N{constructor(e,t=""){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`+t),this.name="BytecodeMismatchError"}}class H extends N{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class F extends N{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class V extends N{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class G extends N{constructor(e){super(e),this.name="MissingContractAddressError"}}class U extends N{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class j extends N{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class W extends N{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class L extends N{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class K extends N{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class Q extends N{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class J extends N{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((([e])=>`"${e}"`)).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class X extends v{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class Y extends v{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class Z extends v{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ee extends v{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class te extends v{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class ne extends x{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class re extends x{constructor(e){super(e),this.name="NodeNotFoundError"}}class ie extends I{constructor(e){super(e),this.name="DecodeError"}}class ae extends I{constructor(e){super(e),this.name="PayloadLengthError"}}class se extends I{constructor(e){super(e),this.name="DryRunError"}}class oe extends I{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class ce extends I{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class le extends I{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class ue extends I{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class me extends w{constructor(e){super(e),this.name="AlreadyConnectedError"}}class de extends w{constructor(e){super(e),this.name="NoWalletConnectedError"}}class pe extends w{constructor(e){super(e),this.name="RpcConnectionError"}}class he{constructor({debug:e=!1}){this.debug=e}connect(e,t){if(this.isConnected())throw new me("You already connected")}disconnect(){if(!this.isConnected())throw new de("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}n(43838);var ye=n(1814);let fe=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),ge=function(e){return e["window"]="window",e["extension"]="extension",e}({}),Ne=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),ve=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["unsafeSign"]="data.unsafeSign",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),xe=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const Ie=[];class we extends p{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Ie.find((t=>t.code===e.code));if(null==t)throw new q(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class Ce extends we{constructor(e){super("Invalid transaction"),(0,ye.A)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,ye.A)(Ce,"code",2),Ie.push(Ce);class be extends we{constructor(e){super("Operation rejected by user"),(0,ye.A)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,ye.A)(be,"code",4),Ie.push(be);class ze extends we{constructor(){super("Unsupported Protocol Version"),(0,ye.A)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,ye.A)(ze,"code",5),Ie.push(ze);class Me extends we{constructor(e){super("Wallet deny your connection request"),(0,ye.A)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,ye.A)(Me,"code",9),Ie.push(Me);class Te extends we{constructor(){super("You are not connected to the wallet"),(0,ye.A)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,ye.A)(Te,"code",10),Ie.push(Te);class Se extends we{constructor(e){super(`You are not subscribed for account ${e}`),(0,ye.A)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,ye.A)(Se,"code",11),Ie.push(Se);class Ae extends we{constructor(){super("The peer failed to execute your request due to unknown error"),(0,ye.A)(this,"code",12),this.name="RpcInternalError"}}(0,ye.A)(Ae,"code",12),Ie.push(Ae);class qe extends we{constructor(e){super(`Wallet can't find a network by id "${e}"`),(0,ye.A)(this,"code",13),this.data=e,this.name="RpcNoNetworkById"}}(0,ye.A)(qe,"code",13),Ie.push(qe);class _e extends we{constructor(){super("Method not found"),(0,ye.A)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function ke(e,t,n){Pe(e,t),t.set(e,n)}function Pe(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ee(e,t){return e.get(Oe(e,t))}function Be(e,t,n){return e.set(Oe(e,t),n),n}function Oe(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}(0,ye.A)(_e,"code",-32601),Ie.push(_e);var Re=new WeakMap,$e=new WeakMap,De=new WeakMap;class He extends he{constructor({target:e,self:t=window,origin:n,sendDirection:r,receiveDirection:i=fe.to_aepp,...a}={}){super(a),ke(this,Re,void 0),ke(this,$e,void 0),ke(this,De,void 0),Be($e,this,e),Be(De,this,t),this.origin=n,this.sendDirection=r,this.receiveDirection=i}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var n;if("object"!==typeof t.data||"2.0"!==(null!==(n=t.data.jsonrpc)&&void 0!==n?n:t.data.data?.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=Ee($e,this)&&Ee($e,this)!==t.source)return;this.receiveMessage(t);let{data:r}=t;if(null!=r.type){if(t.data.type!==this.receiveDirection)return;r=r.data}e(r,t.origin,t.source)},Ee(De,this).addEventListener("message",this.listener),Be(Re,this,t)}disconnect(){if(super.disconnect(),null==this.listener||null==Ee(Re,this))throw new q("Expected to not happen, required for TS");Ee(De,this).removeEventListener("message",this.listener),delete this.listener,Ee(Re,this).call(this),Be(Re,this,void 0)}sendMessage(e){var t;if(null==Ee($e,this))throw new pe("Can't send messages without target");const n=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(n),Ee($e,this).postMessage(n,null!==(t=this.origin)&&void 0!==t?t:"*")}}var Fe=n(81429),Ve=n(50925);class Ge{}var Ue=n(12330),je=n(35756);const We=async e=>new Promise((t=>{setTimeout(t,e)})),Le=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),Ke=(()=>{try{return Fe.Buffer.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),Qe=Ke?(e,t)=>Fe.Buffer.concat(e.map((e=>Fe.Buffer.from(e))),t):Fe.Buffer.concat;function Je(e,t){return e in t}function Xe(e,t){return t.includes(e)}function Ye(e){return e instanceof je.pj&&404===e.statusCode&&e.message.includes("Account not found")}function Ze(e){if(!(e instanceof Error))throw e}var et=n(54858),tt=n(39685);let nt=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["AccountSecretKey"]="sk",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});function rt(e){return(new tt).update(e).digest()}const it=[nt.ContractBytearray,nt.ContractStoreKey,nt.ContractStoreValue,nt.Transaction,nt.OracleQuery,nt.OracleResponse,nt.State,nt.Poi,nt.StateTrees,nt.CallStateTree,nt.Bytearray],at=[nt.KeyBlockHash,nt.MicroBlockHash,nt.BlockPofHash,nt.BlockTxHash,nt.BlockStateHash,nt.Channel,nt.ContractAddress,nt.TxHash,nt.OracleAddress,nt.OracleQueryId,nt.AccountAddress,nt.AccountSecretKey,nt.Signature,nt.Commitment,nt.PeerPubkey,nt.Name],st={[nt.KeyBlockHash]:32,[nt.MicroBlockHash]:32,[nt.BlockPofHash]:32,[nt.BlockTxHash]:32,[nt.BlockStateHash]:32,[nt.Channel]:32,[nt.ContractAddress]:32,[nt.TxHash]:32,[nt.OracleAddress]:32,[nt.OracleQueryId]:32,[nt.AccountAddress]:32,[nt.AccountSecretKey]:32,[nt.Signature]:64,[nt.Commitment]:32,[nt.PeerPubkey]:32,[nt.State]:32};function ot(e,t){if(!Je(t,st))return;const n=st[t];if(null!=n&&e.length!==n)throw new ae(`Payload should be ${n} bytes, got ${e.length} instead`)}const ct=e=>rt(rt(e)).slice(0,4),lt=e=>Qe([e,ct(e)]);function ut(e){const t=e.slice(0,-4);if(!ct(t).equals(e.slice(-4)))throw new X;return t}const mt={encode:e=>lt(e).toString("base64"),decode:e=>ut(Fe.Buffer.from(e,"base64"))},dt={encode:e=>et.A.encode(lt(e)),decode:e=>ut(Fe.Buffer.from(et.A.decode(e)))},pt=e=>{const t=it.find((t=>t===e));if(null!=t)return[t,mt];const n=at.find((t=>t===e));if(null!=n)return[n,dt];throw new C("prefix",`one of ${[...at,...it].join(", ")}`,e)};function ht(e){const[t,n,r]=e.split("_");if(null==n)throw new ie(`Encoded string missing payload: ${e}`);if(null!=r)throw new ie(`Encoded string have extra parts: ${e}`);const[i,a]=pt(t),s=a.decode(n);return ot(s,i),s}function yt(e,t){const[,n]=pt(t);return ot(e,t),`${t}_${n.encode(e)}`}function ft(e,...t){if(ht(e),0===t.length)return;const n=e.split("_")[0];if(!Xe(n,t))throw new C("Encoded string type",t.length>1?`one of ${t.join(", ")}`:t[0],n)}function gt(e,...t){try{return ft(e,...t),!0}catch(n){return!1}}function Nt(e){return Fe.Buffer.from((0,Ue.blake2b)(e,void 0,32))}function vt(e,t,n){return Ve.sign.detached.verify(e,t,ht(n))}function xt(e){return e<253?Fe.Buffer.from([e]):Qe(e<=65535?[Fe.Buffer.from([253]),Fe.Buffer.from(new Uint16Array([e]).buffer)]:e<=4294967295?[Fe.Buffer.from([254]),Fe.Buffer.from(new Uint32Array([e]).buffer)]:[Fe.Buffer.from([255]),Fe.Buffer.from(new BigUint64Array([BigInt(e)]).buffer)])}const It=Fe.Buffer.from("aeternity Signed Message:\n","utf8"),wt=xt(It.length);function Ct(e){const t=Fe.Buffer.from(e,"utf8");return Nt(Qe([wt,It,xt(t.length),t]))}var bt=n(67962),zt=n(45195);function Mt(e){var t;return Nt(null!==(t=zt(e))&&void 0!==t?t:"")}function Tt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},n=(new bt.TypeResolver).resolveType(t,{}),r=(new bt.ContractByteArrayEncoder).encodeWithType(e,n);return Nt(ht(r))}function St(e,t,n){return Nt(Qe([wt,new Uint8Array([0]),Tt(n),Mt(t),Nt(ht(e))]))}var At=n(46062);const qt={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n},_t=5e4,kt=1e9,Pt=1e14,Et=31,Bt=Le({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(([e,t])=>[e,new At.g(t).times(Pt)]));let Ot=function(e){return e[e["Ceres"]=6]="Ceres",e}({}),Rt=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),$t=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),Dt=function(e){return e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleRespondTx"]=24]="OracleRespondTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e}({});const Ht={[Ot.Ceres]:{"contract-create":{vmVersion:[Rt.Fate3],abiVersion:[$t.Fate]},"contract-call":{vmVersion:[],abiVersion:[$t.Fate]},"oracle-call":{vmVersion:[],abiVersion:[$t.NoAbi,$t.Fate]}}};function Ft(e,t){var n;const r=Ht[e][t];return{vmVersion:null!==(n=r.vmVersion[0])&&void 0!==n?n:Rt.Fate2,abiVersion:r.abiVersion[0]}}var Vt={serialize(e,t,{consensusProtocolVersion:n=Ot.Ceres}){var r;return null!==(r=e)&&void 0!==r||(e=Ft(n,"contract-create")),Fe.Buffer.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Ot).length&&null!=n.onNode?Ft((await n.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,n]=e;return{vmVersion:+t,abiVersion:+n}}},Gt={_getProtocolDetails(e,t){const n=Dt.ContractCallTx===t||Dt.GaMetaTx===t?"contract-call":"oracle-call";return Ft(e,n).abiVersion},serialize(e,{tag:t},{consensusProtocolVersion:n=Ot.Ceres}){const r=null!==e&&void 0!==e?e:this._getProtocolDetails(n,t);return Fe.Buffer.from([r])},async prepare(e,{tag:t},n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Ot).length&&null!=n.onNode?this._getProtocolDetails((await n.onNode.getNodeInfo()).consensusProtocolVersion,t):void 0},deserialize(e){return e[0]}};function Ut(e,t=!1){if(null==e)return Fe.Buffer.from([]);if(Number.isInteger(e)||At.g.isBigNumber(e)||t){if(At.g.isBigNumber(e)||(e=new At.g(e)),!e.isInteger())throw new T(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),Fe.Buffer.from(t,"hex")}if("string"===typeof e)return Fe.Buffer.from(e);throw new z}const jt=[nt.AccountAddress,nt.Name,nt.Commitment,nt.OracleAddress,nt.ContractAddress,nt.Channel];function Wt(...e){return{serialize(t){const n=t.slice(0,2);if(!Xe(n,jt))throw new le(n);if(!Xe(n,e))throw new C("Address encoding",e.join(", "),n);const r=jt.indexOf(n)+1;return Fe.Buffer.from([...Ut(r),...ht(t)])},deserialize(t){const n=Fe.Buffer.from(t).readUIntBE(0,1),r=jt[n-1];if(null==r)throw new oe(n);if(!Xe(r,e))throw new C("Address encoding",e.join(", "),r);return yt(t.subarray(1),r)}}}function Lt(e){return{serialize(t,n){return t.map((t=>e.serialize(t,n)))},deserialize(t,n){return t.map((t=>e.deserialize(t,n)))}}}function Kt(e,t){const n=Fe.Buffer.from([...ht(e),...Ut(t)]),r=Nt(n);return yt(r,nt.ContractAddress)}const Qt=".chain";function Jt(e){const[t,n,...r]=e.split(".");if(0!==r.length)throw new C("aens name","including only one dot",e);if(n!==Qt.slice(1))throw new C("aens name",`suffixed with ${Qt}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new C("aens name","not containing emoji",e);if("-"===t[2]&&"-"===t[3])throw new C("aens name",'without "-" char in both the third and fourth positions',e);if("-"===t[0])throw new C("aens name",'starting with no "-" char',e);if("-"===t.at(-1))throw new C("aens name",'ending with no "-" char',e);let i;try{const r=new URL(`http://${t}.${n}`);if(r.username+r.password+r.port+r.search+r.hash!==""||"/"!==r.pathname)throw new C("aens name","valid",e);i=r.host}catch(a){if(a instanceof TypeError&&a.message.includes("Invalid URL"))throw new C("aens name","valid",e);throw a}if(!/^[a-z0-9.-]+$/i.test(i))throw new C("aens name","without illegal chars",e);if(i.length>63+Qt.length)throw new C("aens name","not too long",e);return i}function Xt(e){return yt(Nt(Jt(e)),nt.Name)}function Yt(e=Fe.Buffer.from([])){return BigInt("0x"+Fe.Buffer.from(e).toString("hex")).toString()}function Zt(e){Jt(e)}function en(e){try{return Zt(e),!0}catch(t){return!1}}nt.AccountAddress,nt.OracleAddress,nt.ContractAddress,nt.Channel;function tn(e){const t=Jt(e).length-Qt.length;return Bt[Math.min(t,Et)]}var nn={serialize(e){if(Number(e)<0)throw new C("value","greater or equal to 0",e);return Ut(e,!0)},deserialize(e){return Yt(e)}};const rn=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||At.g.isBigNumber(e));let an=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const sn={[an.AE]:0,[an.MILI_AE]:-3,[an.MICRO_AE]:-6,[an.NANO_AE]:-9,[an.PICO_AE]:-12,[an.FEMTO_AE]:-15,[an.AETTOS]:-18},on=(e,{denomination:t=an.AETTOS,targetDenomination:n=an.AETTOS})=>{if(!rn(e))throw new C("value","a number",e);return new At.g("bigint"===typeof e?e.toString():e).shiftedBy(sn[t]-sn[n]).toFixed()};var cn={...nn,serializeAettos(e,t,n){return null!==e&&void 0!==e?e:"0"},serialize(e,t,{denomination:n=an.AETTOS,...r}){return nn.serialize(this.serializeAettos(null!=e?on(e,{denomination:n}):e,t,r))}};function ln(e,t){return{serialize(e){if(null==e){if(!0===t)return Fe.Buffer.from([]);throw new C("Encoded data","provided",e)}return ht(e)},deserialize(t){return yt(t,e)}}}function un(e){return{serialize(t,{packEntry:n}){return ArrayBuffer.isView(t)?Fe.Buffer.from(t):"string"===typeof t&&t.startsWith("tx_")?ht(t):ht(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackEntry:n}){return n(yt(t,nt.Bytearray),e)}}}n(22489);function mn(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new C("value","to be a number",e);if(e>255)throw new C("value","to be less than 256",e);if(!Xe(e,t))throw new C("value","to be a value of Enum",e);return Fe.Buffer.from([e])},deserialize(e){if(1!==e.length)throw new C("buffer","to have single element",e.length);const n=e[0];if(!Xe(n,t))throw new C("value","to be a value of Enum",n);return n}}}const dn=new WeakMap;async function pn(e){const t=dn.get(e);if(null!=t&&t.time>Date.now()-2e4)return t.gasPrice;const{minGasPrice:n,utilization:r}=(await e.getRecentGasPrices())[0];let i=r<70?0n:BigInt(new At.g(n.toString()).times(1.01).integerValue().toFixed());const a=100000n*BigInt(kt);return i>a&&(console.warn(`Estimated gas price ${i} exceeds the maximum safe value for unknown reason. It will be limited to ${a}. To overcome this restriction provide \`gasPrice\`/\`fee\` in options.`),i=a),dn.set(e,{gasPrice:i,time:Date.now()}),i}var hn={...cn,async prepare(e,t,{onNode:n,denomination:r}){if(null!=e)return e;if(null==n)throw new C("onNode","provided (or provide `gasPrice` instead)",n);const i=await pn(n);return 0n!==i?on(i,{targetDenomination:r}):void 0},serializeAettos(e=kt.toString()){if(+e<kt)throw new b(`Gas price ${e.toString()} must be bigger than ${kt}`);return e}};const yn=15e3,fn=20,gn=3,Nn=e=>{var t;const n={[Dt.ChannelForceProgressTx]:30,[Dt.ChannelOffChainTx]:0,[Dt.ContractCreateTx]:5,[Dt.ContractCallTx]:12,[Dt.GaAttachTx]:5,[Dt.GaMetaTx]:5,[Dt.PayingForTx]:.2},r=null!==(t=n[e])&&void 0!==t?t:1;return r*yn},vn=(e,t,{relativeTtl:n,innerTxSize:r})=>{switch(e){case Dt.OracleRegisterTx:case Dt.OracleExtendTx:case Dt.OracleQueryTx:case Dt.OracleRespondTx:return t*fn+Math.ceil(32e3*n/Math.floor(525600/gn));case Dt.GaMetaTx:case Dt.PayingForTx:return(t-r)*fn;default:return t*fn}};function xn(e){const t={[Dt.OracleRegisterTx]:"oracleTtlValue",[Dt.OracleExtendTx]:"oracleTtlValue",[Dt.OracleQueryTx]:"queryTtlValue",[Dt.OracleRespondTx]:"responseTtlValue"},{tag:n}=e;return Je(n,t)?e[t[n]]:1}function In(e,t,n){const{length:r}=ht(e),i=t(e);let a=0;return i.tag!==Dt.GaMetaTx&&i.tag!==Dt.PayingForTx||(a=ht(n(i.tx.encodedTx)).length),Nn(i.tag)+vn(i.tag,r,{relativeTtl:xn(i),innerTxSize:a})}function wn(e,t,n){let r,i=new At.g(0);do{r=i,i=new At.g(kt).times(In(e(i),t,n))}while(!i.eq(r));return i}const Cn="_gas-price:";var bn={...cn,async prepare(e,t,{onNode:n}){if(null!=e)return e;if(null==n)throw new C("onNode","provided (or provide `fee` instead)",n);const r=await pn(n);return 0n!==r?Cn+r:void 0},serializeAettos(e,{rebuildTx:t,unpackTx:n,buildTx:r,_computingMinFee:i},{_canIncreaseFee:a}){if(null!=i)return i.toFixed();const s=wn((e=>t({_computingMinFee:e})),n,r),o=!0===e?.startsWith(Cn)?s.dividedBy(kt).times(e.replace(Cn,"")):new At.g(null!==e&&void 0!==e?e:s);if(s.gt(o)){if(!0===a)return s.toFixed();throw new b(`Fee ${o.toString()} must be bigger than ${s}`)}return o.toFixed()},serialize(e,t,n){return"string"===typeof e&&e.startsWith(Cn)?nn.serialize(this.serializeAettos(e,t,n)):cn.serialize.call(this,e,t,n)}},zn={serialize(e){return nn.serialize(e)},deserialize(e){return+nn.deserialize(e)}};function Mn(e,t,n,r){return e-+In(t(e),n,r)}var Tn={...zn,serialize(e,{tag:t,rebuildTx:n,unpackTx:r,buildTx:i,_computingGasLimit:a},{gasMax:s=6e6}){if(null!=a)return zn.serialize(a);const o=t===Dt.GaMetaTx?_t:Mn(s,(e=>n({_computingGasLimit:e,_canIncreaseFee:!0})),r,i),c=null!==e&&void 0!==e?e:o;if(c>o)throw new b(`Gas limit ${c} must be less or equal to ${o}`);return zn.serialize(c)}},Sn={serialize(e){return Fe.Buffer.from(e)},deserialize(e){return e.toString()}},An={serialize(e){return Sn.serialize(e)},deserialize(e){return Sn.deserialize(e)}},qn={...cn,serializeAettos(e,t){const n=tn(t.name),r=new At.g(null!==e&&void 0!==e?e:n);if(n.gt(r))throw new E(r,n);return r.toFixed()},serialize(e,t,n){return cn.serialize.call(this,e,t,n)}};const _n=Wt(nt.Name);var kn={..._n,serialize(e){return _n.serialize(en(e)?Xt(e):e)}};function Pn(e){return{...zn,serialize(e,{tag:t}){if(Dt.GaAttachTx===t&&1!==e)throw new C("nonce","equal 1 if GaAttachTx",e);return zn.serialize(e)},async prepare(t,n,r){if(null!=t)return t;const{onNode:i,strategy:a}=r,s=r[e],o="provided (or provide `nonce` instead)";if(null==i)throw new C("onNode",o,i);if(null==s)throw new C("senderId",o,s);return(await i.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:a}).catch((e=>{if(!Ye(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const En=Fe.Buffer.from([1]),Bn=Fe.Buffer.from([2]),On=1024,Rn=Wt(...jt);var $n=e=>({serialize(t){if(t.length>32)throw new b(`Expected 32 pointers or less, got ${t.length} instead`);return t.map((({key:t,id:n})=>{let r;if(gt(n,...jt)&&(r=[...e?[En]:[],Rn.serialize(n)]),gt(n,nt.Bytearray)){const e=ht(n);if(e.length>On)throw new C("Raw pointer",`shorter than ${On+1} bytes`,`${e.length} bytes`);r=[Bn,e]}if(null==r)throw new ie(`Unknown AENS pointer value: ${n}`);return[Ut(t),Fe.Buffer.concat(r)]}))},deserialize(t){return t.map((([t,n])=>{if(!e)return{key:t.toString(),id:Rn.deserialize(n)};const r=n.subarray(0,1),i=n.subarray(1);let a;if(r.equals(En)&&(a=Rn.deserialize(i)),r.equals(Bn)&&(a=yt(i,nt.Bytearray)),null==a)throw new ie(`Unknown AENS pointer tag: ${r}`);return{key:t.toString(),id:a}}))}}),Dn={...cn,async prepare(e,t,n){if(null!=e)return e;const{onNode:r,oracleId:i}=n,a="provided (or provide `queryFee` instead)";if(null==r)throw new C("onNode",a,r);if(null==i)throw new C("oracleId",a,i);return(await r.getOracleByPubkey(i)).queryFee.toString()}},Hn={serialize(e){return Fe.Buffer.from(e)},deserialize(e){return e}};function Fn(e,t){return{serialize(n){if((!0!==t||null!=n)&&n!==e)throw new C("ShortUIntConst",e,n);return zn.serialize(e)},deserialize(t){const n=zn.deserialize(t);if(n!==e)throw new C("ShortUIntConst",e,n);return e},constValue:e,constValueOptional:!0===t}}var Vn={serialize(e){return Ut(e)},deserialize(e){return e.toString()}};function Gn(e){return{serialize(t,{buildTx:n}){return ArrayBuffer.isView(t)?Fe.Buffer.from(t):"string"===typeof t&&t.startsWith("tx_")?ht(t):ht(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackTx:n}){return n(yt(t,nt.Transaction),e)}}}n(7588),n(83646),n(89752),n(43729),n(94952),n(36407),n(49500),n(22198);function Un(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,(n,...r)=>{const i=e();if(null==i)throw new C("wrapped value","defined",i);if("get"===t&&"_wrappedValue"===r[0])return i;const a=Reflect[t](i,...r);return"function"===typeof a&&"get"===t?a.bind(i):a}]))))}function jn(e){var t;return null!==(t=e._wrappedValue)&&void 0!==t?t:e}async function Wn(e,{_expectedMineRate:t,_microBlockCycle:n,onNode:r}){if(null!=t&&"key-block"===e)return t;if(null!=n&&"micro-block"===e)return n;const i=await r.getNetworkId();return"ae_dev"===i?0:!["ae_mainnet","ae_uat"].includes(i)&&await r._isHyperchain()?3e3:"key-block"===e?18e4:3e3}async function Ln(e,t){return Math.floor(await Wn(e,t)/3)}const Kn=new WeakMap;async function Qn({cached:e=!1,...t}){const n=jn(t.onNode);if(e){const e=Kn.get(n);if(null!=e&&e.time>Date.now()-await Ln("key-block",t))return e.height}const{height:r}=await n.getCurrentKeyBlockHeight();return Kn.set(n,{height:r,time:Date.now()}),r}async function Jn(e,{blocks:t=5,interval:n,...r}){var i;let a;null!==(i=n)&&void 0!==i||(n=await Ln("micro-block",r));do{const i=await r.onNode.getTransactionByHash(e);if(-1!==i.blockHeight)return i;null==a&&(a=0!==i.tx.ttl?-1:await Qn({...r,cached:!0})+t),await We(n)}while(-1===a||await Qn({...r,cached:!0})<a);throw new M(t,e)}async function Xn(e,{interval:t,...n}){var r;let i;null!==(r=t)&&void 0!==r||(t=Math.min(await Ln("key-block",n),5e3));do{null!=i&&await We(t),i=await Qn(n)}while(i<e);return i}async function Yn(e,{confirm:t=3,onNode:n,...r}){const{blockHeight:i}=await n.getTransactionByHash(e),a=await Xn(i+t,{onNode:n,...r}),{blockHeight:s}=await n.getTransactionByHash(e);switch(s){case-1:throw new ue(e);case i:return a;default:return Yn(e,{onNode:n,confirm:t,...r})}}async function Zn(e,{height:t,hash:n,onNode:r}){return null!=t?r.getAccountByPubkeyAndHeight(e,t):null!=n?r.getAccountByPubkeyAndHash(e,n):r.getAccountByPubkey(e)}async function er(e,{format:t=an.AETTOS,...n}){const r=e.startsWith("ok_")?yt(ht(e),nt.AccountAddress):e,{balance:i}=await Zn(r,n).catch((e=>{if(!Ye(e))throw e;return{balance:0n}}));return on(i,{targetDenomination:t})}async function tr({onNode:e}){return e.getCurrentGeneration()}async function nr(e,{onNode:t}){return"number"===typeof e?t.getGenerationByHeight(e):t.getGenerationByHash(e)}async function rr(e,{onNode:t}){return(await t.getMicroBlockTransactionsByHash(e)).transactions}async function ir(e,{onNode:t}){return"number"===typeof e?t.getKeyBlockByHeight(e):t.getKeyBlockByHash(e)}async function ar(e,{onNode:t}){return t.getMicroBlockHeaderByHash(e)}const sr=new Map;async function or(e,t){const n=sr.get(e);if(sr.delete(e),null==n)throw new q("Can't get dry-run request");let r;try{const e="number"===typeof n[0].top?(await t.getKeyBlockByHeight(n[0].top)).hash:n[0].top;r=await t.protectedDryRunTxs({top:e,txEvents:n[0].txEvents,txs:n.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(n.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:qt.amount})))})}catch(s){return void n.forEach((({reject:e})=>e(s)))}const{results:i,txEvents:a}=r;i.forEach((({result:e,reason:t,...r},i)=>{const{resolve:s,reject:o,tx:c,accountAddress:l}=n[i];"ok"===e?s({...r,txEvents:a}):o(Object.assign(new se(t),{tx:c,accountAddress:l}))}))}async function cr(e,t,{top:n,txEvents:r,combine:i,onNode:a}){var s;const o=!0===i?[n,r].join():"immediate",c=null!==(s=sr.get(o))&&void 0!==s?s:[];return sr.set(o,c),new Promise(((s,l)=>{var u;c.push({tx:e,accountAddress:t,top:n,txEvents:r,resolve:s,reject:l}),!0===i?null!==(u=c.timeout)&&void 0!==u||(c.timeout=setTimeout((()=>{or(o,a)}))):or(o,a)}))}async function lr(e,{onNode:t}){return t.getContractCode(e)}async function ur(e,{onNode:t}){return t.getContract(e)}async function mr(e,{onNode:t}){return t.getNameEntryByName(e)}async function dr(e,t,{verify:n=!0,resolveByNode:r=!1,onNode:i}){if(en(e)){if(n||r){const n=await i.getNameEntryByName(e),a=n.pointers.find((e=>e.key===t));if(null==a)throw new P(e,t);if(r)return a.id}return Xt(e)}try{return ht(e),e}catch(a){throw new B(`Invalid name or address: ${e}`)}}var pr={...zn,serialize(e){return zn.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,{onNode:n,absoluteTtl:r,_isInternalBuild:i,...a}){if(!0!==r&&0!==e&&(null!=e||!0===i)){var s;if(null==n)throw new C("onNode","provided",n);e=(null!==(s=e)&&void 0!==s?s:3)+await Qn({...a,onNode:n,cached:!0})}return e}};function hr(e,t){return{...t,serialize(n,r){return t.serialize(null!==n&&void 0!==n?n:e,r)}}}function yr(e,t){return{...t,serialize(n,r,i){return t.serialize(e(n),r,i)}}}let fr=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({}),gr=function(e){return e[e["Account"]=10]="Account",e[e["Oracle"]=20]="Oracle",e[e["Name"]=30]="Name",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["Channel"]=58]="Channel",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({}),Nr=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({});const vr=Gn(),xr=Gn(Dt.SignedTx),Ir=un(gr.TreesPoi),wr=hr(3600,zn),Cr=yr((e=>{var t;const n=18e4;if(null!==(t=e)&&void 0!==t||(e=n),e>=1&&e<=n)return e;throw new C("nameTtl",`a number between 1 and ${n} blocks`,e)}),zn),br=[{tag:Fn(Dt.SignedTx),version:Fn(1,!0),signatures:Lt(Hn),encodedTx:vr},{tag:Fn(Dt.SpendTx),version:Fn(1,!0),senderId:Wt(nt.AccountAddress),recipientId:Wt(nt.AccountAddress,nt.ContractAddress,nt.Name),amount:cn,fee:bn,ttl:pr,nonce:Pn("senderId"),payload:ln(nt.Bytearray,!0)},{tag:Fn(Dt.NamePreclaimTx),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),commitmentId:Wt(nt.Commitment),fee:bn,ttl:pr},{tag:Fn(Dt.NameClaimTx),version:Fn(2,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),name:An,nameSalt:hr(0,nn),nameFee:qn,fee:bn,ttl:pr},{tag:Fn(Dt.NameUpdateTx),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),nameId:kn,nameTtl:Cr,pointers:$n(!1),clientTtl:wr,fee:bn,ttl:pr},{tag:Fn(Dt.NameUpdateTx),version:Fn(2),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),nameId:kn,nameTtl:Cr,pointers:$n(!0),clientTtl:wr,fee:bn,ttl:pr},{tag:Fn(Dt.NameTransferTx),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),nameId:kn,recipientId:Wt(nt.AccountAddress,nt.Name),fee:bn,ttl:pr},{tag:Fn(Dt.NameRevokeTx),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),nameId:kn,fee:bn,ttl:pr},{tag:Fn(Dt.ContractCreateTx),version:Fn(1,!0),ownerId:Wt(nt.AccountAddress),nonce:Pn("ownerId"),code:ln(nt.ContractBytearray),ctVersion:Vt,fee:bn,ttl:pr,deposit:yr(((e=0)=>{if(0===+e)return e;throw new C("deposit","equal 0 (because is not refundable)",e)}),cn),amount:cn,gasLimit:Tn,gasPrice:hn,callData:ln(nt.ContractBytearray)},{tag:Fn(Dt.ContractCallTx),version:Fn(1,!0),callerId:Wt(nt.AccountAddress),nonce:Pn("callerId"),contractId:Wt(nt.ContractAddress,nt.Name),abiVersion:Gt,fee:bn,ttl:pr,amount:cn,gasLimit:Tn,gasPrice:hn,callData:ln(nt.ContractBytearray)},{tag:Fn(Dt.OracleRegisterTx),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nonce:Pn("accountId"),queryFormat:Vn,responseFormat:Vn,queryFee:cn,oracleTtlType:hr(Nr.delta,mn(Nr)),oracleTtlValue:hr(500,zn),fee:bn,ttl:pr,abiVersion:Gt},{tag:Fn(Dt.OracleExtendTx),version:Fn(1,!0),oracleId:Wt(nt.OracleAddress,nt.Name),nonce:Pn("oracleId"),oracleTtlType:hr(Nr.delta,mn(Nr)),oracleTtlValue:hr(500,zn),fee:bn,ttl:pr},{tag:Fn(Dt.OracleQueryTx),version:Fn(1,!0),senderId:Wt(nt.AccountAddress),nonce:Pn("senderId"),oracleId:Wt(nt.OracleAddress,nt.Name),query:Vn,queryFee:Dn,queryTtlType:hr(Nr.delta,mn(Nr)),queryTtlValue:hr(10,zn),responseTtlType:hr(Nr.delta,mn(Nr)),responseTtlValue:hr(10,zn),fee:bn,ttl:pr},{tag:Fn(Dt.OracleRespondTx),version:Fn(1,!0),oracleId:Wt(nt.OracleAddress),nonce:Pn("oracleId"),queryId:ln(nt.OracleQueryId),response:Vn,responseTtlType:hr(Nr.delta,mn(Nr)),responseTtlValue:hr(10,zn),fee:bn,ttl:pr},{tag:Fn(Dt.ChannelCreateTx),version:Fn(2,!0),initiator:Wt(nt.AccountAddress),initiatorAmount:nn,responder:Wt(nt.AccountAddress),responderAmount:nn,channelReserve:nn,lockPeriod:nn,ttl:pr,fee:bn,initiatorDelegateIds:Lt(Wt(...jt)),responderDelegateIds:Lt(Wt(...jt)),stateHash:ln(nt.State),nonce:Pn("initiator")},{tag:Fn(Dt.ChannelCloseMutualTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),initiatorAmountFinal:nn,responderAmountFinal:nn,ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelCloseSoloTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),payload:ln(nt.Transaction),poi:Ir,ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelSlashTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),payload:ln(nt.Transaction),poi:Ir,ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelDepositTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),amount:nn,ttl:pr,fee:bn,stateHash:ln(nt.State),round:zn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelWithdrawTx),version:Fn(1,!0),channelId:Wt(nt.Channel),toId:Wt(nt.AccountAddress),amount:nn,ttl:pr,fee:bn,stateHash:ln(nt.State),round:zn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelSettleTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),initiatorAmountFinal:nn,responderAmountFinal:nn,ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelForceProgressTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),payload:ln(nt.Transaction),round:zn,update:ln(nt.ContractBytearray),stateHash:ln(nt.State),offChainTrees:ln(nt.StateTrees),ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.ChannelOffChainTx),version:Fn(2,!0),channelId:Wt(nt.Channel),round:zn,stateHash:ln(nt.State)},{tag:Fn(Dt.ChannelSnapshotSoloTx),version:Fn(1,!0),channelId:Wt(nt.Channel),fromId:Wt(nt.AccountAddress),payload:ln(nt.Transaction),ttl:pr,fee:bn,nonce:Pn("fromId")},{tag:Fn(Dt.GaAttachTx),version:Fn(1,!0),ownerId:Wt(nt.AccountAddress),nonce:Pn("ownerId"),code:ln(nt.ContractBytearray),authFun:Hn,ctVersion:Vt,fee:bn,ttl:pr,gasLimit:Tn,gasPrice:hn,callData:ln(nt.ContractBytearray)},{tag:Fn(Dt.GaMetaTx),version:Fn(2,!0),gaId:Wt(nt.AccountAddress),authData:ln(nt.ContractBytearray),abiVersion:Gt,fee:bn,gasLimit:Tn,gasPrice:hn,tx:xr},{tag:Fn(Dt.PayingForTx),version:Fn(1,!0),payerId:Wt(nt.AccountAddress),nonce:Pn("payerId"),fee:bn,tx:xr}];var zr=n(18212);function Mr(e,t,n,r){const i=e.filter((e=>e.tag.constValue===n));if(0===i.length)throw new ce(`${t[n]} (${n})`,0);if(null==r){const e=i.find((e=>e.version.constValueOptional));if(null==e)throw new q(`Can't find default schema of ${t[n]} (${n})`);r=e.version.constValue}const a=i.find((e=>e.version.constValue===r));if(null==a)throw new ce(`${t[n]} (${n})`,r);return Object.entries(a)}function Tr(e,t,n,r,i){const a=Mr(e,t,n.tag,n.version),s=a.map((([e,t])=>t.serialize(n[e],{...n,...r},n)));return yt((0,zr.encode)(s),i)}function Sr(e,t,n,r,i){const a=(0,zr.decode)(ht(n));if(!ArrayBuffer.isView(a[0])||!ArrayBuffer.isView(a[1]))throw new ie("Can't parse tag or version in provided RLP");const s=Fe.Buffer.from(a[0]).readUintBE(0,a[0].length),o=Fe.Buffer.from(a[1]).readUintBE(0,a[1].length),c=Mr(e,t,s,o);if(null!=r&&r!==s)throw new ie(`Expected ${t[r]} tag, got ${t[s]} instead`);if(a.length!==c.length)throw new C("RLP length",c.length,a.length);return Object.fromEntries(c.map((([e,t],n)=>[e,t.deserialize(a[n],i)])))}var Ar,qr={serialize(e){return Fe.Buffer.from([e?1:0])},deserialize(e){return 1===e[0]}};function _r(e,t){return{serialize(e,{packEntry:n}){return ht(n({tag:gr.Mtree,values:Object.entries(e).map((([e,r])=>({tag:gr.MtreeValue,key:ht(e),value:ht(n({...r,tag:t}))})))}))},deserialize(n,{unpackEntry:r}){const{values:i}=r(yt(n,nt.Bytearray),gr.Mtree);return Object.fromEntries(i.filter((({key:t})=>e!==nt.ContractAddress||32===t.length)).map((({key:n,value:i})=>[yt(n,e),r(yt(i,nt.Bytearray),t)])))},recursiveType:!0}}function kr(e,t){Er(e,t),t.add(e)}function Pr(e,t,n){Er(e,t),t.set(e,n)}function Er(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Br(e,t,n){return e.set(Rr(e,t),n),n}function Or(e,t){return e.get(Rr(e,t))}function Rr(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var $r=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}($r||{}),Dr=new WeakMap,Hr=new WeakMap,Fr=new WeakMap,Vr=new WeakMap,Gr=new WeakMap,Ur=new WeakMap,jr=new WeakSet;class Wr{get isComplete(){return Or(Hr,this)}constructor(e,t,n,r){if(kr(this,jr),Pr(this,Dr,void 0),Pr(this,Hr,!0),Pr(this,Fr,void 0),Pr(this,Vr,void 0),Pr(this,Gr,void 0),Pr(this,Ur,void 0),Br(Vr,this,t),Br(Gr,this,n),Br(Ur,this,r),Br(Dr,this,e[0].toString("hex")),Br(Fr,this,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=Or(Fr,this)[Or(Dr,this)])Object.entries(Or(Fr,this)).forEach((([e,t])=>{if(Lr.call(Wr,t)!==e)throw new Y;const{type:n}=Kr.call(Wr,t);switch(n){case $r.Branch:t.slice(0,16).filter((e=>e.length)).forEach((e=>{null==Or(Fr,this)[e.toString("hex")]&&Br(Hr,this,!1)}));break;case $r.Extension:if(null==Or(Fr,this)[t[1].toString("hex")])throw new Z("Can't find a node by hash in extension node");break;case $r.Leaf:break;default:throw new q(`Unknown MPTree node type: ${n}`)}}));else{if(0!==Object.keys(Or(Fr,this)).length)throw new Z("Can't find a node by root hash");Br(Hr,this,!1)}}isEqual(e){return Or(Dr,this)===Or(Dr,e)}serialize(){return[Fe.Buffer.from(Or(Dr,this),"hex"),Object.entries(Or(Fr,this)).map((([e,t])=>[Fe.Buffer.from(e,"hex"),t]))]}get(e){const t=Rr(jr,this,Qr).call(this,ht(e).toString("hex"));return null==t?t:Or(Ur,this).call(this,yt(t,nt.Bytearray),Or(Gr,this))}toObject(){return Object.fromEntries(Rr(jr,this,Jr).call(this).filter((([e])=>Or(Vr,this)!==nt.ContractAddress||66!==e.length)).map((([e,t])=>[yt(Fe.Buffer.from(e,"hex"),Or(Vr,this)),Or(Ur,this).call(this,yt(t,nt.Bytearray),Or(Gr,this))])))}}function Lr(e){return Fe.Buffer.from(Nt((0,zr.encode)(e))).toString("hex")}function Kr(e){switch(e.length){case 17:return{type:$r.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new te(t);const n=t<=1?$r.Extension:$r.Leaf,r=[0,2].includes(t)?2:1;return{type:n,...n===$r.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(r)}}default:throw new ee(e.length)}}function Qr(e){let t=Or(Dr,this),n=e;while(1){const e=Or(Fr,this)[t];if(null==e){if(!this.isComplete)return;throw new q("Can't find node in complete tree")}const{type:r,value:i,path:a}=Kr.call(Ar,e);switch(r){case $r.Branch:if(0===n.length)return i;t=e[+`0x${n[0]}`].toString("hex"),n=n.substring(1);break;case $r.Extension:if(n.substring(0,a?.length)!==a)return;t=e[1].toString("hex"),n=n.substring(a.length);break;case $r.Leaf:if(a!==n)return;return i;default:throw new q(`Unknown MPTree node type: ${r}`)}}}function Jr(){const e=[],t=(n,r)=>{const i=Or(Fr,this)[n];if(null==i){if(!this.isComplete)return;throw new q("Can't find node in complete tree")}const{type:a,value:s,path:o}=Kr.call(Ar,i);switch(a){case $r.Branch:i.slice(0,16).map(((e,t)=>[e,t])).filter((([e])=>e.length)).forEach((([e,n])=>t(e.toString("hex"),r+n.toString(16)))),null!=s&&e.push([r,s]);break;case $r.Extension:t(i[1].toString("hex"),r+o);break;case $r.Leaf:if(null==s)throw new _;e.push([r+o,s]);break;default:throw new q(`Unknown MPTree node type: ${a}`)}};return t(Or(Dr,this),""),e}function Xr(e,t){return{serialize(e){return e.serialize()},deserialize(n,{unpackEntry:r}){return new Wr(n,e,t,r)}}}function Yr(e){return{serialize(t,{packEntry:n}){return ht(n({tag:e,payload:t}))},deserialize(t,{unpackEntry:n}){return n(yt(t,nt.Bytearray),e).payload},recursiveType:!0}}Ar=Wr;const Zr=Lt(un(gr.MtreeValue)),ei=_r(nt.ContractAddress,gr.Contract),ti=_r(nt.AccountAddress,gr.Account),ni=_r(nt.Bytearray,gr.ContractCall),ri=_r(nt.Channel,gr.Channel),ii=_r(nt.Name,gr.Name),ai=_r(nt.OracleAddress,gr.Oracle),si=[{tag:Fn(gr.Account),version:Fn(1),nonce:zn,balance:nn},{tag:Fn(gr.Account),version:Fn(2,!0),flags:nn,nonce:zn,balance:nn,gaContract:Wt(nt.ContractAddress,nt.Name),gaAuthFun:ln(nt.ContractBytearray)},{tag:Fn(gr.Name),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),nameTtl:zn,status:Hn,clientTtl:zn,pointers:$n},{tag:Fn(gr.Contract),version:Fn(1,!0),owner:Wt(nt.AccountAddress),ctVersion:Vt,code:ln(nt.ContractBytearray),log:ln(nt.ContractBytearray),active:qr,referers:Lt(Wt(nt.AccountAddress)),deposit:cn},{tag:Fn(gr.ContractCall),version:Fn(2,!0),callerId:Wt(nt.AccountAddress),callerNonce:zn,height:zn,contractId:Wt(nt.ContractAddress),gasPrice:nn,gasUsed:zn,returnValue:ln(nt.ContractBytearray),returnType:mn(fr),log:Lt(Hn)},{tag:Fn(gr.Oracle),version:Fn(1,!0),accountId:Wt(nt.AccountAddress),queryFormat:Vn,responseFormat:Vn,queryFee:cn,oracleTtlValue:zn,abiVersion:Gt},{tag:Fn(gr.Channel),version:Fn(3,!0),initiator:Wt(nt.AccountAddress),responder:Wt(nt.AccountAddress),channelAmount:nn,initiatorAmount:nn,responderAmount:nn,channelReserve:nn,initiatorDelegateIds:Lt(Wt(...jt)),responderDelegateIds:Lt(Wt(...jt)),stateHash:ln(nt.State),round:zn,soloRound:nn,lockPeriod:nn,lockedUntil:nn,initiatorAuth:ln(nt.ContractBytearray),responderAuth:ln(nt.ContractBytearray)},{tag:Fn(gr.ChannelOffChainUpdateTransfer),version:Fn(1,!0),from:Wt(nt.AccountAddress),to:Wt(nt.AccountAddress),amount:nn},{tag:Fn(gr.ChannelOffChainUpdateDeposit),version:Fn(1,!0),from:Wt(nt.AccountAddress),amount:nn},{tag:Fn(gr.ChannelOffChainUpdateWithdraw),version:Fn(1,!0),from:Wt(nt.AccountAddress),amount:nn},{tag:Fn(gr.ChannelOffChainUpdateCreateContract),version:Fn(1,!0),owner:Wt(nt.AccountAddress),ctVersion:Vt,code:ln(nt.ContractBytearray),deposit:nn,callData:ln(nt.ContractBytearray)},{tag:Fn(gr.ChannelOffChainUpdateCallContract),version:Fn(1,!0),caller:Wt(nt.AccountAddress),contract:Wt(nt.ContractAddress),abiVersion:Gt,amount:nn,callData:ln(nt.ContractBytearray),callStack:Hn,gasPrice:hn,gasLimit:Tn},{tag:Fn(gr.TreesPoi),version:Fn(1,!0),accounts:Lt(Xr(nt.AccountAddress,gr.Account)),calls:Lt(Xr(nt.Bytearray,gr.ContractCall)),channels:Lt(Xr(nt.Channel,gr.Channel)),contracts:Lt(Xr(nt.ContractAddress,gr.Contract)),ns:Lt(Xr(nt.Name,gr.Name)),oracles:Lt(Xr(nt.OracleAddress,gr.Oracle))},{tag:Fn(gr.StateTrees),version:Fn(0,!0),contracts:Yr(gr.ContractsMtree),calls:Yr(gr.CallsMtree),channels:Yr(gr.ChannelsMtree),ns:Yr(gr.NameserviceMtree),oracles:Yr(gr.OraclesMtree),accounts:Yr(gr.AccountsMtree)},{tag:Fn(gr.Mtree),version:Fn(1,!0),values:Zr},{tag:Fn(gr.MtreeValue),version:Fn(1,!0),key:Hn,value:Hn},{tag:Fn(gr.ContractsMtree),version:Fn(1,!0),payload:ei},{tag:Fn(gr.CallsMtree),version:Fn(1,!0),payload:ni},{tag:Fn(gr.ChannelsMtree),version:Fn(1,!0),payload:ri},{tag:Fn(gr.NameserviceMtree),version:Fn(1,!0),payload:ii},{tag:Fn(gr.OraclesMtree),version:Fn(1,!0),payload:ai},{tag:Fn(gr.AccountsMtree),version:Fn(1,!0),payload:ti},{tag:Fn(gr.GaMetaTxAuthData),version:Fn(1,!0),fee:cn,gasPrice:hn,txHash:ln(nt.TxHash)}],oi=[[gr.CallsMtree,nt.CallStateTree],[gr.StateTrees,nt.StateTrees],[gr.TreesPoi,nt.Poi]];function ci(e){var t;const n=null!==(t=oi.find((([t])=>t===e.tag))?.[1])&&void 0!==t?t:nt.Bytearray;return Tr(si,gr,e,{packEntry:ci},n)}function li(e,t){var n;return null!==(n=t)&&void 0!==n||(t=oi.find((([,t])=>e.startsWith(t)))?.[0]),Sr(si,gr,e,t,{unpackEntry:li})}function ui(e,t){return Mr(br,Dt,e,t)}function mi(e){return Tr(br,Dt,e,{unpackTx:pi,buildTx:mi,rebuildTx:t=>mi({...e,...t}),packEntry:ci},nt.Transaction)}async function di(e){return await Promise.all(ui(e.tag,e.version).map((async([t,n])=>{null!=n.prepare&&(e[t]=await n.prepare(e[t],e,e))}))),mi(e)}function pi(e,t){return Sr(br,Dt,e,t,{unpackTx:pi,unpackEntry:li})}function hi(e){const t="string"===typeof e&&e.startsWith("tx_")?ht(e):e;return yt(Nt(t),nt.TxHash)}function yi(e){let t=pi(e);if(Dt.SignedTx===t.tag&&(t=t.encodedTx),Dt.ContractCreateTx!==t.tag&&Dt.GaAttachTx!==t.tag)throw new C("contractTx","a contractCreateTx or gaAttach",t.tag);return Kt(t.ownerId,t.nonce)}function fi(e,t,n){gi(e,t),t.set(e,n)}function gi(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ni(e,t){return e.get(xi(e,t))}function vi(e,t,n){return e.set(xi(e,t),n),n}function xi(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}function Ii(e,t,n){const r=[t];n&&r.push("inner_tx");const i=ht(e);return Qe([Fe.Buffer.from(r.join("-")),Nt(i)])}var wi=new WeakMap;class Ci extends Ge{constructor(e){super(),fi(this,wi,void 0),this.secretKey=e;const t=Ve.sign.keyPair.fromSeed(ht(e));vi(wi,this,t.secretKey),this.address=yt(t.publicKey,nt.AccountAddress)}static generate(){const e=yt(Ve.randomBytes(32),nt.AccountSecretKey);return new Ci(e)}async sign(e,t){return this.unsafeSign(e,t)}async unsafeSign(e,t){return Ve.sign.detached(Fe.Buffer.from(e),Ni(wi,this))}async signTransaction(e,{innerTx:t,networkId:n,...r}={}){if(null==n)throw new C("networkId","provided",n);const i=ht(e),a=Ii(e,n,!0===t),s=[await this.unsafeSign(a,r)];return mi({tag:Dt.SignedTx,encodedTx:i,signatures:s})}async signMessage(e,t){return this.unsafeSign(Ct(e),t)}async signTypedData(e,t,{name:n,version:r,networkId:i,contractAddress:a,...s}={}){const o=St(e,t,{name:n,version:r,networkId:i,contractAddress:a}),c=await this.unsafeSign(o,s);return yt(c,nt.Signature)}async signDelegation(e,{networkId:t}={}){if(null==t)throw new C("networkId","provided",t);const n=Qe([wt,new Uint8Array([1]),Fe.Buffer.from(t),ht(e)]),r=await this.unsafeSign(n);return yt(r,nt.Signature)}}let bi=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const zi=Wt(nt.OracleAddress),Mi={serialize(e){return zi.serialize(yt(ht(e),nt.OracleAddress))},deserialize(e){return yt(ht(zi.deserialize(e)),nt.OracleQueryId)}},Ti=Wt(nt.ContractAddress),Si=[{tag:Fn(bi.AensWildcard),version:Fn(1,!0),accountAddress:Wt(nt.AccountAddress),contractAddress:Ti},{tag:Fn(bi.AensName),version:Fn(1,!0),accountAddress:Wt(nt.AccountAddress),nameId:kn,contractAddress:Ti},{tag:Fn(bi.AensPreclaim),version:Fn(1,!0),accountAddress:Wt(nt.AccountAddress),contractAddress:Ti},{tag:Fn(bi.Oracle),version:Fn(1,!0),accountAddress:Wt(nt.AccountAddress),contractAddress:Ti},{tag:Fn(bi.OracleResponse),version:Fn(1,!0),queryId:Mi,contractAddress:Ti}];function Ai(e,t){return Sr(Si,bi,e,t,{})}n(18237);var qi=n(28784);function _i(e,t){const n=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),r=n(e),i=n(t),a=Math.max(...r,...i)+1,s=e=>e.reverse().reduce(((e,t,n)=>e+t*a**n),0);return s(r)-s(i)}function ki(e,t,n){return _i(e,t)>=0&&(null==n||_i(e,n)<0)}const Pi="_sdk-big-int-",Ei=(...e)=>{const t=(0,qi.rl)(...e),{serialize:n,deserialize:r}=t;return Object.assign(t,{serialize(...[e,t,r,i]){if("BigInt"!==e.type.name||null==t)return n.call(this,e,t,r,i);var a;if("bigint"!==typeof t)throw null!==(a=r)&&void 0!==a||(r=e.serializedName),new Error(`${r} with value ${t} must be of type bigint.`);return t.toString()},deserialize(...[e,t,n,i]){if("BigInt"!==e.type.name||null==t){"string"===typeof t&&t.startsWith(Pi)&&(console.warn(`AeSdk internal error: BigInt value ${t} handled incorrectly`),t=+t.replace(Pi,""));const a=r.call(this,e,t,n,i);return a instanceof Date?new Date(+a/1e3):a}if("number"===typeof t&&t>Number.MAX_SAFE_INTEGER)throw new q(`Number ${t} is not accurate to be converted to BigInt`);return BigInt(t.toString().replace(Pi,""))}})},Bi=Number.MAX_SAFE_INTEGER.toString().length,Oi=new RegExp(String.raw`("\w+":\s*)(\d{${Bi},})(\s*[,}])`,"m"),Ri=new RegExp(String.raw`([[,]\s*)(\d{${Bi},})\b`,"m"),$i={name:"parse-big-int",async sendRequest(e,t){const n=await t(e);return null==n.bodyAsText||(n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(Oi,"g"),(e=>{const t=e.match(Oi);if(null==t)throw new _;const[,n,r,i]=t;return[n,+r>Number.MAX_SAFE_INTEGER?`"${Pi}${r}"`:r,i].join("")})),n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(Ri,"g"),(e=>{const t=e.match(Ri);if(null==t)throw new _;const[,n,r]=t;return`${n}"${Pi}${r}"`}))),n}},Di=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,n){var r;const i=t.headers.get("__queue");t.headers.delete("__queue");const a=async()=>n(t);if(null==i)return a();const s=(null!==(r=e.get(i))&&void 0!==r?r:Promise.resolve()).then(a);return e.set(i,s.catch((()=>{}))),s}},position:"perCall"}},Hi=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);e.set(i,a);try{return await a}finally{e.delete(i)}}},position:"perCall"}},Fi=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);return e.set(i,a),a}},position:"perCall"}},Vi=e=>({policy:{name:"error-formatter",async sendRequest(t,n){try{return await n(t)}catch(r){if(!(r instanceof je.pj)||null==r.request||r.message.startsWith("Error "))throw r;const t=`${new URL(r.request.url).pathname.slice(1)} error`;if(null==r.response?.bodyAsText)throw""===r.message&&(r.message=`${t}: ${r.code}`),r;const n=r.response.parsedBody;r.message=t;const i=null==n?` ${r.response.status} status code`:e(n);throw""!==i&&(r.message+=`:${i}`),r}}},position:"perCall"}),Gi=(e,t,n,r,i)=>({policy:{name:"version-check",async sendRequest(a,s){if(a.headers.has("__version-check"))return a.headers.delete("__version-check"),s(a);const o={requestOptions:{customHeaders:{"__version-check":"true"}}},c=[await t(o),n,r];if(!ki(...c)){const t=new A(e,...c);if(!i)throw t;console.warn(t.message)}return s(a)}},position:"perCall"}),Ui=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(n,r){var i;if(null!=n.headers.get("__no-retry"))return n.headers.delete("__no-retry"),r(n);const a=null!==(i=n.headers.get("__retry-code"))&&void 0!==i?i:NaN;n.headers.delete("__retry-code");const s=[200,400,403,410,500].filter((e=>e!==+a)),o=new Array(e).fill(0).map(((t,n)=>((n+1)/e)**2)),c=o.reduce(((e,t)=>e+t),0),l=o.map((e=>Math.floor(e/c*t)));let u=new je.pj("Not expected to be thrown");for(let t=0;t<=e;t+=1){if(0!==t){await We(l[t-1]);const e=new URL(n.url);e.searchParams.set("__sdk-retry",t.toString()),n.url=e.toString()}try{return await r(n)}catch(d){var m;if(!(d instanceof je.pj))throw d;if(s.includes(null!==(m=d.response?.status)&&void 0!==m?m:0))throw d;u=d}}throw u}},position:"perCall"}),ji={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{constraints:{InclusiveMinimum:0},serializedName:"balance",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},Wi={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}},errorCode:{serializedName:"error_code",type:{name:"String"}}}}},Li={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"next_nonce",required:!0,type:{name:"Number"}}}}},Ki={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},Qi={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:-1},serializedName:"block_height",required:!0,type:{name:"Number"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},encodedTx:{serializedName:"encoded_tx",type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ji={type:{name:"Composite",className:"Tx",modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",type:{name:"BigInt"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",type:{name:"Number"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",type:{name:"Number"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",type:{name:"BigInt"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",type:{name:"Number"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",type:{name:"Number"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",type:{name:"BigInt"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},Xi={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Yi={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},Zi={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},ea={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},ta={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},encodedKey:{serializedName:"encoded_key",type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},na={type:{name:"Composite",className:"AuctionEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},startedAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"started_at",required:!0,type:{name:"Number"}},endsAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ends_at",required:!0,type:{name:"Number"}},highestBidder:{serializedName:"highest_bidder",required:!0,type:{name:"String"}},highestBid:{constraints:{InclusiveMinimum:0},serializedName:"highest_bid",required:!0,type:{name:"BigInt"}}}}},ra={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{constraints:{InclusiveMinimum:0},serializedName:"channel_amount",required:!0,type:{name:"BigInt"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},soloRound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solo_round",required:!0,type:{name:"Number"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},lockedUntil:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"locked_until",required:!0,type:{name:"Number"}}}}},ia={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}}}}},aa={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},sa={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},oa={type:{name:"Composite",className:"Currency",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},symbol:{serializedName:"symbol",required:!0,type:{name:"String"}},subunit:{serializedName:"subunit",required:!0,type:{name:"String"}},subunitsPerUnit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"subunits_per_unit",required:!0,type:{name:"BigInt"}},fiatConverstionUrl:{serializedName:"fiat_converstion_url",type:{name:"String"}},fiatConversionUrl:{serializedName:"fiat_conversion_url",type:{name:"String"}},logo:{serializedName:"logo",type:{name:"Composite",className:"Image"}},primaryColour:{serializedName:"primary_colour",required:!0,type:{name:"String"}},secondaryColour:{serializedName:"secondary_colour",required:!0,type:{name:"String"}},networkName:{serializedName:"network_name",required:!0,type:{name:"String"}}}}},ca={type:{name:"Composite",className:"Image",modelProperties:{type:{serializedName:"type",type:{name:"String"}},data:{serializedName:"data",type:{name:"String"}}}}},la={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},ua={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},ma={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},da={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},gas:{constraints:{InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},pa={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},ha={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},ya={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},fa={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"caller_nonce",required:!0,type:{name:"Number"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},ga={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{constraints:{InclusiveMinimum:0},type:{name:"BigInt"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},Na={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},va={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},flags:{serializedName:"flags",required:!0,type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},xa={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},flags:{serializedName:"flags",type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Ia={type:{name:"Composite",className:"PinningTx",modelProperties:{epoch:{serializedName:"epoch",required:!0,type:{name:"Number"}},height:{serializedName:"height",required:!0,type:{name:"Number"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},parentPayload:{serializedName:"parent_payload",required:!0,type:{name:"String"}},lastLeader:{serializedName:"last_leader",required:!0,type:{name:"String"}},parentType:{serializedName:"parent_type",required:!0,type:{name:"String"}},parentNetworkId:{serializedName:"parent_network_id",required:!0,type:{name:"String"}}}}},wa={type:{name:"Composite",className:"HCContractPubkeys",modelProperties:{staking:{serializedName:"staking",required:!0,type:{name:"String"}},election:{serializedName:"election",type:{name:"String"}},rewards:{serializedName:"rewards",type:{name:"String"}}}}},Ca={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},ba={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}}}},za={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}}}}},Ma={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"count",required:!0,type:{name:"Number"}}}}},Ta={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointerComplete"}}}}}}},Sa={type:{name:"Composite",className:"NamePointerComplete",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},encodedKey:{serializedName:"encoded_key",required:!0,type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},Aa={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}}}}},qa={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},_a={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"sender_nonce",required:!0,type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}}}}},ka={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},Pa={type:{name:"Composite",className:"GasPricesItem",modelProperties:{minGasPrice:{constraints:{InclusiveMinimum:0},serializedName:"min_gas_price",required:!0,type:{name:"BigInt"}},utilization:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"utilization",required:!0,type:{name:"Number"}},minutes:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"minutes",required:!0,type:{name:"Number"}}}}},Ea={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solutions",required:!0,type:{name:"Number"}},difficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"difficulty",required:!0,type:{name:"Number"}},hashrate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"hashrate",required:!0,type:{name:"Number"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},uptime:{serializedName:"uptime",required:!0,type:{name:"String"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"peer_count",required:!0,type:{name:"Number"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"pending_transactions_count",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_block_height",required:!0,type:{name:"Number"}}}}},Ba={type:{name:"Composite",className:"Protocol",modelProperties:{version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},effectiveAtHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"effective_at_height",required:!0,type:{name:"Number"}}}}},Oa={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"inbound",required:!0,type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"outbound",required:!0,type:{name:"Number"}}}}},Ra={type:{name:"Composite",className:"SyncStatus",modelProperties:{progress:{serializedName:"progress",required:!0,type:{name:"Number"}},target:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},speed:{serializedName:"speed",required:!0,type:{name:"Number"}},estimate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"estimate",required:!0,type:{name:"Number"}}}}},$a={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},Da={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},Ha={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},Fa={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},Va={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},Ga={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ua={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},ja={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},Wa={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},La={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Ka={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},Qa={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ja={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Xa={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},Ya={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},Za={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},es={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ts={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ns={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},rs={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},is={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},as={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",required:!0,type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ss={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},os={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},cs={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ls={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},us={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ms={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"port",required:!0,type:{name:"Number"}},firstSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"first_seen",required:!0,type:{name:"Number"}},lastSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"last_seen",required:!0,type:{name:"Number"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_difficulty",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},ds={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}}}}},ps={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},hs={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}}}}},ys={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},fs={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},gs={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"blocked",required:!0,type:{name:"Number"}}}}},Ns={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"inbound",type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"outbound",type:{name:"Number"}}}}},vs={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"verified",type:{name:"Number"}},unverified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"unverified",type:{name:"Number"}}}}},xs={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Is={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},ws={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},Cs={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{constraints:{InclusiveMinimum:0},serializedName:"accounts",type:{name:"Number"}},contracts:{constraints:{InclusiveMinimum:0},serializedName:"contracts",type:{name:"Number"}},contractOracles:{constraints:{InclusiveMinimum:0},serializedName:"contract_oracles",type:{name:"Number"}},locked:{constraints:{InclusiveMinimum:0},serializedName:"locked",type:{name:"Number"}},oracles:{constraints:{InclusiveMinimum:0},serializedName:"oracles",type:{name:"Number"}},oracleQueries:{constraints:{InclusiveMinimum:0},serializedName:"oracle_queries",type:{name:"Number"}},pendingRewards:{constraints:{InclusiveMinimum:0},serializedName:"pending_rewards",type:{name:"Number"}},total:{constraints:{InclusiveMinimum:0},serializedName:"total",type:{name:"Number"}}}}},bs={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Yi.type.polymorphicDiscriminator,modelProperties:{...Yi.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},zs={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:Yi.type.polymorphicDiscriminator,modelProperties:{...Yi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Ms={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Yi.type.polymorphicDiscriminator,modelProperties:{...Yi.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ts={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:Yi.type.polymorphicDiscriminator,modelProperties:{...Yi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Ss={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:Yi.type.polymorphicDiscriminator,modelProperties:{...Yi.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},As={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...ns.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let qs={OffChainUpdate:Yi,"OffChainUpdate.OffChainCallContract":bs,"OffChainUpdate.OffChainDeposit":zs,"OffChainUpdate.OffChainNewContract":Ms,"OffChainUpdate.OffChainTransfer":Ts,"OffChainUpdate.OffChainWithdrawal":Ss};const _s={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},ks={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},Ps={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},Es={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},Bs={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},Os={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},Rs={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},$s={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Ds={parameterPath:"body",mapper:la},Hs={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},Fs={parameterPath:"nameHash",mapper:{serializedName:"name_hash",required:!0,type:{name:"String"}}},Vs={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},Gs={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},Us={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},js={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},Ws={parameterPath:"body",mapper:$a};class Ls extends qi.Nl{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const i={requestContentType:"application/json; charset=utf-8"},a="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${a}`:`${a}`,o={...i,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Qs)}getAccountByPubkeyAndHash(e,t,n){return this.sendOperationRequest({pubkey:e,hash:t,options:n},Js)}getAccountByPubkeyAndHeight(e,t,n){return this.sendOperationRequest({pubkey:e,height:t,options:n},Xs)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ys)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Zs)}getAuctionEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},eo)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},to)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},no)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},ro)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},io)}getCurrency(e){return this.sendOperationRequest({options:e},ao)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},so)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},oo)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},co)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},lo)}getTopHeader(e){return this.sendOperationRequest({options:e},uo)}getPinningTx(e){return this.sendOperationRequest({options:e},mo)}getHyperchainContractPubkeys(e){return this.sendOperationRequest({options:e},po)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},ho)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},yo)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},fo)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},go)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},No)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},vo)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},xo)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Io)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},wo)}getMicroBlockTransactionByHashAndIndex(e,t,n){return this.sendOperationRequest({hash:e,index:t,options:n},Co)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},bo)}getNameEntryByNameHash(e,t){return this.sendOperationRequest({nameHash:e,options:t},zo)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Mo)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},To)}getOracleQueryByPubkeyAndQueryId(e,t,n){return this.sendOperationRequest({pubkey:e,queryId:t,options:n},So)}getPeerPubkey(e){return this.sendOperationRequest({options:e},Ao)}getRecentGasPrices(e){return this.sendOperationRequest({options:e},qo)}getStatus(e){return this.sendOperationRequest({options:e},_o)}getChainEnds(e){return this.sendOperationRequest({options:e},ko)}getSyncStatus(e){return this.sendOperationRequest({options:e},Po)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},Eo)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Bo)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Oo)}}const Ks=Ei(i,!1),Qs={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ji},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},Js={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ji},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps,Es],headerParameters:[_s],serializer:Ks},Xs={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:ji},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0},410:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps,Bs],headerParameters:[_s],serializer:Ks},Ys={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:Li},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},queryParameters:[Os],urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},Zs={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:Ki},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},eo={path:"/v3/auctions/{name}",httpMethod:"GET",responses:{200:{bodyMapper:na},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Rs],headerParameters:[_s],serializer:Ks},to={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ra},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},no={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ia},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},ro={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:aa},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},io={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:sa},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},ao={path:"/v3/currency",httpMethod:"GET",responses:{200:{bodyMapper:oa}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},so={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:ha},400:{bodyMapper:Wi,isError:!0},403:{bodyMapper:Wi,isError:!0}},requestBody:Ds,urlParameters:[ks],headerParameters:[_s,$s],mediaType:"json",serializer:Ks},oo={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:Na},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},co={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Na},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},lo={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Na},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Bs],headerParameters:[_s],serializer:Ks},uo={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:xa},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},mo={path:"/v3/hyperchain/pin-tx",httpMethod:"GET",responses:{200:{bodyMapper:Ia},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},po={path:"/v3/hyperchain/contracts",httpMethod:"GET",responses:{200:{bodyMapper:wa},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},ho={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:va},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},yo={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Ca},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},fo={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:ba},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},go={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:va},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},No={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:va},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Bs],headerParameters:[_s],serializer:Ks},vo={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:va},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},xo={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:za},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},Io={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:Ki},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},wo={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:Ma},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},Co={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:Qi},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es,Hs],headerParameters:[_s],serializer:Ks},bo={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:Ta},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Rs],headerParameters:[_s],serializer:Ks},zo={path:"/v3/names/hash/{name_hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ta},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Fs],headerParameters:[_s],serializer:Ks},Mo={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Aa},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},To={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:qa},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},queryParameters:[Vs,Gs,Us],urlParameters:[ks,Ps],headerParameters:[_s],serializer:Ks},So={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:_a},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Ps,js],headerParameters:[_s],serializer:Ks},Ao={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:ka}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},qo={path:"/v3/recent-gas-prices",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"GasPricesItem"}}}}},400:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},_o={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:Ea}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},ko={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},Po={path:"/v3/sync-status",httpMethod:"GET",responses:{200:{bodyMapper:Ra},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks],headerParameters:[_s],serializer:Ks},Eo={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:Da},400:{bodyMapper:Wi,isError:!0}},requestBody:Ws,urlParameters:[ks],headerParameters:[_s,$s],mediaType:"json",serializer:Ks},Bo={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Qi},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks},Oo={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:Ha},400:{bodyMapper:Wi,isError:!0},404:{bodyMapper:Wi,isError:!0},410:{bodyMapper:Wi,isError:!0}},urlParameters:[ks,Es],headerParameters:[_s],serializer:Ks};function Ro(e,t,n){$o(e,t),t.set(e,n)}function $o(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Do(e,t){return e.get(Fo(e,t))}function Ho(e,t,n){return e.set(Fo(e,t),n),n}function Fo(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Vo=new WeakMap,Go=new WeakMap,Uo=new WeakMap;class jo extends Ls{constructor(e,{ignoreVersion:t=!1,retryCount:n=3,retryOverallDelay:r=800,...i}={}){const a=async e=>(await this._getCachedStatus(e)).nodeVersion;super(e,{allowInsecureConnection:!0,additionalPolicies:[Gi("node",a,"7.1.0","8.0.0",t),Di(),Hi(),Ui(n,r),Vi((e=>[" ",e.reason,null==e.errorCode?"":` (${e.errorCode})`].join("")))],...i}),Ro(this,Vo,void 0),Ro(this,Go,void 0),Ro(this,Uo,void 0),Ho(Vo,this,t),this.pipeline.addPolicy($i,{phase:"Deserialize"}),this.pipeline.removePolicy({name:je.OD}),this.pipeline.removePolicy({name:je.PR}),this.pipeline.removePolicy({name:"defaultRetryPolicy"})}async _getCachedStatus(e){return null!=Do(Go,this)?Do(Go,this):this.getStatus(e)}async getStatus(...e){const t=super.getStatus(...e);return t.then((()=>{Ho(Go,this,t)}),(()=>{})),t}async _isHyperchain(){return null!=Do(Uo,this)||Ho(Uo,this,this.getHyperchainContractPubkeys({requestOptions:{customHeaders:{"__no-retry":"true"}}}).then((()=>!0),(e=>{if("v3/hyperchain/contracts error: 404 status code"!==e.message)throw e;return!1}))),Do(Uo,this)}async getNetworkId(){return(await this._getCachedStatus()).networkId}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:n,topBlockHeight:r}=await this.getStatus(),i=n.filter((({effectiveAtHeight:e})=>r>=e)).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==Ot[i]){const e=i.toString(),t=Object.values(Ot).filter((e=>"number"===typeof e)).map((e=>+e)),n=Math.min(...t).toString(),r=(Math.max(...t)+1).toString(),a=new A("consensus protocol",e,n,r);if(!Do(Vo,this))throw a;console.warn(a.message)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:i}}}function Wo(e){const t=pi(e);switch(t.tag){case Dt.SignedTx:return Wo(mi(t.encodedTx));case Dt.GaMetaTx:return t.gaId;default:}const n=ui(t.tag,t.version).find((([e])=>"nonce"===e))?.[1];if(null==n)throw new I(`Transaction doesn't have nonce: ${Dt[t.tag]}`);if(!("senderKey"in n))throw new _;const r=t[n.senderKey];return r.replace(/^ok_/,"ak_")}function Lo(e,{innerTx:t,gasUsed:n,queryFee:r,isInitiator:i}={}){const a=pi(e);if(a.tag===Dt.SignedTx)throw new b("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in a&&"freeloader"!==t&&(s+=BigInt(a.fee)),a.tag===Dt.NameClaimTx&&(s+=BigInt(a.nameFee)),a.tag===Dt.OracleQueryTx&&(s+=BigInt(a.queryFee)),a.tag===Dt.OracleRespondTx&&(s-=BigInt(null!==r&&void 0!==r?r:0)),a.tag===Dt.ChannelSettleTx&&(!0===i&&(s-=BigInt(a.initiatorAmountFinal)),!1===i&&(s-=BigInt(a.responderAmountFinal))),a.tag!==Dt.SpendTx&&a.tag!==Dt.ContractCreateTx&&a.tag!==Dt.ContractCallTx&&a.tag!==Dt.ChannelDepositTx||"fee-payer"===t||(s+=BigInt(a.amount)),a.tag===Dt.ContractCreateTx&&(s+=BigInt(a.deposit)),a.tag!==Dt.ContractCreateTx&&a.tag!==Dt.ContractCallTx&&a.tag!==Dt.GaAttachTx&&a.tag!==Dt.GaMetaTx||"freeloader"===t||(s+=BigInt(a.gasPrice)*BigInt(null!==n&&void 0!==n?n:a.gasLimit)),a.tag!==Dt.GaMetaTx&&a.tag!==Dt.PayingForTx||(s+=Lo(mi(a.tx.encodedTx),a.tag===Dt.PayingForTx?{innerTx:"fee-payer"}:{})),s}function Ko(e,t,n){const r=pi(e,Dt.SignedTx);if(r.encodedTx.tag===Dt.GaMetaTx)return Lo(mi(r.encodedTx),n);const i=mi(r.encodedTx),a=Wo(i),[s,o]=[!0,!1].map((e=>vt(Ii(i,t,e),r.signatures[0],a)));if(!s&&!o)throw new I("Can't verify signature");return Lo(mi(r.encodedTx),{...s&&{innerTx:"freeloader"},...n})}async function Qo(e,t,{isMined:n,...r}={}){let i=pi(e);const a=i.tag===Dt.SignedTx,s=a&&!0===n&&hi(e);if(i.tag===Dt.SignedTx&&(i=i.encodedTx),null==r.gasUsed&&!1!==s&&[Dt.ContractCreateTx,Dt.ContractCallTx,Dt.GaAttachTx,Dt.GaMetaTx].includes(i.tag)){const{callInfo:e,gaInfo:n}=await t.getTransactionInfoByHash(s),i=null!==e&&void 0!==e?e:n;if(null==i)throw new q(`callInfo and gaInfo is not available for transaction ${s}`);r.gasUsed=i.gasUsed}if(null==r.queryFee&&Dt.OracleRespondTx===i.tag&&(r.queryFee=(await t.getOracleByPubkey(i.oracleId)).queryFee.toString()),null==r.isInitiator&&Dt.ChannelSettleTx===i.tag&&!0!==n){const{initiatorId:e}=await t.getChannelByPubkey(i.channelId);r.isInitiator=i.fromId===e}return a?Ko(e,await t.getNetworkId(),r):Lo(e,r)}const Jo=[];async function Xo(e,t,n){const r=Wo(mi(e)),[i,{height:a},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(r).catch((e=>{if(!Ye(e))throw e;return{id:r,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Jo.map((async r=>r(e,{node:t,account:i,height:a,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:n}))))).flat()}async function Yo(e,t){const n=t.pipeline.clone();n.removePolicy({name:"parse-big-int"});const r=new jo(t.$host,{ignoreVersion:!0,pipeline:n,additionalPolicies:[Fi()]});return r._getCachedStatus=async()=>t._getCachedStatus(),Xo(pi(e),r,[])}Jo.push(((e,{account:t,nodeNetworkId:n,parentTxTypes:r})=>{if(e.tag!==Dt.SignedTx)return[];const{encodedTx:i,signatures:a}=e;if(null==(null!==i&&void 0!==i?i:a))return[];if(1!==a.length)return[];const s=Fe.Buffer.from([n,...r.includes(Dt.PayingForTx)?["inner_tx"]:[]].join("-")),o=ht(mi(i)),c=Qe([s,o]),l=Qe([s,Nt(o)]);return vt(c,a[0],t.id)||vt(l,a[0],t.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,{node:t,parentTxTypes:n})=>{let r;return"encodedTx"in e&&(r=e.encodedTx),"tx"in e&&(r=e.tx),null==r?[]:Xo(r,t,[...n,e.tag])}),((e,{height:t})=>"ttl"in e?0===e.ttl||e.ttl>t?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${t}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]),(async(e,{account:t,parentTxTypes:n,node:r})=>{if(0!==n.length)return[];const i=await Qo(mi(e),r).catch((()=>0n));return i<=t.balance?[]:[{message:`Account balance ${t.balance} is not enough to execute the transaction that costs ${i}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),(async(e,{node:t})=>{if(e.tag!==Dt.SpendTx||gt(e.recipientId,nt.Name))return[];const n=await t.getAccountByPubkey(e.recipientId).catch((e=>{if(!Ye(e))throw e;return null}));return null==n||!0===n.payable?[]:[{message:"Recipient account is not payable",key:"RecipientAccountNotPayable",checkedKeys:["recipientId"]}]}),((e,{account:t})=>{let n;return e.tag===Dt.SignedTx&&"generalized"===t.kind&&0!==e.signatures.length&&(n="Generalized account can't be used to generate SignedTx with signatures"),e.tag===Dt.GaMetaTx&&"basic"===t.kind&&(n="Basic account can't be used to generate GaMetaTx"),null==n?[]:[{message:n,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,{consensusProtocolVersion:t})=>{var n,r;const i=Dt.OracleRegisterTx===e.tag,a=Dt.ContractCreateTx===e.tag||Dt.GaAttachTx===e.tag,s=Dt.ContractCallTx===e.tag||Dt.GaMetaTx===e.tag,o=null!==(n=null!==(r=i?"oracle-call":null)&&void 0!==r?r:a?"contract-create":null)&&void 0!==n?n:s?"contract-call":null;if(null==o)return[];const c=Ht[t][o];let l;if("abiVersion"in e&&(l={abiVersion:e.abiVersion}),"ctVersion"in e&&(l=e.ctVersion),null==l)throw new _;return!c.abiVersion.includes(l.abiVersion)||a&&!c.vmVersion.includes(l.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(l)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,{node:t})=>{if(Dt.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:n}=await t.getContract(e.contractId);return n?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(n){if(!(n instanceof je.pj)||null==n.response?.bodyAsText)throw n;return[{message:JSON.parse(n.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}));class Zo extends I{constructor(e,t,n){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=n}}async function ec(e,{onNode:t,onAccount:n,verify:r=!0,waitMined:i=!0,confirm:a,innerTx:s,...o}){const c=await n.signTransaction(e,{...o,onNode:t,innerTx:s,networkId:await t.getNetworkId()});if(!0===s)return{hash:hi(c),rawTx:c};if(r){const e=await Yo(c,t);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new Zo(t,e,c)}}try{let e;try{e=null!=n?`tx-${n.address}`:null}catch(l){e=null}const{txHash:r}=await t.postTransaction({tx:c},{requestOptions:{customHeaders:{"__retry-code":"400",...null!=e?{__queue:e}:{}}}});if(i){const e=await Jn(r,{onNode:t,...o}),n={...e,hash:e.hash,rawTx:c};if(null!=a&&+a>0){const e="boolean"===typeof a?void 0:a;return{...n,confirmationHeight:await Yn(r,{onNode:t,confirm:e,...o})}}return n}return{hash:r,rawTx:c}}catch(l){throw Ze(l),Object.assign(l,{rawTx:c,verifyTx:async()=>Yo(c,t)})}}async function tc(e,t,n){return ec(await di({_isInternalBuild:!0,...n,tag:Dt.SpendTx,senderId:n.onAccount.address,recipientId:await dr(t,"account_pubkey",n),amount:e}),n)}async function nc(e,t,n){if(+e<0||+e>1)throw new C("fraction","a number between 0 and 1",e);const r=await dr(t,"account_pubkey",n),i=n.onAccount.address,a=new At.g(await er.bind(n.onAccount)(i,n)),s=a.times(e).integerValue(At.g.ROUND_HALF_UP),{fee:o}=pi(await di({_isInternalBuild:!0,...n,tag:Dt.SpendTx,senderId:i,recipientId:r,amount:s}),Dt.SpendTx),c=s.plus(o).gt(a)?a.minus(o):s;return ec(await di({_isInternalBuild:!0,...n,tag:Dt.SpendTx,senderId:i,recipientId:r,amount:c}),n)}async function rc(e,t){return ec(await di({_isInternalBuild:!0,...t,tag:Dt.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}n(13579);function ic(e,t,n){sc(e,t),t.set(e,n)}function ac(e,t){sc(e,t),t.add(e)}function sc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function oc(e,t,n){return e.set(lc(e,t),n),n}function cc(e,t){return e.get(lc(e,t))}function lc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var uc=new WeakSet,mc=new WeakMap;class dc{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new b("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new b("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,n){const{callInfo:r}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==r)throw new N(`callInfo is not available for transaction ${e}`);const i=r;return{...lc(uc,this,pc).call(this,i,t,void 0,n),result:i}}async _estimateGas(e,t,n={}){const{result:r}=await this.$call(e,t,{...n,callStatic:!0});if(null==r)throw new _;const{gasUsed:i}=r;return Math.floor(1.25*i)}async $deploy(e,t){var n;const{callStatic:r,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===r)return this.$call("init",e,{...i,callStatic:r});if(null!=this.$options.address)throw new H;if(null==i.onAccount)throw new b("Can't deploy without account");const a=i.onAccount.address;if(null==this.$options.bytecode)throw new b("Can't deploy without bytecode");const s=await di({_isInternalBuild:!0,...i,tag:Dt.ContractCreateTx,gasLimit:null!==(n=i.gasLimit)&&void 0!==n?n:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:a}),{hash:o,...c}=await lc(uc,this,hc).call(this,s,"init",{...i,onAccount:i.onAccount});return this.$options.address=yi(c.rawTx),{...c,...null!=c.result?.log&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:a,transaction:o,address:this.$options.address}}async $call(e,t,n={}){var r;const{callStatic:i,top:a,...s}={...this.$options,...n},o=lc(uc,this,yc).call(this,e),{address:c,name:l}=this.$options,u=null!=l?Xt(l):c,{onNode:m}=s;if(null==e)throw new j;if("init"===e&&!0!==i)throw new V('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&Number(s.amount)>0&&!o.payable)throw new K(s.amount,e);let d;try{if(null==s.onAccount)throw new q("Use fallback account");d=s.onAccount.address}catch(y){const e=!0===i&&(y instanceof T&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof de||y instanceof q&&"Use fallback account"===y.message);if(!e)throw y;d=qt.pub}const p=this._calldata.encode(this._name,e,t);if(!0===i){if(null==s.nonce){const e=null!=a&&{["number"===typeof a?"height":"hash"]:a},t=await Zn(d,{...e,onNode:m}).catch((e=>{if(!Ye(e))throw e;return{kind:"basic",nonce:0}}));s.nonce="generalized"===t.kind?0:t.nonce+1}const t={...s,onNode:m,callData:p};let n;if("init"===e){if(null==this.$options.bytecode)throw new b('Can\'t dry-run "init" without bytecode');n=await di({...t,tag:Dt.ContractCreateTx,code:this.$options.bytecode,ownerId:d})}else{if(null==u)throw new G("Can't dry-run contract without address");n=await di({...t,tag:Dt.ContractCallTx,callerId:d,contractId:u})}const{callObj:r,...i}=await cr(n,d,{...s,top:a});if(null==r)throw new q(`callObj is not available for transaction ${n}`);const o=r;return{...i,...lc(uc,this,pc).call(this,o,e,n,s),tx:pi(n),result:o,rawTx:n,hash:hi(n),txData:void 0}}if(null!=a)throw new b("Can't handle `top` option in on-chain contract call");if(null==u)throw new G("Can't call contract without address");const h=await di({_isInternalBuild:!0,...s,tag:Dt.ContractCallTx,gasLimit:null!==(r=s.gasLimit)&&void 0!==r?r:await this._estimateGas(e,t,s),callerId:d,contractId:u,callData:p});if(null==s.onAccount)throw new b("Can't call contract on chain without account");return lc(uc,this,hc).call(this,h,e,{...s,onAccount:s.onAccount})}$decodeEvents(e,{omitUnknown:t,...n}={}){return e.map((e=>{let r;try{r=lc(uc,this,fc).call(this,e.address,e.topics[0],n)}catch(o){if(null!==t&&void 0!==t&&t&&o instanceof Q)return null;throw o}const i=this._calldata.decodeEvent(r,e.data,e.topics),[a,s]=Object.entries(i)[0];return{name:a,args:s,contract:{name:r,address:e.address}}})).filter((e=>null!=e))}static async initialize({onCompiler:e,onNode:t,bytecode:n,aci:r,address:i,sourceCodePath:a,sourceCode:s,fileSystem:o,validateBytecode:c,...l}){if(null==r&&null!=e){let t;var u;if(null!=a&&(t=await e.compile(a)),null!=s&&(t=await e.compileBySourceCode(s,o)),null!=t)r=t.aci,null!==(u=n)&&void 0!==u||(n=t.bytecode)}if(null==r)throw new U;let m;if(null!=i&&(i=await dr(i,"contract_pubkey",{resolveByNode:!0,onNode:t}),en(i)&&(m=i)),null==i&&null==s&&null==a&&null==n)throw new G("Can't create instance by ACI without address");if(null!=i){const e=await t.getContract(i);if(null==e.active)throw new F(i)}if(!0===c){if(null==i)throw new G("Can't validate bytecode without contract address");const r=(await t.getContractCode(i)).bytecode;let c=!1;if(null!=n)c=n===r;else if(null!=s){if(null==e)throw new b("Can't validate bytecode without compiler");c=await e.validateBySourceCode(r,s,o)}else if(null!=a){if(null==e)throw new b("Can't validate bytecode without compiler");c=await e.validate(r,a)}if(!c)throw new D(null!=(null!==s&&void 0!==s?s:a)?"source code":"bytecode")}return new gc({onCompiler:e,onNode:t,sourceCode:s,sourceCodePath:a,bytecode:n,aci:r,address:i,name:m,fileSystem:o,...l})}constructor({aci:e,...t}){ac(this,uc),ic(this,mc,void 0),this._aci=e;const n=e[e.length-1];if(null==n.contract)throw new b(`The last 'aci' item should have 'contract' key, got ${Object.keys(n)} keys instead`);oc(mc,this,n.contract),this._name=cc(mc,this).name,this._calldata=new bt.Encoder(e),this.$options=t,Object.assign(this,Object.fromEntries(cc(mc,this).functions.map((({name:e,arguments:t,stateful:n})=>{const r="init"!==e&&!n;return[e,async(...n)=>{const i=n.length===t.length+1?n.pop():{};if("object"!==typeof i)throw new T(`Options should be an object: ${i}`);return"init"===e?this.$deploy(n,{callStatic:r,...i}):this.$call(e,n,{callStatic:r,...i})}]}))))}}function pc({returnType:e,returnValue:t,log:n},r,i,a){let s;switch(e){case"ok":{const e=lc(uc,this,yc).call(this,r);return{decodedResult:this._calldata.decode(this._name,e.name,t),decodedEvents:this.$decodeEvents(n,a)}}case"revert":s=this._calldata.decodeFateString(t);break;case"error":if(s=ht(t).toString(),/Expected \d+ arguments, got \d+/.test(s))throw new D("ACI",`. Error provided by node: "${s}".`);if(/Trying to call undefined function: <<\d+,\d+,\d+,\d+>>/.test(s))throw new D("ACI",`. Error provided by node: "${s}", function name: ${r}.`);break;default:throw new q(`Unknown return type: ${e}`)}throw new W(s,i)}async function hc(e,t,n){const r=await ec(e,{...this.$options,...n});return{hash:r.hash,tx:pi(r.rawTx),txData:r,rawTx:r.rawTx,...null!=r.blockHeight&&await this.$getCallResultByTxHash(r.hash,t,n)}}function yc(e){const t=cc(mc,this).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new L(e)}function fc(e,t,{contractAddressToName:n}){const r={...this.$options.contractAddressToName,...n};if(null!=r[e])return r[e];const i=(e,t)=>JSON.stringify(e)===JSON.stringify(t),a=this._aci.map((({contract:e})=>e)).filter((e=>e?.event)),s=a.map((e=>[e.name,e.event.variant])).map((([e,t])=>t.map((t=>[e,Object.keys(t)[0],Object.values(t)[0]])))).flat().filter((([,e])=>BigInt(`0x${Nt(e).toString("hex")}`)===t)).filter((([,,e],t,n)=>!n.slice(0,t).some((t=>i(t[2],e)))));switch(s.length){case 0:throw new Q(t.toString(),e);case 1:return s[0][0];default:throw new J(e,s)}}const gc=dc;var Nc=gc;async function vc(e,t,{onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l,...u}){var m;const d=n.address;if("generalized"===(await Zn(d,{onNode:i})).kind)throw new b(`Account ${d} is already GA`);const p=await Nc.initialize({onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l}),h=await di({_isInternalBuild:!0,...u,tag:Dt.GaAttachTx,onNode:i,code:await p.$compile(),gasLimit:null!==(m=u.gasLimit)&&void 0!==m?m:await p._estimateGas("init",t,u),ownerId:d,callData:p._calldata.encode(p._name,"init",t),authFun:Nt(e)}),{hash:y,rawTx:f}=await ec(h,{onNode:i,onAccount:n,onCompiler:r,...u}),g=yi(f);return Object.freeze({owner:d,transaction:y,rawTx:f,gaContractId:g})}async function xc(e,{fee:t,gasPrice:n,onNode:r}){const{nodeNetworkId:i,consensusProtocolVersion:a}=await r.getNodeInfo();let s=Nt(Qe([Fe.Buffer.from(i),ht(e)]));if(a===Ot.Ceres){if(null==t)throw new C("fee","provided (in Ceres)",t);if(null==n)throw new C("gasPrice","provided (in Ceres)",n);s=Nt(ht(ci({tag:gr.GaMetaTxAuthData,fee:t,gasPrice:n,txHash:yt(s,nt.TxHash)})))}return s}async function Ic(e,{onNode:t}){const n=pi(e,Dt.SignedTx);if(n.encodedTx.tag!==Dt.GaMetaTx)throw new C("transaction","to include GaMetaTx",Dt[n.encodedTx.tag]);return xc(mi(n.encodedTx.tx.encodedTx),{fee:n.encodedTx.fee,gasPrice:n.encodedTx.gasPrice,onNode:t})}function wc(e,t,n){Cc(e,t),t.set(e,n)}function Cc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function bc(e,t){return e.get(Mc(e,t))}function zc(e,t,n){return e.set(Mc(e,t),n),n}function Mc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const Tc={...r,sendTransaction:ec,...a,...s};var Sc=new WeakMap;class Ac{constructor(e={}){(0,ye.A)(this,"_options",{}),wc(this,Sc,void 0),Object.assign(this._options,e),zc(Sc,this,{onAccount:Un((()=>this._options.onAccount)),onNode:Un((()=>this._options.onNode)),onCompiler:Un((()=>this._options.onCompiler))})}getContext(e={}){return{...this._options,...bc(Sc,this),...e}}async buildTx(e){return di({...this.getContext(),...e})}}Object.assign(Ac.prototype,Le(Tc,(([e,t])=>[e,function(...e){e.length=t.length;const n=e[e.length-1];return e[e.length-1]=this.getContext(n),t(...e)}])));const qc=Ac;var _c=qc;function kc(e,t,n){Pc(e,t),t.set(e,n)}function Pc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ec(e,t){return e.get(Oc(e,t))}function Bc(e,t,n){return e.set(Oc(e,t),n),n}function Oc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Rc=new WeakMap;class $c extends _c{constructor({nodes:e=[],...t}={}){super(t),(0,ye.A)(this,"pool",new Map),kc(this,Rc,void 0),e.forEach((({name:e,instance:t},n)=>this.addNode(e,t,0===n))),Bc(Rc,this,{onNode:Un((()=>this.api)),onCompiler:Un((()=>this.compilerApi)),onAccount:Un((()=>this._resolveAccount()))})}get compilerApi(){if(null==this._options.onCompiler)throw new g("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t,n=!1){if(this.pool.has(e))throw new ne(e);this.pool.set(e,t),(n||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new re(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new re("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async([e,t])=>({name:e,...await t.getNodeInfo()}))))}addresses(){return[]}_resolveAccount(e=this._options.onAccount){if("string"===typeof e)throw new S("Address in AccountResolver");if("object"===typeof e)return e;throw new T(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e,t={}){return this.unsafeSign(e,t)}async unsafeSign(e,{onAccount:t,...n}={}){return this._resolveAccount(t).unsafeSign(e,n)}async signTransaction(e,{onAccount:t,...n}={}){const r=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:r,...n})}async signMessage(e,{onAccount:t,...n}={}){return this._resolveAccount(t).signMessage(e,n)}async signTypedData(e,t,{onAccount:n,...r}={}){return this._resolveAccount(n).signTypedData(e,t,r)}async signDelegation(e,{onAccount:t,...n}={}){var r;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(t).signDelegation(e,n)}getContext(e={}){return{...this._options,...Ec(Rc,this),...e,...null!=e.onAccount&&{onAccount:this._resolveAccount(e.onAccount)}}}}class Dc extends $c{constructor({accounts:e,...t}={}){super(t),(0,ye.A)(this,"accounts",{}),e?.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(e=this.selectedAddress){if("string"===typeof e){const t=e;if(ht(t),null==this.accounts[t])throw new k(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e,{select:t}={}){const{address:n}=e;this.accounts[n]=e,!0===t&&this.selectAccount(n)}removeAccount(e){if(null==this.accounts[e])throw new k(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(ht(e),null==this.accounts[e])throw new k(e);this.selectedAddress=e}}function Hc(e,t){Vc(e,t),t.add(e)}function Fc(e,t,n){Vc(e,t),t.set(e,n)}function Vc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Gc(e,t){return e.get(jc(e,t))}function Uc(e,t,n){return e.set(jc(e,t),n),n}function jc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Wc=new WeakMap,Lc=new WeakMap,Kc=new WeakMap,Qc=new WeakSet;class Jc{constructor(e,t,n){Hc(this,Qc),Fc(this,Wc,new Map),Fc(this,Lc,0),Fc(this,Kc,void 0),this.connection=e,Uc(Kc,this,n),e.connect(jc(Qc,this,Xc).bind(this),t)}async request(e,t){return jc(Qc,this,Yc).call(this,Uc(Lc,this,Gc(Lc,this)+1),e,t),new Promise(((e,t)=>{Gc(Wc,this).set(Gc(Lc,this),{resolve:e,reject:t})}))}notify(e,t){jc(Qc,this,Yc).call(this,void 0,e,t)}}async function Xc(e,t){if("2.0"!==e?.jsonrpc)throw new O(JSON.stringify(e));if("result"in e||"error"in e)return void jc(Qc,this,el).call(this,e);const n=e;let r,i;try{if(!(n.method in Gc(Kc,this)))throw new _e;const e=n.method;r=await Gc(Kc,this)[e](n.params,t)}catch(a){Ze(a),i=a}if(null!=n.id&&jc(Qc,this,Zc).call(this,n.id,n.method,r,null==i||i instanceof we?i:new Ae),null!=i&&!(i instanceof we))throw i}function Yc(e,t,n){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=n?{params:n}:{}})}function Zc(e,t,n,r){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=r?{error:r.toJSON()}:{result:n}})}function el({id:e,error:t,result:n}){const r=Gc(Wc,this).get(e);if(null==r)throw new R(e);null!=t?r.reject(we.deserialize(t)):r.resolve(n),Gc(Wc,this).delete(e)}const tl=1;var nl=n(59643);const rl=nl({storeAsString:!0}),il=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return Le(e,(([e,t])=>[e,il(t)]));if(Array.isArray(e))return e.map((e=>il(e)));if("string"===typeof e&&new At.g(e).toString(10)===e){const t=new At.g(e);return t.toJSON=()=>t.toString(10),t}return e};var al={stringify:(...e)=>rl.stringify(il(e[0]),...e.slice(1)),parse:rl.parse};class sl extends Dc{constructor({name:e,id:t,type:n,onConnection:r,onSubscription:i,onDisconnect:a,onAskAccounts:s,onAskToSelectNetwork:o,...c}){super(c),(0,ye.A)(this,"_clients",new Map),this.onConnection=r,this.onSubscription=i,this.onDisconnect=a,this.onAskAccounts=s,this.onAskToSelectNetwork=o,this.name=e,this.id=t,this._type=n}_getAccountsForClient({addressSubscription:e}){const{current:t,connected:n}=this.getAccounts();return{current:e.has("current")||e.has("connected")?t:{},connected:e.has("connected")?n:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(ve.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(ve.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new $(e);return t}_isRpcClientConnected(e){return xe.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=xe.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=Fe.Buffer.from(Ve.randomBytes(8)).toString("base64");let n;const r={id:t,status:xe.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new Jc(e,(()=>{this._clients.delete(t),this.onDisconnect(t,n)}),{[ve.closeConnection]:e=>{n=e,this._disconnectRpcClient(t)},[ve.connect]:async({name:e,version:n,icons:i,connectNode:a},s)=>{if(n!==tl)throw new ze;return await this.onConnection(t,{name:e,icons:i,connectNode:a},s),r.status=xe.CONNECTED,r.connectNode=a,{...await this.getWalletInfo(),...a&&this._getNode()}},[ve.subscribeAddress]:async({type:e,value:n},i)=>{if(!this._isRpcClientConnected(t))throw new Te;switch(e){case Ne.subscribe:await this.onSubscription(t,{type:e,value:n},i),r.addressSubscription.add(n);break;case Ne.unsubscribe:r.addressSubscription.delete(n);break;default:throw new q(`Unknown subscription type: ${e}`)}return{subscription:Array.from(r.addressSubscription),address:this._getAccountsForClient(r)}},[ve.address]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new Te;return await this.onAskAccounts(t,e,n),this.addresses()},[ve.sign]:async({tx:e,onAccount:n=this.address,returnSigned:r,innerTx:i},a)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const s={onAccount:n,aeppOrigin:a,aeppRpcClientId:t,innerTx:i};if(r||!0===i)return{signedTransaction:await this.signTransaction(e,s)};try{return al.parse(al.stringify({transactionHash:await this.sendTransaction(e,{...s,verify:!1})}))}catch(o){const t=await Yo(e,this.api);if(t.length>0)throw new Ce(t);throw o}},[ve.signMessage]:async({message:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t};return{signature:Fe.Buffer.from(await this.signMessage(e,i)).toString("hex")}},[ve.signTypedData]:async({domain:e,aci:n,data:r,onAccount:i=this.address},a)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(i))throw new Se(i);const s={...e,onAccount:i,aeppOrigin:a,aeppRpcClientId:t};return{signature:await this.signTypedData(r,n,s)}},[ve.unsafeSign]:async({data:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=yt(await this.unsafeSign(ht(e),i),nt.Signature);return{signature:a}},[ve.signDelegation]:async({delegation:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=await this.signDelegation(e,i);return{signature:a}},[ve.updateNetwork]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new Te;return await this.onAskToSelectNetwork(t,e,n),null}})};return this._clients.set(t,r),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(ve.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){const{origin:e}=window.location;return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:"file://"===e?"*":e,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}var ol=n(367),cl=n(9293);function ll(e,t,n,r,i,a){return(0,c.uX)(),(0,c.CE)("div",{class:(0,l.C4)({error:e.error})},(0,l.v_)(e.text),3)}var ul={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},ml=n(66262);const dl=(0,ml.A)(ul,[["render",ll]]);var pl=dl,hl={components:{Value:pl},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const n=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,r=new He({target:n});this.clientId=this.aeSdk.addRpcClient(r),this.aeSdk.shareWalletInfo(this.clientId);const i=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(i);const e=this.aeSdk._getClient(this.clientId);e.status===xe.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===xe.CONNECTED&&e.rpc.notify(ve.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){const e=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e));this.nodeName=e[(e.indexOf(this.nodeName)+1)%e.length],this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(n,r,i)=>{if(!confirm(`Client ${e[n].name} with id ${n} at ${i} want to ${t}`+pl.methods.valueToString(r)))throw new be};class n extends Ci{async signTransaction(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){if(null!=n){const a={...i,unpackedTx:pi(e)};a.onCompiler&&(a.onCompiler="<Compiler>"),a.onNode&&(a.onNode="<Node>"),t(`sign transaction ${e}`)(n,a,r)}return super.signTransaction(e,i)}async signMessage(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign message ${e}`)(n,i,r),super.signMessage(e,i)}async signTypedData(e,n,{aeppRpcClientId:r,aeppOrigin:i,...a}){if(null!=r){const s=(new ol.A).resolveType(n),o=(new cl.A).decodeWithType(e,s),c={...a,aci:n,decodedData:o};t(`sign typed data ${e}`)(r,c,i)}return super.signTypedData(e,n,a)}async unsafeSign(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign raw data ${e}`)(n,i,r),super.unsafeSign(e,i)}async signDelegation(e,{aeppRpcClientId:n,aeppOrigin:r,...i}){if(null!=n){const a={...i,...Ai(e)};t("sign delegation")(n,a,r)}return super.signDelegation(e,i)}static generate(){return new n(super.generate().secretKey)}}this.aeSdk=new sl({id:window.origin,type:ge.window,nodes:[{name:"ae_uat",instance:new jo("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new jo("https://mainnet.aeternity.io")}],accounts:[new n("sk_2CuofqWZHrABCrM7GY95YSQn8PyFvKQadnvFnpwhjUnDCFAWmf"),n.generate()],name:"Wallet Iframe",onConnection:(t,n,r)=>{if(!confirm(`Client ${n.name} with id ${t} at ${r} want to connect`))throw new Me;e[t]=n,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null},onAskToSelectNetwork:async(e,n,r)=>{if(await t("select network")(e,n,r),n.networkId){if(!this.aeSdk.pool.has(n.networkId))throw new qe(n.networkId);await this.aeSdk.selectNode(n.networkId),this.nodeName=n.networkId}else this.aeSdk.pool.delete("by-aepp"),this.aeSdk.addNode("by-aepp",new jo(n.nodeUrl)),await this.aeSdk.selectNode("by-aepp"),this.nodeName="by-aepp"}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const yl=(0,ml.A)(hl,[["render",d],["__scopeId","data-v-29f3391d"]]);var fl=yl;(0,o.Ef)(fl).mount("#app")},73519:function(){}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.m=e,function(){var e=[];n.O=function(t,r,i,a){if(!r){var s=1/0;for(u=0;u<e.length;u++){r=e[u][0],i=e[u][1],a=e[u][2];for(var o=!0,c=0;c<r.length;c++)(!1&a||s>=a)&&Object.keys(n.O).every((function(e){return n.O[e](r[c])}))?r.splice(c--,1):(o=!1,a<s&&(s=a));if(o){e.splice(u--,1);var l=i();void 0!==l&&(t=l)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[r,i,a]}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var i,a,s=r[0],o=r[1],c=r[2],l=0;if(s.some((function(t){return 0!==e[t]}))){for(i in o)n.o(o,i)&&(n.m[i]=o[i]);if(c)var u=c(n)}for(t&&t(r);l<s.length;l++)a=s[l],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(u)},r=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[504],(function(){return n(70255)}));r=n.O(r)})();
//# sourceMappingURL=app.c825a31c.js.map