(function(){var e={3166:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{_getPollInterval:function(){return Nr},awaitHeight:function(){return Ir},getAccount:function(){return wr},getBalance:function(){return zr},getContract:function(){return Or},getContractByteCode:function(){return Er},getCurrentGeneration:function(){return Mr},getGeneration:function(){return Tr},getHeight:function(){return Cr},getKeyBlock:function(){return qr},getMicroBlockHeader:function(){return Ar},getMicroBlockTransactions:function(){return Sr},getName:function(){return Br},poll:function(){return xr},resolveName:function(){return Rr},txDryRun:function(){return kr},waitForTxConfirm:function(){return br}});var i={};n.r(i),n.d(i,{Account:function(){return xa},AuctionEntry:function(){return _a},ByteCode:function(){return Oa},Channel:function(){return ka},ChannelCloseMutualTx:function(){return ys},ChannelCloseSoloTx:function(){return gs},ChannelCreateTx:function(){return fs},ChannelDepositTx:function(){return Ns},ChannelForceProgressTx:function(){return vs},ChannelSetDelegatesTx:function(){return Cs},ChannelSettleTx:function(){return xs},ChannelSlashTx:function(){return Is},ChannelSnapshotSoloTx:function(){return bs},ChannelWithdrawTx:function(){return ws},CheckTxInPoolResponse:function(){return zs},CommitmentId:function(){return Ms},ContractCallObject:function(){return Wa},ContractCallTx:function(){return Ts},ContractCreateTx:function(){return Ss},ContractObject:function(){return Ea},CountResponse:function(){return es},CreateContractUnsignedTx:function(){return no},Currency:function(){return Ra},Delegates:function(){return Ta},DryRunAccount:function(){return Fa},DryRunCallContext:function(){return Ha},DryRunCallReq:function(){return ja},DryRunInput:function(){return Da},DryRunInputItem:function(){return Va},DryRunResult:function(){return Ua},DryRunResults:function(){return Ga},EncodedTx:function(){return ms},ErrorModel:function(){return Ia},Event:function(){return La},GAAttachTx:function(){return As},GAMetaTx:function(){return Ps},GAObject:function(){return hs},GasPricesItem:function(){return ss},Generation:function(){return Ka},HashResponse:function(){return Ya},Header:function(){return Ja},HeightResponse:function(){return Xa},Image:function(){return $a},KeyBlock:function(){return Qa},MicroBlockHeader:function(){return Za},NameClaimTx:function(){return _s},NameEntry:function(){return ts},NameHash:function(){return ks},NamePointer:function(){return Pa},NamePreclaimTx:function(){return Es},NameRevokeTx:function(){return Os},NameTransferTx:function(){return Bs},NameUpdateTx:function(){return Rs},NextNonceResponse:function(){return ba},OffChainCallContract:function(){return Ys},OffChainDeposit:function(){return Xs},OffChainNewContract:function(){return Zs},OffChainTransfer:function(){return eo},OffChainUpdate:function(){return Sa},OffChainWithdrawal:function(){return to},OracleExtendTx:function(){return Ds},OracleQueries:function(){return rs},OracleQuery:function(){return is},OracleQueryTx:function(){return Fs},OracleRegisterTx:function(){return Vs},OracleRespondTx:function(){return js},PayingForTx:function(){return Hs},PeerConnections:function(){return ls},PeerCount:function(){return Gs},PeerCountAvailable:function(){return Ws},PeerCountConnected:function(){return Us},PeerDetails:function(){return $s},PeerPubKey:function(){return as},Peers:function(){return Ls},PoI:function(){return Ba},PostTxResponse:function(){return ds},Protocol:function(){return cs},PubKey:function(){return Ks},RegisteredOracle:function(){return ns},RelativeTTL:function(){return qa},SignedTx:function(){return za},SignedTxs:function(){return wa},SpendTx:function(){return Qs},Status:function(){return os},SyncStatus:function(){return us},TokenSupply:function(){return Js},Ttl:function(){return Aa},Tx:function(){return Ma},TxInfoObject:function(){return ps},UnsignedTx:function(){return qs},discriminators:function(){return ro}});var a={};n.r(a),n.d(a,{payForTransaction:function(){return Tc},spend:function(){return zc},transferFunds:function(){return Mc}});var s={};n.r(s),n.d(s,{buildAuthTxHash:function(){return Wc},buildAuthTxHashByGaMetaTx:function(){return Lc},createGeneralizedAccount:function(){return Uc}});var o={};n.r(o),n.d(o,{ApiVersion:function(){return Xl},ByteCodeInput:function(){return Kl},BytecodeCallResultInput:function(){return Fl},Calldata:function(){return Hl},CompileOpts:function(){return Ol},CompileResult:function(){return $l},CompilerError:function(){return Bl},CompilerVersion:function(){return Yl},Contract:function(){return El},DecodeCalldataBytecode:function(){return Gl},DecodeCalldataSource:function(){return Ll},DecodedCalldata:function(){return Ul},DecodedCallresult:function(){return Vl},ErrorModel:function(){return Wl},ErrorPos:function(){return Rl},FateAssembler:function(){return Ql},FunctionCallInput:function(){return jl},SophiaBinaryData:function(){return Zl},SophiaCallResultInput:function(){return Dl},SophiaJsonData:function(){return eu},ValidateByteCodeInput:function(){return Jl}});var c=n(53751),l=n(20641),u=n(90033);const m=e=>((0,l.Qi)("data-v-70aa7756"),e=e(),(0,l.jt)(),e),d=m((()=>(0,l.Lk)("input",{id:"toggle-aepp",type:"checkbox"},null,-1))),p=m((()=>(0,l.Lk)("h2",null,[(0,l.eW)(" Wallet Iframe "),(0,l.Lk)("label",{for:"toggle-aepp"})],-1))),h={class:"group"},y=m((()=>(0,l.Lk)("div",null,"Aepp URL",-1))),g=m((()=>(0,l.Lk)("div",null,"Address",-1))),f=m((()=>(0,l.Lk)("div",null,"Node",-1))),N=m((()=>(0,l.Lk)("div",null,"Balance",-1))),v=m((()=>(0,l.Lk)("div",null,"RPC client",-1))),C=["src"];function x(e,t,n,r,i,a){const s=(0,l.g2)("Value");return(0,l.uX)(),(0,l.CE)(l.FK,null,[d,p,(0,l.Lk)("div",h,[(0,l.Lk)("div",null,[y,(0,l.Lk)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,c.D$)(((...e)=>a.navigate&&a.navigate(...e)),["prevent"]))},[(0,l.bo)((0,l.Lk)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[c.Jo,e.nextAeppUrl]])],32)]),(0,l.Lk)("div",null,[g,(0,l.Lk)("div",null,(0,u.v_)(e.address),1)]),(0,l.Lk)("div",null,[f,(0,l.Lk)("div",null,(0,u.v_)(e.nodeName),1)]),(0,l.Lk)("div",null,[N,(0,l.bF)(s,{value:e.balancePromise},null,8,["value"])]),(0,l.Lk)("div",null,[v,(0,l.Lk)("div",null,"status: "+(0,u.v_)(e.clientStatus??"no client")+", id: "+(0,u.v_)(e.clientId??"not defined"),1)]),(0,l.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>a.switchAccount&&a.switchAccount(...e))},"Switch Account"),(0,l.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>a.switchNode&&a.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,l.uX)(),(0,l.CE)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>a.disconnect&&a.disconnect(...e))}," Disconnect ")):((0,l.uX)(),(0,l.CE)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??a.shareWalletInfo)())},(0,u.v_)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,l.Q3)("",!0):((0,l.uX)(),(0,l.CE)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,C))],64)}class I extends Error{constructor(e){super(e),this.name="BaseError"}}class b extends I{constructor(e){super(e),this.name="AccountError"}}class w extends I{constructor(e){super(e),this.name="AensError"}}class z extends I{constructor(e){super(e),this.name="AeppError"}}class M extends I{constructor(e){super(e),this.name="CompilerError"}}class T extends I{constructor(e){super(e),this.name="ContractError"}}class S extends I{constructor(e){super(e),this.name="CryptographyError"}}class q extends I{constructor(e){super(e),this.name="NodeError"}}class A extends I{constructor(e){super(e),this.name="TransactionError"}}class P extends I{constructor(e){super(e),this.name="WalletError"}}class _ extends I{constructor(e,t,n){super(`${e} should be ${t}, got ${n} instead`),this.name="ArgumentError"}}class k extends S{constructor(e){super(e),this.name="IllegalArgumentError"}}class E extends I{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class O extends I{constructor(e,t){super([`Giving up after ${e} blocks mined`,`transaction hash: ${t}`].join(", ")),this.name="TxTimedOutError"}}class B extends I{constructor(e){super(e),this.name="TypeError"}}class R extends I{constructor(e){super(e),this.name="NotImplementedError"}}class $ extends I{constructor(e,t,n,r){super(`Unsupported ${e} version ${t}. Supported: >= ${n} < ${r}`),this.name="UnsupportedVersionError"}}class D extends I{constructor(e){super(e),this.name="InternalError"}}class F extends D{constructor(e="Expected to not happen, required for TS"){super(e),this.name="UnexpectedTsError"}}class V extends b{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class j extends w{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class H extends w{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class G extends w{constructor(e){super(e),this.name="InvalidAensNameError"}}class U extends z{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class W extends z{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class L extends z{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class K extends T{constructor(e){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`),this.name="BytecodeMismatchError"}}class Q extends T{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class J extends T{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class Y extends T{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class X extends T{constructor(e){super(e),this.name="MissingContractAddressError"}}class Z extends T{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class ee extends T{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class te extends T{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class ne extends T{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class re extends T{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class ie extends T{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class ae extends T{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((([e])=>`"${e}"`)).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class se extends S{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class oe extends S{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class ce extends S{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class le extends S{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class ue extends S{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class me extends q{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class de extends q{constructor(e){super(e),this.name="NodeNotFoundError"}}class pe extends A{constructor(e){super(e),this.name="DecodeError"}}class he extends A{constructor(e){super(e),this.name="PayloadLengthError"}}class ye extends A{constructor(e){super(e),this.name="DryRunError"}}class ge extends A{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class fe extends A{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class Ne extends A{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class ve extends A{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class Ce extends P{constructor(e){super(e),this.name="AlreadyConnectedError"}}class xe extends P{constructor(e){super(e),this.name="NoWalletConnectedError"}}class Ie extends P{constructor(e){super(e),this.name="RpcConnectionError"}}class be{constructor({debug:e=!1}){this.debug=e}connect(e,t){if(this.isConnected())throw new Ce("You already connected")}disconnect(){if(!this.isConnected())throw new xe("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}n(43838);var we=n(1814);let ze=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),Me=function(e){return e["window"]="window",e["extension"]="extension",e}({}),Te=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),Se=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["unsafeSign"]="data.unsafeSign",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),qe=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const Ae=[];class Pe extends I{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Ae.find((t=>t.code===e.code));if(null==t)throw new D(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class _e extends Pe{constructor(e){super("Invalid transaction"),(0,we.A)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,we.A)(_e,"code",2),Ae.push(_e);class ke extends Pe{constructor(e){super("Operation rejected by user"),(0,we.A)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,we.A)(ke,"code",4),Ae.push(ke);class Ee extends Pe{constructor(){super("Unsupported Protocol Version"),(0,we.A)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,we.A)(Ee,"code",5),Ae.push(Ee);class Oe extends Pe{constructor(e){super("Wallet deny your connection request"),(0,we.A)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,we.A)(Oe,"code",9),Ae.push(Oe);class Be extends Pe{constructor(){super("You are not connected to the wallet"),(0,we.A)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,we.A)(Be,"code",10),Ae.push(Be);class Re extends Pe{constructor(e){super(`You are not subscribed for account ${e}`),(0,we.A)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,we.A)(Re,"code",11),Ae.push(Re);class $e extends Pe{constructor(){super("The peer failed to execute your request due to unknown error"),(0,we.A)(this,"code",12),this.name="RpcInternalError"}}(0,we.A)($e,"code",12),Ae.push($e);class De extends Pe{constructor(){super("Method not found"),(0,we.A)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function Fe(e,t,n){Ve(e,t),t.set(e,n)}function Ve(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function je(e,t){return e.get(Ge(e,t))}function He(e,t,n){return e.set(Ge(e,t),n),n}function Ge(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}(0,we.A)(De,"code",-32601),Ae.push(De);var Ue=new WeakMap,We=new WeakMap,Le=new WeakMap;class Ke extends be{constructor({target:e,self:t=window,origin:n,sendDirection:r,receiveDirection:i=ze.to_aepp,...a}={}){super(a),Fe(this,Ue,void 0),Fe(this,We,void 0),Fe(this,Le,void 0),He(We,this,e),He(Le,this,t),this.origin=n,this.sendDirection=r,this.receiveDirection=i}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var n;if("object"!==typeof t.data||"2.0"!==(null!==(n=t.data.jsonrpc)&&void 0!==n?n:t.data.data?.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=je(We,this)&&je(We,this)!==t.source)return;this.receiveMessage(t);let{data:r}=t;if(null!=r.type){if(t.data.type!==this.receiveDirection)return;r=r.data}e(r,t.origin,t.source)},je(Le,this).addEventListener("message",this.listener),He(Ue,this,t)}disconnect(){if(super.disconnect(),null==this.listener||null==je(Ue,this))throw new D("Expected to not happen, required for TS");je(Le,this).removeEventListener("message",this.listener),delete this.listener,je(Ue,this).call(this),He(Ue,this,void 0)}sendMessage(e){var t;if(null==je(We,this))throw new Ie("Can't send messages without target");const n=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(n),je(We,this).postMessage(n,null!==(t=this.origin)&&void 0!==t?t:"*")}}n(9225),n(14632),n(8396),n(69431),n(704),n(16925);var Qe=n(81429),Je=n(50925);class Ye{}var Xe=n(12330),Ze=n(25363),et=n(10599);const{Buffer:tt}=Qe,nt=async e=>new Promise((t=>{setTimeout(t,e)})),rt=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),it=(()=>{try{return tt.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),at=it?(e,t)=>tt.concat(e.map((e=>tt.from(e))),t):tt.concat;function st(e,t){return e in t}function ot(e,t){return t.includes(e)}function ct(e){return e instanceof et.pj&&404===e.statusCode&&e.message.includes("Account not found")}function lt(e){if(!(e instanceof Error))throw e}let ut=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["AccountSecretKey"]="sk",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});var mt=n(54858),dt=n(39685);const{Buffer:pt}=Qe;function ht(e){return(new dt).update(e).digest()}const yt=[ut.ContractBytearray,ut.ContractStoreKey,ut.ContractStoreValue,ut.Transaction,ut.OracleQuery,ut.OracleResponse,ut.State,ut.Poi,ut.StateTrees,ut.CallStateTree,ut.Bytearray],gt=[ut.KeyBlockHash,ut.MicroBlockHash,ut.BlockPofHash,ut.BlockTxHash,ut.BlockStateHash,ut.Channel,ut.ContractAddress,ut.TxHash,ut.OracleAddress,ut.OracleQueryId,ut.AccountAddress,ut.AccountSecretKey,ut.Signature,ut.Commitment,ut.PeerPubkey,ut.Name],ft={[ut.KeyBlockHash]:32,[ut.MicroBlockHash]:32,[ut.BlockPofHash]:32,[ut.BlockTxHash]:32,[ut.BlockStateHash]:32,[ut.Channel]:32,[ut.ContractAddress]:32,[ut.TxHash]:32,[ut.OracleAddress]:32,[ut.OracleQueryId]:32,[ut.AccountAddress]:32,[ut.AccountSecretKey]:32,[ut.Signature]:64,[ut.Commitment]:32,[ut.PeerPubkey]:32,[ut.State]:32};function Nt(e,t){if(!st(t,ft))return;const n=ft[t];if(null!=n&&e.length!==n)throw new he(`Payload should be ${n} bytes, got ${e.length} instead`)}const vt=e=>ht(ht(e)).slice(0,4),Ct=e=>at([e,vt(e)]);function xt(e){const t=e.slice(0,-4);if(!vt(t).equals(e.slice(-4)))throw new se;return t}const It={encode:e=>Ct(e).toString("base64"),decode:e=>xt(pt.from(e,"base64"))},bt={encode:e=>mt.A.encode(Ct(e)),decode:e=>xt(pt.from(mt.A.decode(e)))},wt=e=>{const t=yt.find((t=>t===e));if(null!=t)return[t,It];const n=gt.find((t=>t===e));if(null!=n)return[n,bt];throw new _("prefix",`one of ${[...gt,...yt].join(", ")}`,e)};function zt(e){const[t,n,r]=e.split("_");if(null==n)throw new pe(`Encoded string missing payload: ${e}`);if(null!=r)throw new pe(`Encoded string have extra parts: ${e}`);const[i,a]=wt(t),s=a.decode(n);return Nt(s,i),s}function Mt(e,t){const[,n]=wt(t);return Nt(e,t),`${t}_${n.encode(e)}`}const{Buffer:Tt}=Qe,{blake2b:St}=Xe,{encode:qt}=Ze;function At(e,...t){0===t.length&&(t=[ut.AccountAddress]);try{zt(e);const n=e.split("_")[0];if(!ot(n,t))throw new _("Encoded string type",t.length>1?`one of ${t.join(", ")}`:t[0],n);return!0}catch(n){return!1}}function Pt(e){return Tt.from(St(e,void 0,32))}function _t(e,t,n){return Je.sign.detached.verify(e,t,zt(n))}const kt=Tt.from("aeternity Signed Message:\n","utf8"),Et=qt(kt.length);function Ot(e){const t=Tt.from(e,"utf8");return Pt(at([Et,kt,qt(t.length),t]))}var Bt=n(67962),Rt=n(45195);const{TypeResolver:$t,ContractByteArrayEncoder:Dt}=Bt;function Ft(e){var t;return Pt(null!==(t=Rt(e))&&void 0!==t?t:"")}function Vt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},n=(new $t).resolveType(t,{}),r=(new Dt).encodeWithType(e,n);return Pt(zt(r))}function jt(e,t,n){return Pt(at([Et,new Uint8Array([0]),Vt(n),Ft(t),Pt(zt(e))]))}var Ht=n(46062);const Gt={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n},Ut=5e4,Wt=1e9,Lt=1e14,Kt=31,Qt=rt({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(([e,t])=>[e,new Ht.A(t).times(Lt)]));let Jt=function(e){return e[e["Ceres"]=6]="Ceres",e}({}),Yt=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),Xt=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),Zt=function(e){return e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelClientReconnectTx"]=575]="ChannelClientReconnectTx",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e}({});const{Buffer:en}=Qe,tn={[Jt.Ceres]:{"contract-create":{vmVersion:[Yt.Fate3],abiVersion:[Xt.Fate]},"contract-call":{vmVersion:[],abiVersion:[Xt.Fate]},"oracle-call":{vmVersion:[],abiVersion:[Xt.NoAbi,Xt.Fate]}}};function nn(e,t){var n;const r=tn[e][t];return{vmVersion:null!==(n=r.vmVersion[0])&&void 0!==n?n:Yt.Fate2,abiVersion:r.abiVersion[0]}}var rn={serialize(e,t,{consensusProtocolVersion:n=Jt.Ceres}){var r;return null!==(r=e)&&void 0!==r||(e=nn(n,"contract-create")),en.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Jt).length&&null!=n.onNode?nn((await n.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,n]=e;return{vmVersion:+t,abiVersion:+n}}};const{Buffer:an}=Qe;var sn={_getProtocolDetails(e,t){const n=Zt.ContractCallTx===t||Zt.GaMetaTx===t?"contract-call":"oracle-call";return nn(e,n).abiVersion},serialize(e,{tag:t},{consensusProtocolVersion:n=Jt.Ceres}){const r=null!==e&&void 0!==e?e:this._getProtocolDetails(n,t);return an.from([r])},async prepare(e,{tag:t},n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Jt).length&&null!=n.onNode?this._getProtocolDetails((await n.onNode.getNodeInfo()).consensusProtocolVersion,t):void 0},deserialize(e){return e[0]}};const{Buffer:on}=Qe;function cn(e,t=!1){if(null==e)return on.from([]);if(Number.isInteger(e)||Ht.A.isBigNumber(e)||t){if(Ht.A.isBigNumber(e)||(e=new Ht.A(e)),!e.isInteger())throw new B(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),on.from(t,"hex")}if("string"===typeof e)return on.from(e);throw new E}const{Buffer:ln}=Qe,un=[ut.AccountAddress,ut.Name,ut.Commitment,ut.OracleAddress,ut.ContractAddress,ut.Channel];function mn(...e){return{serialize(t){const n=t.slice(0,2);if(!ot(n,un))throw new Ne(n);if(!ot(n,e))throw new _("Address encoding",e.join(", "),n);const r=un.indexOf(n)+1;return ln.from([...cn(r),...zt(t)])},deserialize(t){const n=ln.from(t).readUIntBE(0,1),r=un[n-1];if(null==r)throw new ge(n);if(!ot(r,e))throw new _("Address encoding",e.join(", "),r);return Mt(t.subarray(1),r)}}}function dn(e){return{serialize(t,n){return t.map((t=>e.serialize(t,n)))},deserialize(t,n){return t.map((t=>e.deserialize(t,n)))}}}n(21215),n(36538),n(69565);const{Buffer:pn}=Qe;function hn(e,t){const n=pn.from([...zt(e),...cn(t)]),r=Pt(n);return Mt(r,ut.ContractAddress)}const yn=".chain";function gn(e){const[t,n,...r]=e.split(".");if(0!==r.length)throw new _("aens name","including only one dot",e);if(n!==yn.slice(1))throw new _("aens name",`suffixed with ${yn}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new _("aens name","not containing emoji",e);if("-"===t[2]&&"-"===t[3])throw new _("aens name",'without "-" char in both the third and fourth positions',e);if("-"===t[0])throw new _("aens name",'starting with no "-" char',e);if("-"===t.at(-1))throw new _("aens name",'ending with no "-" char',e);let i;try{const r=new URL(`http://${t}.${n}`);if(r.username+r.password+r.port+r.search+r.hash!==""||"/"!==r.pathname)throw new _("aens name","valid",e);i=r.host}catch(a){if(a instanceof TypeError&&a.message.includes("Invalid URL"))throw new _("aens name","valid",e);throw a}if(!/^[a-z0-9.-]+$/i.test(i))throw new _("aens name","without illegal chars",e);if(i.length>63+yn.length)throw new _("aens name","not too long",e);return i}function fn(e){return Mt(Pt(gn(e)),ut.Name)}function Nn(e=pn.from([])){return new Ht.A(pn.from(e).toString("hex"),16).toString(10)}function vn(e){gn(e)}function Cn(e){try{return vn(e),!0}catch(t){return!1}}ut.AccountAddress,ut.OracleAddress,ut.ContractAddress,ut.Channel;function xn(e){const t=gn(e).length-yn.length;return Qt[Math.min(t,Kt)]}var In={serialize(e){if(Number(e)<0)throw new _("value","greater or equal to 0",e);return cn(e,!0)},deserialize(e){return Nn(e)}};const bn=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||Ht.A.isBigNumber(e));let wn=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const zn={[wn.AE]:0,[wn.MILI_AE]:-3,[wn.MICRO_AE]:-6,[wn.NANO_AE]:-9,[wn.PICO_AE]:-12,[wn.FEMTO_AE]:-15,[wn.AETTOS]:-18},Mn=(e,{denomination:t=wn.AETTOS,targetDenomination:n=wn.AETTOS})=>{if(!bn(e))throw new _("value","a number",e);return new Ht.A("bigint"===typeof e?e.toString():e).shiftedBy(zn[t]-zn[n]).toFixed()};var Tn={...In,serializeAettos(e,t,n){return null!==e&&void 0!==e?e:"0"},serialize(e,t,{denomination:n=wn.AETTOS,...r}){return In.serialize(this.serializeAettos(null!=e?Mn(e,{denomination:n}):e,t,r))}};const{Buffer:Sn}=Qe;function qn(e,t){return{serialize(e){if(null==e){if(!0===t)return Sn.from([]);throw new _("Encoded data","provided",e)}return zt(e)},deserialize(t){return Mt(t,e)}}}const{Buffer:An}=Qe;function Pn(e){return{serialize(t,{packEntry:n}){return ArrayBuffer.isView(t)?An.from(t):"string"===typeof t&&t.startsWith("tx_")?zt(t):zt(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackEntry:n}){return n(Mt(t,ut.Bytearray),e)}}}const{Buffer:_n}=Qe;function kn(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new _("value","to be a number",e);if(e>255)throw new _("value","to be less than 256",e);if(!ot(e,t))throw new _("value","to be a value of Enum",e);return _n.from([e])},deserialize(e){if(1!==e.length)throw new _("buffer","to have single element",e.length);const n=e[0];if(!ot(n,t))throw new _("value","to be a value of Enum",n);return n}}}const En=new WeakMap;async function On(e){const t=En.get(e);if(null!=t&&t.time>Date.now()-2e4)return t.gasPrice;const{minGasPrice:n,utilization:r}=(await e.getRecentGasPrices())[0];let i=r<70?0n:BigInt(new Ht.A(n.toString()).times(1.01).integerValue().toFixed());const a=100000n*BigInt(Wt);return i>a&&(console.warn([`Estimated gas price ${i} exceeds the maximum safe value for unknown reason.`,`It will be limited to ${a}.`,"To overcome this restriction provide `gasPrice`/`fee` in options."].join(" ")),i=a),En.set(e,{gasPrice:i,time:Date.now()}),i}var Bn={...Tn,async prepare(e,t,{onNode:n,denomination:r}){if(null!=e)return e;if(null==n)throw new _("onNode","provided (or provide `gasPrice` instead)",n);const i=await On(n);return 0n!==i?Mn(i,{targetDenomination:r}):void 0},serializeAettos(e=Wt.toString()){if(+e<Wt)throw new k(`Gas price ${e.toString()} must be bigger than ${Wt}`);return e}};const Rn=15e3,$n=20,Dn=3,Fn=e=>{var t;const n={[Zt.ChannelForceProgressTx]:30,[Zt.ChannelOffChainTx]:0,[Zt.ContractCreateTx]:5,[Zt.ContractCallTx]:12,[Zt.GaAttachTx]:5,[Zt.GaMetaTx]:5,[Zt.PayingForTx]:.2},r=null!==(t=n[e])&&void 0!==t?t:1;return r*Rn},Vn=(e,t,{relativeTtl:n,innerTxSize:r})=>{switch(e){case Zt.OracleRegisterTx:case Zt.OracleExtendTx:case Zt.OracleQueryTx:case Zt.OracleResponseTx:return t*$n+Math.ceil(32e3*n/Math.floor(525600/Dn));case Zt.GaMetaTx:case Zt.PayingForTx:return(t-r)*$n;default:return t*$n}};function jn(e){const t={[Zt.OracleRegisterTx]:"oracleTtlValue",[Zt.OracleExtendTx]:"oracleTtlValue",[Zt.OracleQueryTx]:"queryTtlValue",[Zt.OracleResponseTx]:"responseTtlValue"},{tag:n}=e;return st(n,t)?e[t[n]]:1}function Hn(e,t,n){const{length:r}=zt(e),i=t(e);let a=0;return i.tag!==Zt.GaMetaTx&&i.tag!==Zt.PayingForTx||(a=zt(n(i.tx.encodedTx)).length),Fn(i.tag)+Vn(i.tag,r,{relativeTtl:jn(i),innerTxSize:a})}function Gn(e,t,n){let r,i=new Ht.A(0);do{r=i,i=new Ht.A(Wt).times(Hn(e(i),t,n))}while(!i.eq(r));return i}const Un="_gas-price:";var Wn={...Tn,async prepare(e,t,{onNode:n}){if(null!=e)return e;if(null==n)throw new _("onNode","provided (or provide `fee` instead)",n);const r=await On(n);return 0n!==r?Un+r:void 0},serializeAettos(e,{rebuildTx:t,unpackTx:n,buildTx:r,_computingMinFee:i},{_canIncreaseFee:a}){if(null!=i)return i.toFixed();const s=Gn((e=>t({_computingMinFee:e})),n,r),o=!0===e?.startsWith(Un)?s.dividedBy(Wt).times(e.replace(Un,"")):new Ht.A(null!==e&&void 0!==e?e:s);if(s.gt(o)){if(!0===a)return s.toFixed();throw new k(`Fee ${o.toString()} must be bigger than ${s}`)}return o.toFixed()},serialize(e,t,n){return"string"===typeof e&&e.startsWith(Un)?In.serialize(this.serializeAettos(e,t,n)):Tn.serialize.call(this,e,t,n)}},Ln={serialize(e){return In.serialize(e)},deserialize(e){return+In.deserialize(e)}};function Kn(e,t,n,r){return e-+Hn(t(e),n,r)}var Qn={...Ln,serialize(e,{tag:t,rebuildTx:n,unpackTx:r,buildTx:i,_computingGasLimit:a},{gasMax:s=6e6}){if(null!=a)return Ln.serialize(a);const o=t===Zt.GaMetaTx?Ut:Kn(s,(e=>n({_computingGasLimit:e,_canIncreaseFee:!0})),r,i),c=null!==e&&void 0!==e?e:o;if(c>o)throw new k(`Gas limit ${c} must be less or equal to ${o}`);return Ln.serialize(c)}};const{Buffer:Jn}=Qe;var Yn={serialize(e){return Jn.from(e)},deserialize(e){return e.toString()}},Xn={serialize(e){return Yn.serialize(e)},deserialize(e){return Yn.deserialize(e)}},Zn={...Tn,serializeAettos(e,t){const n=xn(t.name),r=new Ht.A(null!==e&&void 0!==e?e:n);if(n.gt(r))throw new H(r,n);return r.toFixed()},serialize(e,t,n){return Tn.serialize.call(this,e,t,n)}};const er=mn(ut.Name);var tr={...er,serialize(e){return er.serialize(Cn(e)?fn(e):e)}};function nr(e){return{...Ln,serialize(e,{tag:t}){if(Zt.GaAttachTx===t&&1!==e)throw new _("nonce","equal 1 if GaAttachTx",e);return Ln.serialize(e)},async prepare(t,n,r){if(null!=t)return t;const{onNode:i,strategy:a}=r,s=r[e],o="provided (or provide `nonce` instead)";if(null==i)throw new _("onNode",o,i);if(null==s)throw new _("senderId",o,s);return(await i.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:a}).catch((e=>{if(!ct(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const{Buffer:rr}=Qe,ir=rr.from([1]),ar=rr.from([2]),sr=1024,or=mn(...un);var cr=e=>({serialize(t){if(t.length>32)throw new k(`Expected 32 pointers or less, got ${t.length} instead`);return t.map((({key:t,id:n})=>{let r;if(At(n,...un)&&(r=[...e?[ir]:[],or.serialize(n)]),At(n,ut.Bytearray)){const e=zt(n);if(e.length>sr)throw new _("Raw pointer",`shorter than ${sr+1} bytes`,`${e.length} bytes`);r=[ar,e]}if(null==r)throw new pe(`Unknown AENS pointer value: ${n}`);return[cn(t),rr.concat(r)]}))},deserialize(t){return t.map((([t,n])=>{if(!e)return{key:t.toString(),id:or.deserialize(n)};const r=n.subarray(0,1),i=n.subarray(1);let a;if(r.equals(ir)&&(a=or.deserialize(i)),r.equals(ar)&&(a=Mt(i,ut.Bytearray)),null==a)throw new pe(`Unknown AENS pointer tag: ${r}`);return{key:t.toString(),id:a}}))}}),lr={...Tn,async prepare(e,t,n){if(null!=e)return e;const{onNode:r,oracleId:i}=n,a="provided (or provide `queryFee` instead)";if(null==r)throw new _("onNode",a,r);if(null==i)throw new _("oracleId",a,i);return(await r.getOracleByPubkey(i)).queryFee.toString()}};const{Buffer:ur}=Qe;var mr={serialize(e){return ur.from(e)},deserialize(e){return e}};function dr(e,t){return{serialize(n){if((!0!==t||null!=n)&&n!==e)throw new _("ShortUIntConst",e,n);return Ln.serialize(e)},deserialize(t){const n=Ln.deserialize(t);if(n!==e)throw new _("ShortUIntConst",e,n);return e},constValue:e,constValueOptional:!0===t}}var pr={serialize(e){return cn(e)},deserialize(e){return e.toString()}};const{Buffer:hr}=Qe;function yr(e){return{serialize(t,{buildTx:n}){return ArrayBuffer.isView(t)?hr.from(t):"string"===typeof t&&t.startsWith("tx_")?zt(t):zt(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackTx:n}){return n(Mt(t,ut.Transaction),e)}}}n(10315),n(70757),n(38672),n(17637),n(61990),n(77661),n(22417);function gr(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,(n,...r)=>{const i=e();if(null==i)throw new _("wrapped value","defined",i);if("get"===t&&"_wrappedValue"===r[0])return i;const a=Reflect[t](i,...r);return"function"===typeof a&&"get"===t?a.bind(i):a}]))))}function fr(e){var t;return null!==(t=e._wrappedValue)&&void 0!==t?t:e}async function Nr(e,{_expectedMineRate:t,_microBlockCycle:n,onNode:r}){var i,a;const s=async(t,n,i,a)=>t!==e?null:null!=n?n:"ae_dev"===await(r?.getNetworkId())?i:a,o=null!==(i=null!==(a=await s("key-block",t,0,18e4))&&void 0!==a?a:await s("micro-block",n,0,3e3))&&void 0!==i?i:(()=>{throw new D(`Unknown type: ${e}`)})();return Math.floor(o/3)}const vr=new WeakMap;async function Cr({cached:e=!1,...t}){const n=fr(t.onNode);if(e){const e=vr.get(n);if(null!=e&&e.time>Date.now()-await Nr("key-block",t))return e.height}const{height:r}=await n.getCurrentKeyBlockHeight();return vr.set(n,{height:r,time:Date.now()}),r}async function xr(e,{blocks:t=5,interval:n,...r}){var i;let a;null!==(i=n)&&void 0!==i||(n=await Nr("micro-block",r));do{const i=await r.onNode.getTransactionByHash(e);if(-1!==i.blockHeight)return i;null==a&&(a=0!==i.tx.ttl?-1:await Cr({...r,cached:!0})+t),await nt(n)}while(-1===a||await Cr({...r,cached:!0})<a);throw new O(t,e)}async function Ir(e,{interval:t,...n}){var r;let i;null!==(r=t)&&void 0!==r||(t=Math.min(await Nr("key-block",n),5e3));do{null!=i&&await nt(t),i=await Cr(n)}while(i<e);return i}async function br(e,{confirm:t=3,onNode:n,...r}){const{blockHeight:i}=await n.getTransactionByHash(e),a=await Ir(i+t,{onNode:n,...r}),{blockHeight:s}=await n.getTransactionByHash(e);switch(s){case-1:throw new ve(e);case i:return a;default:return br(e,{onNode:n,confirm:t,...r})}}async function wr(e,{height:t,hash:n,onNode:r}){return null!=t?r.getAccountByPubkeyAndHeight(e,t):null!=n?r.getAccountByPubkeyAndHash(e,n):r.getAccountByPubkey(e)}async function zr(e,{format:t=wn.AETTOS,...n}){const r=e.startsWith("ok_")?Mt(zt(e),ut.AccountAddress):e,{balance:i}=await wr(r,n).catch((e=>{if(!ct(e))throw e;return{balance:0n}}));return Mn(i,{targetDenomination:t})}async function Mr({onNode:e}){return e.getCurrentGeneration()}async function Tr(e,{onNode:t}){return"number"===typeof e?t.getGenerationByHeight(e):t.getGenerationByHash(e)}async function Sr(e,{onNode:t}){return(await t.getMicroBlockTransactionsByHash(e)).transactions}async function qr(e,{onNode:t}){return"number"===typeof e?t.getKeyBlockByHeight(e):t.getKeyBlockByHash(e)}async function Ar(e,{onNode:t}){return t.getMicroBlockHeaderByHash(e)}const Pr=new Map;async function _r(e,t){const n=Pr.get(e);if(Pr.delete(e),null==n)throw new D("Can't get dry-run request");let r;try{const e="number"===typeof n[0].top?(await qr(n[0].top,{onNode:t})).hash:n[0].top;r=await t.protectedDryRunTxs({top:e,txEvents:n[0].txEvents,txs:n.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(n.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:Gt.amount})))})}catch(s){return void n.forEach((({reject:e})=>e(s)))}const{results:i,txEvents:a}=r;i.forEach((({result:e,reason:t,...r},i)=>{const{resolve:s,reject:o,tx:c,accountAddress:l}=n[i];"ok"===e?s({...r,txEvents:a}):o(Object.assign(new ye(t),{tx:c,accountAddress:l}))}))}async function kr(e,t,{top:n,txEvents:r,combine:i,onNode:a}){var s;const o=!0===i?[n,r].join():"immediate",c=null!==(s=Pr.get(o))&&void 0!==s?s:[];return Pr.set(o,c),new Promise(((s,l)=>{var u;c.push({tx:e,accountAddress:t,top:n,txEvents:r,resolve:s,reject:l}),!0===i?null!==(u=c.timeout)&&void 0!==u||(c.timeout=setTimeout((()=>{_r(o,a)}))):_r(o,a)}))}async function Er(e,{onNode:t}){return t.getContractCode(e)}async function Or(e,{onNode:t}){return t.getContract(e)}async function Br(e,{onNode:t}){return t.getNameEntryByName(e)}async function Rr(e,t,{verify:n=!0,resolveByNode:r=!1,onNode:i}){if(Cn(e)){if(n||r){const n=await i.getNameEntryByName(e),a=n.pointers.find((e=>e.key===t));if(null==a)throw new j(e,t);if(r)return a.id}return fn(e)}try{return zt(e),e}catch(a){throw new G(`Invalid name or address: ${e}`)}}var $r={...Ln,serialize(e){return Ln.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,{onNode:n,absoluteTtl:r,_isInternalBuild:i,...a}){if(!0!==r&&0!==e&&(null!=e||!0===i)){var s;if(null==n)throw new _("onNode","provided",n);e=(null!==(s=e)&&void 0!==s?s:3)+await Cr({...a,onNode:n,cached:!0})}return e}};function Dr(e,t){return{...t,serialize(n,r){return t.serialize(null!==n&&void 0!==n?n:e,r)}}}function Fr(e,t){return{...t,serialize(n,r,i){return t.serialize(e(n),r,i)}}}let Vr=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({}),jr=function(e){return e[e["Account"]=10]="Account",e[e["Oracle"]=20]="Oracle",e[e["Name"]=30]="Name",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["Channel"]=58]="Channel",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({}),Hr=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({});const Gr=yr(),Ur=yr(Zt.SignedTx),Wr=Pn(jr.TreesPoi),Lr=Dr(3600,Ln),Kr=Fr((e=>{var t;const n=18e4;if(null!==(t=e)&&void 0!==t||(e=n),e>=1&&e<=n)return e;throw new _("nameTtl",`a number between 1 and ${n} blocks`,e)}),Ln),Qr=[{tag:dr(Zt.SignedTx),version:dr(1,!0),signatures:dn(mr),encodedTx:Gr},{tag:dr(Zt.SpendTx),version:dr(1,!0),senderId:mn(ut.AccountAddress),recipientId:mn(ut.AccountAddress,ut.ContractAddress,ut.Name),amount:Tn,fee:Wn,ttl:$r,nonce:nr("senderId"),payload:qn(ut.Bytearray,!0)},{tag:dr(Zt.NamePreclaimTx),version:dr(1,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),commitmentId:mn(ut.Commitment),fee:Wn,ttl:$r},{tag:dr(Zt.NameClaimTx),version:dr(2,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),name:Xn,nameSalt:Dr(0,In),nameFee:Zn,fee:Wn,ttl:$r},{tag:dr(Zt.NameUpdateTx),version:dr(1,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),nameId:tr,nameTtl:Kr,pointers:cr(!1),clientTtl:Lr,fee:Wn,ttl:$r},{tag:dr(Zt.NameUpdateTx),version:dr(2),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),nameId:tr,nameTtl:Kr,pointers:cr(!0),clientTtl:Lr,fee:Wn,ttl:$r},{tag:dr(Zt.NameTransferTx),version:dr(1,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),nameId:tr,recipientId:mn(ut.AccountAddress,ut.Name),fee:Wn,ttl:$r},{tag:dr(Zt.NameRevokeTx),version:dr(1,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),nameId:tr,fee:Wn,ttl:$r},{tag:dr(Zt.ContractCreateTx),version:dr(1,!0),ownerId:mn(ut.AccountAddress),nonce:nr("ownerId"),code:qn(ut.ContractBytearray),ctVersion:rn,fee:Wn,ttl:$r,deposit:Fr(((e=0)=>{if(0===+e)return e;throw new _("deposit","equal 0 (because is not refundable)",e)}),Tn),amount:Tn,gasLimit:Qn,gasPrice:Bn,callData:qn(ut.ContractBytearray)},{tag:dr(Zt.ContractCallTx),version:dr(1,!0),callerId:mn(ut.AccountAddress),nonce:nr("callerId"),contractId:mn(ut.ContractAddress,ut.Name),abiVersion:sn,fee:Wn,ttl:$r,amount:Tn,gasLimit:Qn,gasPrice:Bn,callData:qn(ut.ContractBytearray)},{tag:dr(Zt.OracleRegisterTx),version:dr(1,!0),accountId:mn(ut.AccountAddress),nonce:nr("accountId"),queryFormat:pr,responseFormat:pr,queryFee:Tn,oracleTtlType:Dr(Hr.delta,kn(Hr)),oracleTtlValue:Dr(500,Ln),fee:Wn,ttl:$r,abiVersion:sn},{tag:dr(Zt.OracleExtendTx),version:dr(1,!0),oracleId:mn(ut.OracleAddress,ut.Name),nonce:nr("oracleId"),oracleTtlType:Dr(Hr.delta,kn(Hr)),oracleTtlValue:Dr(500,Ln),fee:Wn,ttl:$r},{tag:dr(Zt.OracleQueryTx),version:dr(1,!0),senderId:mn(ut.AccountAddress),nonce:nr("senderId"),oracleId:mn(ut.OracleAddress,ut.Name),query:pr,queryFee:lr,queryTtlType:Dr(Hr.delta,kn(Hr)),queryTtlValue:Dr(10,Ln),responseTtlType:Dr(Hr.delta,kn(Hr)),responseTtlValue:Dr(10,Ln),fee:Wn,ttl:$r},{tag:dr(Zt.OracleResponseTx),version:dr(1,!0),oracleId:mn(ut.OracleAddress),nonce:nr("oracleId"),queryId:qn(ut.OracleQueryId),response:pr,responseTtlType:Dr(Hr.delta,kn(Hr)),responseTtlValue:Dr(10,Ln),fee:Wn,ttl:$r},{tag:dr(Zt.ChannelCreateTx),version:dr(2,!0),initiator:mn(ut.AccountAddress),initiatorAmount:In,responder:mn(ut.AccountAddress),responderAmount:In,channelReserve:In,lockPeriod:In,ttl:$r,fee:Wn,initiatorDelegateIds:dn(mn(...un)),responderDelegateIds:dn(mn(...un)),stateHash:qn(ut.State),nonce:nr("initiator")},{tag:dr(Zt.ChannelCloseMutualTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),initiatorAmountFinal:In,responderAmountFinal:In,ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelCloseSoloTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),payload:qn(ut.Transaction),poi:Wr,ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelSlashTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),payload:qn(ut.Transaction),poi:Wr,ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelDepositTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),amount:In,ttl:$r,fee:Wn,stateHash:qn(ut.State),round:Ln,nonce:nr("fromId")},{tag:dr(Zt.ChannelWithdrawTx),version:dr(1,!0),channelId:mn(ut.Channel),toId:mn(ut.AccountAddress),amount:In,ttl:$r,fee:Wn,stateHash:qn(ut.State),round:Ln,nonce:nr("fromId")},{tag:dr(Zt.ChannelSettleTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),initiatorAmountFinal:In,responderAmountFinal:In,ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelForceProgressTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),payload:qn(ut.Transaction),round:Ln,update:qn(ut.ContractBytearray),stateHash:qn(ut.State),offChainTrees:qn(ut.StateTrees),ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelOffChainTx),version:dr(2,!0),channelId:mn(ut.Channel),round:Ln,stateHash:qn(ut.State)},{tag:dr(Zt.ChannelSnapshotSoloTx),version:dr(1,!0),channelId:mn(ut.Channel),fromId:mn(ut.AccountAddress),payload:qn(ut.Transaction),ttl:$r,fee:Wn,nonce:nr("fromId")},{tag:dr(Zt.ChannelClientReconnectTx),version:dr(1,!0),channelId:mn(ut.Channel),round:Ln,role:pr,pubkey:mn(ut.AccountAddress)},{tag:dr(Zt.GaAttachTx),version:dr(1,!0),ownerId:mn(ut.AccountAddress),nonce:nr("ownerId"),code:qn(ut.ContractBytearray),authFun:mr,ctVersion:rn,fee:Wn,ttl:$r,gasLimit:Qn,gasPrice:Bn,callData:qn(ut.ContractBytearray)},{tag:dr(Zt.GaMetaTx),version:dr(2,!0),gaId:mn(ut.AccountAddress),authData:qn(ut.ContractBytearray),abiVersion:sn,fee:Wn,gasLimit:Qn,gasPrice:Bn,tx:Ur},{tag:dr(Zt.PayingForTx),version:dr(1,!0),payerId:mn(ut.AccountAddress),nonce:nr("payerId"),fee:Wn,tx:Ur}];var Jr=n(18212);const{decode:Yr,encode:Xr}=Jr;function Zr(e,t,n,r){const i=e.filter((e=>e.tag.constValue===n));if(0===i.length)throw new fe(`${t[n]} (${n})`,0);if(null==r){const e=i.find((e=>e.version.constValueOptional));if(null==e)throw new D(`Can't find default schema of ${t[n]} (${n})`);r=e.version.constValue}const a=i.find((e=>e.version.constValue===r));if(null==a)throw new fe(`${t[n]} (${n})`,r);return Object.entries(a)}function ei(e,t,n,r,i){const a=Zr(e,t,n.tag,n.version),s=a.map((([e,t])=>t.serialize(n[e],{...n,...r},n)));return Mt(Xr(s),i)}function ti(e,t,n,r,i){const a=Yr(zt(n)),s=+Nn(a[0]),o=+Nn(a[1]),c=Zr(e,t,s,o);if(null!=r&&r!==s)throw new pe(`Expected ${t[r]} tag, got ${t[s]} instead`);if(a.length!==c.length)throw new _("RLP length",c.length,a.length);return Object.fromEntries(c.map((([e,t],n)=>[e,t.deserialize(a[n],i)])))}const{Buffer:ni}=Qe;var ri={serialize(e){return ni.from([e?1:0])},deserialize(e){return 1===e[0]}};function ii(e,t){return{serialize(e,{packEntry:n}){return zt(n({tag:jr.Mtree,values:Object.entries(e).map((([e,r])=>({tag:jr.MtreeValue,key:zt(e),value:zt(n({...r,tag:t}))})))}))},deserialize(n,{unpackEntry:r}){const{values:i}=r(Mt(n,ut.Bytearray),jr.Mtree);return Object.fromEntries(i.filter((({key:t})=>e!==ut.ContractAddress||32===t.length)).map((({key:n,value:i})=>[Mt(n,e),r(Mt(i,ut.Bytearray),t)])))},recursiveType:!0}}const{Buffer:ai}=Qe;var si;function oi(e,t){li(e,t),t.add(e)}function ci(e,t,n){li(e,t),t.set(e,n)}function li(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ui(e,t,n){return e.set(di(e,t),n),n}function mi(e,t){return e.get(di(e,t))}function di(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const{encode:pi}=Jr;var hi=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}(hi||{}),yi=new WeakMap,gi=new WeakMap,fi=new WeakMap,Ni=new WeakMap,vi=new WeakMap,Ci=new WeakMap,xi=new WeakSet;class Ii{get isComplete(){return mi(gi,this)}constructor(e,t,n,r){if(oi(this,xi),ci(this,yi,void 0),ci(this,gi,!0),ci(this,fi,void 0),ci(this,Ni,void 0),ci(this,vi,void 0),ci(this,Ci,void 0),ui(Ni,this,t),ui(vi,this,n),ui(Ci,this,r),ui(yi,this,e[0].toString("hex")),ui(fi,this,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=mi(fi,this)[mi(yi,this)])Object.entries(mi(fi,this)).forEach((([e,t])=>{if(bi.call(Ii,t)!==e)throw new oe;const{type:n}=wi.call(Ii,t);switch(n){case hi.Branch:t.slice(0,16).filter((e=>e.length)).forEach((e=>{null==mi(fi,this)[e.toString("hex")]&&ui(gi,this,!1)}));break;case hi.Extension:if(null==mi(fi,this)[t[1].toString("hex")])throw new ce("Can't find a node by hash in extension node");break;case hi.Leaf:break;default:throw new D(`Unknown MPTree node type: ${n}`)}}));else{if(0!==Object.keys(mi(fi,this)).length)throw new ce("Can't find a node by root hash");ui(gi,this,!1)}}isEqual(e){return mi(yi,this)===mi(yi,e)}serialize(){return[ai.from(mi(yi,this),"hex"),Object.entries(mi(fi,this)).map((([e,t])=>[ai.from(e,"hex"),t]))]}get(e){const t=di(xi,this,zi).call(this,zt(e).toString("hex"));return null==t?t:mi(Ci,this).call(this,Mt(t,ut.Bytearray),mi(vi,this))}toObject(){return Object.fromEntries(di(xi,this,Mi).call(this).filter((([e])=>mi(Ni,this)!==ut.ContractAddress||66!==e.length)).map((([e,t])=>[Mt(ai.from(e,"hex"),mi(Ni,this)),mi(Ci,this).call(this,Mt(t,ut.Bytearray),mi(vi,this))])))}}function bi(e){return ai.from(Pt(pi(e))).toString("hex")}function wi(e){switch(e.length){case 17:return{type:hi.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new ue(t);const n=t<=1?hi.Extension:hi.Leaf,r=[0,2].includes(t)?2:1;return{type:n,...n===hi.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(r)}}default:throw new le(e.length)}}function zi(e){let t=mi(yi,this),n=e;while(1){const e=mi(fi,this)[t];if(null==e){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:r,value:i,path:a}=wi.call(si,e);switch(r){case hi.Branch:if(0===n.length)return i;t=e[+`0x${n[0]}`].toString("hex"),n=n.substring(1);break;case hi.Extension:if(n.substring(0,a?.length)!==a)return;t=e[1].toString("hex"),n=n.substring(a.length);break;case hi.Leaf:if(a!==n)return;return i;default:throw new D(`Unknown MPTree node type: ${r}`)}}}function Mi(){const e=[],t=(n,r)=>{const i=mi(fi,this)[n];if(null==i){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:a,value:s,path:o}=wi.call(si,i);switch(a){case hi.Branch:i.slice(0,16).map(((e,t)=>[e,t])).filter((([e])=>e.length)).forEach((([e,n])=>t(e.toString("hex"),r+n.toString(16)))),null!=s&&e.push([r,s]);break;case hi.Extension:t(i[1].toString("hex"),r+o);break;case hi.Leaf:if(null==s)throw new F;e.push([r+o,s]);break;default:throw new D(`Unknown MPTree node type: ${a}`)}};return t(mi(yi,this),""),e}function Ti(e,t){return{serialize(e){return e.serialize()},deserialize(n,{unpackEntry:r}){return new Ii(n,e,t,r)}}}function Si(e){return{serialize(t,{packEntry:n}){return zt(n({tag:e,payload:t}))},deserialize(t,{unpackEntry:n}){return n(Mt(t,ut.Bytearray),e).payload},recursiveType:!0}}si=Ii;const qi=dn(Pn(jr.MtreeValue)),Ai=ii(ut.ContractAddress,jr.Contract),Pi=ii(ut.AccountAddress,jr.Account),_i=ii(ut.Bytearray,jr.ContractCall),ki=ii(ut.Channel,jr.Channel),Ei=ii(ut.Name,jr.Name),Oi=ii(ut.OracleAddress,jr.Oracle),Bi=[{tag:dr(jr.Account),version:dr(1),nonce:Ln,balance:In},{tag:dr(jr.Account),version:dr(2,!0),flags:In,nonce:Ln,balance:In,gaContract:mn(ut.ContractAddress,ut.Name),gaAuthFun:qn(ut.ContractBytearray)},{tag:dr(jr.Name),version:dr(1,!0),accountId:mn(ut.AccountAddress),nameTtl:Ln,status:mr,clientTtl:Ln,pointers:cr},{tag:dr(jr.Contract),version:dr(1,!0),owner:mn(ut.AccountAddress),ctVersion:rn,code:qn(ut.ContractBytearray),log:qn(ut.ContractBytearray),active:ri,referers:dn(mn(ut.AccountAddress)),deposit:Tn},{tag:dr(jr.ContractCall),version:dr(2,!0),callerId:mn(ut.AccountAddress),callerNonce:Ln,height:Ln,contractId:mn(ut.ContractAddress),gasPrice:In,gasUsed:Ln,returnValue:qn(ut.ContractBytearray),returnType:kn(Vr),log:dn(mr)},{tag:dr(jr.Oracle),version:dr(1,!0),accountId:mn(ut.AccountAddress),queryFormat:pr,responseFormat:pr,queryFee:Tn,oracleTtlValue:Ln,abiVersion:sn},{tag:dr(jr.Channel),version:dr(3,!0),initiator:mn(ut.AccountAddress),responder:mn(ut.AccountAddress),channelAmount:In,initiatorAmount:In,responderAmount:In,channelReserve:In,initiatorDelegateIds:dn(mn(...un)),responderDelegateIds:dn(mn(...un)),stateHash:qn(ut.State),round:Ln,soloRound:In,lockPeriod:In,lockedUntil:In,initiatorAuth:qn(ut.ContractBytearray),responderAuth:qn(ut.ContractBytearray)},{tag:dr(jr.ChannelOffChainUpdateTransfer),version:dr(1,!0),from:mn(ut.AccountAddress),to:mn(ut.AccountAddress),amount:In},{tag:dr(jr.ChannelOffChainUpdateDeposit),version:dr(1,!0),from:mn(ut.AccountAddress),amount:In},{tag:dr(jr.ChannelOffChainUpdateWithdraw),version:dr(1,!0),from:mn(ut.AccountAddress),amount:In},{tag:dr(jr.ChannelOffChainUpdateCreateContract),version:dr(1,!0),owner:mn(ut.AccountAddress),ctVersion:rn,code:qn(ut.ContractBytearray),deposit:In,callData:qn(ut.ContractBytearray)},{tag:dr(jr.ChannelOffChainUpdateCallContract),version:dr(1,!0),caller:mn(ut.AccountAddress),contract:mn(ut.ContractAddress),abiVersion:sn,amount:In,callData:qn(ut.ContractBytearray),callStack:mr,gasPrice:Bn,gasLimit:Qn},{tag:dr(jr.TreesPoi),version:dr(1,!0),accounts:dn(Ti(ut.AccountAddress,jr.Account)),calls:dn(Ti(ut.Bytearray,jr.ContractCall)),channels:dn(Ti(ut.Channel,jr.Channel)),contracts:dn(Ti(ut.ContractAddress,jr.Contract)),ns:dn(Ti(ut.Name,jr.Name)),oracles:dn(Ti(ut.OracleAddress,jr.Oracle))},{tag:dr(jr.StateTrees),version:dr(0,!0),contracts:Si(jr.ContractsMtree),calls:Si(jr.CallsMtree),channels:Si(jr.ChannelsMtree),ns:Si(jr.NameserviceMtree),oracles:Si(jr.OraclesMtree),accounts:Si(jr.AccountsMtree)},{tag:dr(jr.Mtree),version:dr(1,!0),values:qi},{tag:dr(jr.MtreeValue),version:dr(1,!0),key:mr,value:mr},{tag:dr(jr.ContractsMtree),version:dr(1,!0),payload:Ai},{tag:dr(jr.CallsMtree),version:dr(1,!0),payload:_i},{tag:dr(jr.ChannelsMtree),version:dr(1,!0),payload:ki},{tag:dr(jr.NameserviceMtree),version:dr(1,!0),payload:Ei},{tag:dr(jr.OraclesMtree),version:dr(1,!0),payload:Oi},{tag:dr(jr.AccountsMtree),version:dr(1,!0),payload:Pi},{tag:dr(jr.GaMetaTxAuthData),version:dr(1,!0),fee:Tn,gasPrice:Bn,txHash:qn(ut.TxHash)}],Ri=[[jr.CallsMtree,ut.CallStateTree],[jr.StateTrees,ut.StateTrees],[jr.TreesPoi,ut.Poi]];function $i(e){var t;const n=null!==(t=Ri.find((([t])=>t===e.tag))?.[1])&&void 0!==t?t:ut.Bytearray;return ei(Bi,jr,e,{packEntry:$i},n)}function Di(e,t){var n;return null!==(n=t)&&void 0!==n||(t=Ri.find((([,t])=>e.startsWith(t)))?.[0]),ti(Bi,jr,e,t,{unpackEntry:Di})}function Fi(e,t){return Zr(Qr,Zt,e,t)}function Vi(e){return ei(Qr,Zt,e,{unpackTx:Hi,buildTx:Vi,rebuildTx:t=>Vi({...e,...t}),packEntry:$i},ut.Transaction)}async function ji(e){return await Promise.all(Fi(e.tag,e.version).map((async([t,n])=>{null!=n.prepare&&(e[t]=await n.prepare(e[t],e,e))}))),Vi(e)}function Hi(e,t){return ti(Qr,Zt,e,t,{unpackTx:Hi,unpackEntry:Di})}function Gi(e){const t="string"===typeof e&&e.startsWith("tx_")?zt(e):e;return Mt(Pt(t),ut.TxHash)}function Ui(e){let t=Hi(e);if(Zt.SignedTx===t.tag&&(t=t.encodedTx),Zt.ContractCreateTx!==t.tag&&Zt.GaAttachTx!==t.tag)throw new _("contractTx","a contractCreateTx or gaAttach",t.tag);return hn(t.ownerId,t.nonce)}function Wi(e,t,n){Li(e,t),t.set(e,n)}function Li(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ki(e,t){return e.get(Ji(e,t))}function Qi(e,t,n){return e.set(Ji(e,t),n),n}function Ji(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const{Buffer:Yi}=Qe;function Xi(e,t,n){const r=[t];n&&r.push("inner_tx");const i=zt(e);return at([Yi.from(r.join("-")),Pt(i)])}var Zi=new WeakMap;class ea extends Ye{constructor(e){super(),Wi(this,Zi,void 0),this.secretKey=e;const t=Je.sign.keyPair.fromSeed(zt(e));Qi(Zi,this,t.secretKey),this.address=Mt(t.publicKey,ut.AccountAddress)}static generate(){const e=Mt(Je.randomBytes(32),ut.AccountSecretKey);return new ea(e)}async sign(e,t){return Je.sign.detached(Yi.from(e),Ki(Zi,this))}async signTransaction(e,{innerTx:t,networkId:n,...r}={}){if(null==n)throw new _("networkId","provided",n);const i=zt(e),a=Xi(e,n,!0===t),s=[await this.sign(a,r)];return Vi({tag:Zt.SignedTx,encodedTx:i,signatures:s})}async signMessage(e,t){return this.sign(Ot(e),t)}async signTypedData(e,t,{name:n,version:r,networkId:i,contractAddress:a,...s}={}){const o=jt(e,t,{name:n,version:r,networkId:i,contractAddress:a}),c=await this.sign(o,s);return Mt(c,ut.Signature)}async signDelegation(e,{networkId:t}={}){if(null==t)throw new _("networkId","provided",t);const n=at([Et,new Uint8Array([1]),Yi.from(t),zt(e)]),r=await this.sign(n);return Mt(r,ut.Signature)}}let ta=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const na=mn(ut.OracleAddress),ra={serialize(e){return na.serialize(Mt(zt(e),ut.OracleAddress))},deserialize(e){return Mt(zt(na.deserialize(e)),ut.OracleQueryId)}},ia=mn(ut.ContractAddress),aa=[{tag:dr(ta.AensWildcard),version:dr(1,!0),accountAddress:mn(ut.AccountAddress),contractAddress:ia},{tag:dr(ta.AensName),version:dr(1,!0),accountAddress:mn(ut.AccountAddress),nameId:tr,contractAddress:ia},{tag:dr(ta.AensPreclaim),version:dr(1,!0),accountAddress:mn(ut.AccountAddress),contractAddress:ia},{tag:dr(ta.Oracle),version:dr(1,!0),accountAddress:mn(ut.AccountAddress),contractAddress:ia},{tag:dr(ta.OracleResponse),version:dr(1,!0),queryId:ra,contractAddress:ia}];function sa(e,t){return ti(aa,ta,e,t,{})}var oa=n(28784);function ca(e,t){const n=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),r=n(e),i=n(t),a=Math.max(...r,...i)+1,s=e=>e.reverse().reduce(((e,t,n)=>e+t*a**n),0);return s(r)-s(i)}function la(e,t,n){return ca(e,t)>=0&&(null==n||ca(e,n)<0)}const ua="_sdk-big-int-",ma=(...e)=>{const t=(0,oa.rl)(...e),{serialize:n,deserialize:r}=t;return Object.assign(t,{serialize(...[e,t,r,i]){if("BigInt"!==e.type.name||null==t)return n.call(this,e,t,r,i);var a;if("bigint"!==typeof t)throw null!==(a=r)&&void 0!==a||(r=e.serializedName),new Error(`${r} with value ${t} must be of type bigint.`);return t.toString()},deserialize(...[e,t,n,i]){if("BigInt"!==e.type.name||null==t)return"string"===typeof t&&t.startsWith(ua)&&(console.warn(`AeSdk internal error: BigInt value ${t} handled incorrectly`),t=+t.replace(ua,"")),r.call(this,e,t,n,i);if("number"===typeof t&&t>Number.MAX_SAFE_INTEGER)throw new D(`Number ${t} is not accurate to be converted to BigInt`);return BigInt(t.toString().replace(ua,""))}})},da=/("\w+":\s*)(\d{16,})(\s*[,}])/m,pa=/([[,]\s*)(\d{16,})\b/m,ha={name:"parse-big-int",async sendRequest(e,t){const n=await t(e);return null==n.bodyAsText||(n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(da,"g"),(e=>{const t=e.match(da);if(null==t)throw new F;const[,n,r,i]=t;return[n,+r>Number.MAX_SAFE_INTEGER?`"${ua}${r}"`:r,i].join("")})),n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(pa,"g"),(e=>{const t=e.match(pa);if(null==t)throw new F;const[,n,r]=t;return`${n}"${ua}${r}"`}))),n}},ya=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,n){var r;const i=t.headers.get("__queue");t.headers.delete("__queue");const a=async()=>n(t);if(null==i)return a();const s=(null!==(r=e.get(i))&&void 0!==r?r:Promise.resolve()).then(a);return e.set(i,s.catch((()=>{}))),s}},position:"perCall"}},ga=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);e.set(i,a);try{return await a}finally{e.delete(i)}}},position:"perCall"}},fa=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);return e.set(i,a),a}},position:"perCall"}},Na=e=>({policy:{name:"error-formatter",async sendRequest(t,n){try{return await n(t)}catch(r){if(!(r instanceof et.pj)||null==r.request||r.message.startsWith("Error "))throw r;const t=`${new URL(r.request.url).pathname.slice(1)} error`;if(null==r.response?.bodyAsText)throw""===r.message&&(r.message=`${t}: ${r.code}`),r;const n=r.response.parsedBody;r.message=t;const i=null==n?` ${r.response.status} status code`:e(n);throw""!==i&&(r.message+=`:${i}`),r}}},position:"perCall"}),va=(e,t,n,r)=>({policy:{name:"version-check",async sendRequest(i,a){if(i.headers.has("__version-check"))return i.headers.delete("__version-check"),a(i);const s={requestOptions:{customHeaders:{"__version-check":"true"}}},o=[await t(s),n,r];if(!la(...o))throw new $(e,...o);return a(i)}},position:"perCall"}),Ca=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(n,r){var i;const a=null!==(i=n.headers.get("__retry-code"))&&void 0!==i?i:NaN;n.headers.delete("__retry-code");const s=[200,400,403,410,500].filter((e=>e!==+a)),o=new Array(e).fill(0).map(((t,n)=>((n+1)/e)**2)),c=o.reduce(((e,t)=>e+t),0),l=o.map((e=>Math.floor(e/c*t)));let u=new et.pj("Not expected to be thrown");for(let t=0;t<=e;t+=1){if(0!==t){await nt(l[t-1]);const e=new URL(n.url);e.searchParams.set("__sdk-retry",t.toString()),n.url=e.toString()}try{return await r(n)}catch(d){var m;if(!(d instanceof et.pj))throw d;if(s.includes(null!==(m=d.response?.status)&&void 0!==m?m:0))throw d;u=d}}throw u}},position:"perCall"}),xa={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{constraints:{InclusiveMinimum:0},serializedName:"balance",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},Ia={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}},errorCode:{serializedName:"error_code",type:{name:"String"}}}}},ba={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"next_nonce",required:!0,type:{name:"Number"}}}}},wa={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},za={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:-1},serializedName:"block_height",required:!0,type:{name:"Number"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},encodedTx:{serializedName:"encoded_tx",type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ma={type:{name:"Composite",className:"Tx",modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",type:{name:"BigInt"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",type:{name:"Number"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",type:{name:"Number"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",type:{name:"BigInt"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",type:{name:"Number"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",type:{name:"Number"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",type:{name:"BigInt"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},Ta={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Sa={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},qa={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},Aa={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},Pa={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},encodedKey:{serializedName:"encoded_key",type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},_a={type:{name:"Composite",className:"AuctionEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},startedAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"started_at",type:{name:"Number"}},endsAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ends_at",required:!0,type:{name:"Number"}},highestBidder:{serializedName:"highest_bidder",required:!0,type:{name:"String"}},highestBid:{constraints:{InclusiveMinimum:0},serializedName:"highest_bid",required:!0,type:{name:"Number"}}}}},ka={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{constraints:{InclusiveMinimum:0},serializedName:"channel_amount",required:!0,type:{name:"BigInt"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},soloRound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solo_round",required:!0,type:{name:"Number"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},lockedUntil:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"locked_until",required:!0,type:{name:"Number"}}}}},Ea={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}}}}},Oa={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ba={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ra={type:{name:"Composite",className:"Currency",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},symbol:{serializedName:"symbol",required:!0,type:{name:"String"}},subunit:{serializedName:"subunit",required:!0,type:{name:"String"}},subunitsPerUnit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"subunits_per_unit",required:!0,type:{name:"Number"}},fiatConverstionUrl:{serializedName:"fiat_converstion_url",type:{name:"String"}},fiatConversionUrl:{serializedName:"fiat_conversion_url",type:{name:"String"}},logo:{serializedName:"logo",type:{name:"Composite",className:"Image"}},primaryColour:{serializedName:"primary_colour",required:!0,type:{name:"String"}},secondaryColour:{serializedName:"secondary_colour",required:!0,type:{name:"String"}},networkName:{serializedName:"network_name",required:!0,type:{name:"String"}}}}},$a={type:{name:"Composite",className:"Image",modelProperties:{type:{serializedName:"type",type:{name:"String"}},data:{serializedName:"data",type:{name:"String"}}}}},Da={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},Fa={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Va={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},ja={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},gas:{constraints:{InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},Ha={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},Ga={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Ua={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},Wa={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"caller_nonce",required:!0,type:{name:"Number"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},La={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{constraints:{InclusiveMinimum:0},type:{name:"BigInt"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},Ka={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Qa={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"time",required:!0,type:{name:"Number"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},Ja={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"time",required:!0,type:{name:"Number"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Ya={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},Xa={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}}}},Za={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"time",required:!0,type:{name:"Number"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}}}}},es={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"count",required:!0,type:{name:"Number"}}}}},ts={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},ns={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}}}}},rs={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},is={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"sender_nonce",required:!0,type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}}}}},as={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},ss={type:{name:"Composite",className:"GasPricesItem",modelProperties:{minGasPrice:{constraints:{InclusiveMinimum:0},serializedName:"min_gas_price",required:!0,type:{name:"BigInt"}},utilization:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"utilization",required:!0,type:{name:"Number"}},minutes:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"minutes",required:!0,type:{name:"Number"}}}}},os={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solutions",required:!0,type:{name:"Number"}},difficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"difficulty",required:!0,type:{name:"Number"}},hashrate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"hashrate",required:!0,type:{name:"Number"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},uptime:{serializedName:"uptime",required:!0,type:{name:"String"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"peer_count",required:!0,type:{name:"Number"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"pending_transactions_count",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_block_height",required:!0,type:{name:"Number"}}}}},cs={type:{name:"Composite",className:"Protocol",modelProperties:{version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},effectiveAtHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"effective_at_height",required:!0,type:{name:"Number"}}}}},ls={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"inbound",required:!0,type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"outbound",required:!0,type:{name:"Number"}}}}},us={type:{name:"Composite",className:"SyncStatus",modelProperties:{progress:{serializedName:"progress",required:!0,type:{name:"Number"}},target:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},speed:{serializedName:"speed",required:!0,type:{name:"Number"}},estimate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"estimate",required:!0,type:{name:"Number"}}}}},ms={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},ds={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},ps={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},hs={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},ys={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},gs={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},fs={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},Ns={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},vs={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},Cs={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},xs={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},Is={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},bs={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ws={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},zs={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},Ms={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},Ts={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ss={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},qs={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},As={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},Ps={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},_s={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",required:!0,type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ks={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},Es={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Os={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Bs={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Rs={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},$s={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"port",required:!0,type:{name:"Number"}},firstSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"first_seen",required:!0,type:{name:"Number"}},lastSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"last_seen",required:!0,type:{name:"Number"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_difficulty",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},Ds={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}}}}},Fs={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Vs={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}}}}},js={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Hs={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Gs={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"blocked",required:!0,type:{name:"Number"}}}}},Us={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"inbound",type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"outbound",type:{name:"Number"}}}}},Ws={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"verified",type:{name:"Number"}},unverified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"unverified",type:{name:"Number"}}}}},Ls={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ks={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},Qs={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},Js={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{constraints:{InclusiveMinimum:0},serializedName:"accounts",type:{name:"Number"}},contracts:{constraints:{InclusiveMinimum:0},serializedName:"contracts",type:{name:"Number"}},contractOracles:{constraints:{InclusiveMinimum:0},serializedName:"contract_oracles",type:{name:"Number"}},locked:{constraints:{InclusiveMinimum:0},serializedName:"locked",type:{name:"Number"}},oracles:{constraints:{InclusiveMinimum:0},serializedName:"oracles",type:{name:"Number"}},oracleQueries:{constraints:{InclusiveMinimum:0},serializedName:"oracle_queries",type:{name:"Number"}},pendingRewards:{constraints:{InclusiveMinimum:0},serializedName:"pending_rewards",type:{name:"Number"}},total:{constraints:{InclusiveMinimum:0},serializedName:"total",type:{name:"Number"}}}}},Ys={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Sa.type.polymorphicDiscriminator,modelProperties:{...Sa.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Xs={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:Sa.type.polymorphicDiscriminator,modelProperties:{...Sa.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Zs={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Sa.type.polymorphicDiscriminator,modelProperties:{...Sa.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},eo={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:Sa.type.polymorphicDiscriminator,modelProperties:{...Sa.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},to={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:Sa.type.polymorphicDiscriminator,modelProperties:{...Sa.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},no={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...qs.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let ro={OffChainUpdate:Sa,"OffChainUpdate.OffChainCallContract":Ys,"OffChainUpdate.OffChainDeposit":Xs,"OffChainUpdate.OffChainNewContract":Zs,"OffChainUpdate.OffChainTransfer":eo,"OffChainUpdate.OffChainWithdrawal":to};const io={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},ao={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},so={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},oo={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},co={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},lo={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},uo={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},mo={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},po={parameterPath:"body",mapper:Da},ho={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},yo={parameterPath:"nameHash",mapper:{serializedName:"name_hash",required:!0,type:{name:"String"}}},go={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},fo={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},No={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},vo={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},Co={parameterPath:"body",mapper:ms};class xo extends oa.Nl{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const i={requestContentType:"application/json; charset=utf-8"},a="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${a}`:`${a}`,o={...i,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},bo)}getAccountByPubkeyAndHash(e,t,n){return this.sendOperationRequest({pubkey:e,hash:t,options:n},wo)}getAccountByPubkeyAndHeight(e,t,n){return this.sendOperationRequest({pubkey:e,height:t,options:n},zo)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},Mo)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},To)}getAuctionEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},So)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},qo)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ao)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},Po)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},_o)}getCurrency(e){return this.sendOperationRequest({options:e},ko)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},Eo)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},Oo)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Bo)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Ro)}getTopHeader(e){return this.sendOperationRequest({options:e},$o)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},Do)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},Fo)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},Vo)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},jo)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Ho)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},Go)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Uo)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Wo)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Lo)}getMicroBlockTransactionByHashAndIndex(e,t,n){return this.sendOperationRequest({hash:e,index:t,options:n},Ko)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},Qo)}getNameEntryByNameHash(e,t){return this.sendOperationRequest({nameHash:e,options:t},Jo)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Yo)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Xo)}getOracleQueryByPubkeyAndQueryId(e,t,n){return this.sendOperationRequest({pubkey:e,queryId:t,options:n},Zo)}getPeerPubkey(e){return this.sendOperationRequest({options:e},ec)}getRecentGasPrices(e){return this.sendOperationRequest({options:e},tc)}getStatus(e){return this.sendOperationRequest({options:e},nc)}getChainEnds(e){return this.sendOperationRequest({options:e},rc)}getSyncStatus(e){return this.sendOperationRequest({options:e},ic)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},ac)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},sc)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},oc)}}const Io=ma(i,!1),bo={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:xa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},wo={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:xa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so,oo],headerParameters:[io],serializer:Io},zo={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:xa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0},410:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so,co],headerParameters:[io],serializer:Io},Mo={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:ba},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},queryParameters:[lo],urlParameters:[ao,so],headerParameters:[io],serializer:Io},To={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:wa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},So={path:"/v3/auctions/{name}",httpMethod:"GET",responses:{200:{bodyMapper:_a},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,uo],headerParameters:[io],serializer:Io},qo={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ka},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},Ao={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Ea},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},Po={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:Oa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},_o={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:Ba},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},ko={path:"/v3/currency",httpMethod:"GET",responses:{200:{bodyMapper:Ra}},urlParameters:[ao],headerParameters:[io],serializer:Io},Eo={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:Ga},400:{bodyMapper:Ia,isError:!0},403:{bodyMapper:Ia,isError:!0}},requestBody:po,urlParameters:[ao],headerParameters:[io,mo],mediaType:"json",serializer:Io},Oo={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:Ka},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},Bo={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ka},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},Ro={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Ka},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,co],headerParameters:[io],serializer:Io},$o={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:Ja},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},Do={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:Qa},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},Fo={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Ya},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},Vo={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:Xa},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},jo={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Qa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},Ho={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Qa},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,co],headerParameters:[io],serializer:Io},Go={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:Qa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},Uo={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:Za},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},Wo={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:wa},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},Lo={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:es},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},Ko={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:za},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo,ho],headerParameters:[io],serializer:Io},Qo={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:ts},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,uo],headerParameters:[io],serializer:Io},Jo={path:"/v3/names/hash/{name_hash}",httpMethod:"GET",responses:{200:{bodyMapper:ts},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,yo],headerParameters:[io],serializer:Io},Yo={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ns},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so],headerParameters:[io],serializer:Io},Xo={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:rs},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},queryParameters:[go,fo,No],urlParameters:[ao,so],headerParameters:[io],serializer:Io},Zo={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:is},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,so,vo],headerParameters:[io],serializer:Io},ec={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:as}},urlParameters:[ao],headerParameters:[io],serializer:Io},tc={path:"/v3/recent-gas-prices",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"GasPricesItem"}}}}},400:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},nc={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:os}},urlParameters:[ao],headerParameters:[io],serializer:Io},rc={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},urlParameters:[ao],headerParameters:[io],serializer:Io},ic={path:"/v3/sync-status",httpMethod:"GET",responses:{200:{bodyMapper:us},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao],headerParameters:[io],serializer:Io},ac={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:ds},400:{bodyMapper:Ia,isError:!0}},requestBody:Co,urlParameters:[ao],headerParameters:[io,mo],mediaType:"json",serializer:Io},sc={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:za},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io},oc={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:ps},400:{bodyMapper:Ia,isError:!0},404:{bodyMapper:Ia,isError:!0},410:{bodyMapper:Ia,isError:!0}},urlParameters:[ao,oo],headerParameters:[io],serializer:Io};function cc(e,t,n){lc(e,t),t.set(e,n)}function lc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function uc(e,t,n){return e.set(dc(e,t),n),n}function mc(e,t){return e.get(dc(e,t))}function dc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var pc=new WeakMap;class hc extends xo{constructor(e,{ignoreVersion:t=!1,retryCount:n=3,retryOverallDelay:r=800,...i}={}){const a=async e=>(await this._getCachedStatus(e)).nodeVersion;super(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[va("node",a,"7.1.0","8.0.0")],ya(),ga(),Ca(n,r),Na((e=>[" ",e.reason,null==e.errorCode?"":` (${e.errorCode})`].join("")))],...i}),cc(this,pc,void 0),this.pipeline.addPolicy(ha,{phase:"Deserialize"}),this.pipeline.removePolicy({name:et.OD}),this.pipeline.removePolicy({name:et.PR}),this.pipeline.removePolicy({name:"defaultRetryPolicy"})}async _getCachedStatus(e){return null!=mc(pc,this)?mc(pc,this):this.getStatus(e)}async getStatus(...e){const t=super.getStatus(...e);return t.then((()=>{uc(pc,this,t)}),(()=>{})),t}async getNetworkId(){return(await this._getCachedStatus()).networkId}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:n,topBlockHeight:r}=await this.getStatus(),i=n.filter((({effectiveAtHeight:e})=>r>=e)).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==Jt[i]){const e=i.toString(),t=Object.values(Jt).filter((e=>"number"===typeof e)).map((e=>+e)),n=Math.min(...t).toString(),r=(Math.max(...t)+1).toString();throw new $("consensus protocol",e,n,r)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:i}}}function yc(e){const t=Hi(e);switch(t.tag){case Zt.SignedTx:return yc(Vi(t.encodedTx));case Zt.GaMetaTx:return t.gaId;default:}const n=Fi(t.tag,t.version).find((([e])=>"nonce"===e))?.[1];if(null==n)throw new A(`Transaction doesn't have nonce: ${Zt[t.tag]}`);if(!("senderKey"in n))throw new F;const r=t[n.senderKey];return r.replace(/^ok_/,"ak_")}function gc(e,{innerTx:t,gasUsed:n,queryFee:r,isInitiator:i}={}){const a=Hi(e);if(a.tag===Zt.SignedTx)throw new k("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in a&&"freeloader"!==t&&(s+=BigInt(a.fee)),a.tag===Zt.NameClaimTx&&(s+=BigInt(a.nameFee)),a.tag===Zt.OracleQueryTx&&(s+=BigInt(a.queryFee)),a.tag===Zt.OracleResponseTx&&(s-=BigInt(null!==r&&void 0!==r?r:0)),a.tag===Zt.ChannelSettleTx&&(!0===i&&(s-=BigInt(a.initiatorAmountFinal)),!1===i&&(s-=BigInt(a.responderAmountFinal))),(a.tag===Zt.SpendTx&&a.senderId!==a.recipientId||a.tag===Zt.ContractCreateTx||a.tag===Zt.ContractCallTx||a.tag===Zt.ChannelDepositTx)&&"fee-payer"!==t&&(s+=BigInt(a.amount)),a.tag===Zt.ContractCreateTx&&(s+=BigInt(a.deposit)),a.tag!==Zt.ContractCreateTx&&a.tag!==Zt.ContractCallTx&&a.tag!==Zt.GaAttachTx&&a.tag!==Zt.GaMetaTx||"freeloader"===t||(s+=BigInt(a.gasPrice)*BigInt(null!==n&&void 0!==n?n:a.gasLimit)),a.tag!==Zt.GaMetaTx&&a.tag!==Zt.PayingForTx||(s+=gc(Vi(a.tx.encodedTx),a.tag===Zt.PayingForTx?{innerTx:"fee-payer"}:{})),s}function fc(e,t,n){const r=Hi(e,Zt.SignedTx);if(r.encodedTx.tag===Zt.GaMetaTx)return gc(Vi(r.encodedTx),n);const i=Vi(r.encodedTx),a=yc(i),[s,o]=[!0,!1].map((e=>_t(Xi(i,t,e),r.signatures[0],a)));if(!s&&!o)throw new A("Can't verify signature");return gc(Vi(r.encodedTx),{...s&&{innerTx:"freeloader"},...n})}async function Nc(e,t,{isMined:n,...r}={}){let i=Hi(e);const a=i.tag===Zt.SignedTx,s=a&&!0===n&&Gi(e);if(i.tag===Zt.SignedTx&&(i=i.encodedTx),null==r.gasUsed&&!1!==s&&[Zt.ContractCreateTx,Zt.ContractCallTx,Zt.GaAttachTx,Zt.GaMetaTx].includes(i.tag)){const{callInfo:e,gaInfo:n}=await t.getTransactionInfoByHash(s),i=null!==e&&void 0!==e?e:n;if(null==i)throw new D(`callInfo and gaInfo is not available for transaction ${s}`);r.gasUsed=i.gasUsed}if(null==r.queryFee&&Zt.OracleResponseTx===i.tag&&(r.queryFee=(await t.getOracleByPubkey(i.oracleId)).queryFee.toString()),null==r.isInitiator&&Zt.ChannelSettleTx===i.tag&&!0!==n){const{initiatorId:e}=await t.getChannelByPubkey(i.channelId);r.isInitiator=i.fromId===e}return a?fc(e,await t.getNetworkId(),r):gc(e,r)}const{Buffer:vc}=Qe,Cc=[];async function xc(e,t,n){const r=yc(Vi(e)),[i,{height:a},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(r).catch((e=>{if(!ct(e))throw e;return{id:r,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Cc.map((async r=>r(e,{node:t,account:i,height:a,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:n}))))).flat()}async function Ic(e,t){const n=t.pipeline.clone();n.removePolicy({name:"parse-big-int"});const r=new hc(t.$host,{ignoreVersion:!0,pipeline:n,additionalPolicies:[fa()]});return xc(Hi(e),r,[])}Cc.push(((e,{account:t,nodeNetworkId:n,parentTxTypes:r})=>{if(e.tag!==Zt.SignedTx)return[];const{encodedTx:i,signatures:a}=e;if(null==(null!==i&&void 0!==i?i:a))return[];if(1!==a.length)return[];const s=vc.from([n,...r.includes(Zt.PayingForTx)?["inner_tx"]:[]].join("-")),o=zt(Vi(i)),c=at([s,o]),l=at([s,Pt(o)]);return _t(c,a[0],t.id)||_t(l,a[0],t.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,{node:t,parentTxTypes:n})=>{let r;return"encodedTx"in e&&(r=e.encodedTx),"tx"in e&&(r=e.tx),null==r?[]:xc(r,t,[...n,e.tag])}),((e,{height:t})=>"ttl"in e?0===e.ttl||e.ttl>t?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${t}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]),(async(e,{account:t,parentTxTypes:n,node:r})=>{if(0!==n.length)return[];const i=await Nc(Vi(e),r).catch((()=>0n));return i<=t.balance?[]:[{message:`Account balance ${t.balance} is not enough to execute the transaction that costs ${i}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),(async(e,{node:t})=>{if(e.tag!==Zt.SpendTx||At(e.recipientId,ut.Name))return[];const n=await t.getAccountByPubkey(e.recipientId).catch((e=>{if(!ct(e))throw e;return null}));return null==n||!0===n.payable?[]:[{message:"Recipient account is not payable",key:"RecipientAccountNotPayable",checkedKeys:["recipientId"]}]}),((e,{account:t})=>{let n;return e.tag===Zt.SignedTx&&"generalized"===t.kind&&0!==e.signatures.length&&(n="Generalized account can't be used to generate SignedTx with signatures"),e.tag===Zt.GaMetaTx&&"basic"===t.kind&&(n="Basic account can't be used to generate GaMetaTx"),null==n?[]:[{message:n,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,{consensusProtocolVersion:t})=>{var n,r;const i=Zt.OracleRegisterTx===e.tag,a=Zt.ContractCreateTx===e.tag||Zt.GaAttachTx===e.tag,s=Zt.ContractCallTx===e.tag||Zt.GaMetaTx===e.tag,o=null!==(n=null!==(r=i?"oracle-call":null)&&void 0!==r?r:a?"contract-create":null)&&void 0!==n?n:s?"contract-call":null;if(null==o)return[];const c=tn[t][o];let l;if("abiVersion"in e&&(l={abiVersion:e.abiVersion}),"ctVersion"in e&&(l=e.ctVersion),null==l)throw new F;return!c.abiVersion.includes(l.abiVersion)||a&&!c.vmVersion.includes(l.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(l)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,{node:t})=>{if(Zt.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:n}=await t.getContract(e.contractId);return n?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(n){if(!(n instanceof et.pj)||null==n.response?.bodyAsText)throw n;return[{message:JSON.parse(n.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}));class bc extends A{constructor(e,t,n){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=n}}async function wc(e,{onNode:t,onAccount:n,verify:r=!0,waitMined:i=!0,confirm:a,innerTx:s,...o}){const c=await n.signTransaction(e,{...o,onNode:t,innerTx:s,networkId:await t.getNetworkId()});if(!0===s)return{hash:Gi(c),rawTx:c};if(r){const e=await Ic(c,t);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new bc(t,e,c)}}try{let e;try{e=null!=n?`tx-${n.address}`:null}catch(l){e=null}const{txHash:r}=await t.postTransaction({tx:c},{requestOptions:{customHeaders:{"__retry-code":"400",...null!=e?{__queue:e}:{}}}});if(i){const e=await xr(r,{onNode:t,...o}),n={...e,hash:e.hash,rawTx:c};if(null!=a&&+a>0){const e="boolean"===typeof a?void 0:a;return{...n,confirmationHeight:await br(r,{onNode:t,confirm:e,...o})}}return n}return{hash:r,rawTx:c}}catch(l){throw lt(l),Object.assign(l,{rawTx:c,verifyTx:async()=>Ic(c,t)})}}async function zc(e,t,n){return wc(await ji({_isInternalBuild:!0,...n,tag:Zt.SpendTx,senderId:n.onAccount.address,recipientId:await Rr(t,"account_pubkey",n),amount:e}),n)}async function Mc(e,t,n){if(+e<0||+e>1)throw new _("fraction","a number between 0 and 1",e);const r=await Rr(t,"account_pubkey",n),i=n.onAccount.address,a=new Ht.A(await zr.bind(n.onAccount)(i,n)),s=a.times(e).integerValue(Ht.A.ROUND_HALF_UP),{fee:o}=Hi(await ji({_isInternalBuild:!0,...n,tag:Zt.SpendTx,senderId:i,recipientId:r,amount:s}),Zt.SpendTx),c=s.plus(o).gt(a)?a.minus(o):s;return wc(await ji({_isInternalBuild:!0,...n,tag:Zt.SpendTx,senderId:i,recipientId:r,amount:c}),n)}async function Tc(e,t){return wc(await ji({_isInternalBuild:!0,...t,tag:Zt.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}function Sc(e,t,n){Ac(e,t),t.set(e,n)}function qc(e,t){Ac(e,t),t.add(e)}function Ac(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Pc(e,t,n){return e.set(kc(e,t),n),n}function _c(e,t){return e.get(kc(e,t))}function kc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const{Encoder:Ec}=Bt;var Oc=new WeakSet,Bc=new WeakMap;class Rc{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new k("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new k("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,n){const{callInfo:r}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==r)throw new T(`callInfo is not available for transaction ${e}`);const i=r;return{...kc(Oc,this,$c).call(this,i,t,void 0,n),result:i}}async _estimateGas(e,t,n={}){const{result:r}=await this.$call(e,t,{...n,callStatic:!0});if(null==r)throw new F;const{gasUsed:i}=r;return Math.floor(1.25*i)}async $deploy(e,t){var n;const{callStatic:r,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===r)return this.$call("init",e,{...i,callStatic:r});if(null!=this.$options.address)throw new Q;if(null==i.onAccount)throw new k("Can't deploy without account");const a=i.onAccount.address;if(null==this.$options.bytecode)throw new k("Can't deploy without bytecode");const s=await ji({_isInternalBuild:!0,...i,tag:Zt.ContractCreateTx,gasLimit:null!==(n=i.gasLimit)&&void 0!==n?n:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:a}),{hash:o,...c}=await kc(Oc,this,Dc).call(this,s,"init",{...i,onAccount:i.onAccount});return this.$options.address=Ui(c.rawTx),{...c,...null!=c.result?.log&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:a,transaction:o,address:this.$options.address}}async $call(e,t,n={}){var r;const{callStatic:i,top:a,...s}={...this.$options,...n},o=kc(Oc,this,Fc).call(this,e),{address:c,name:l}=this.$options,u=null!=l?fn(l):c,{onNode:m}=s;if(null==e)throw new ee;if("init"===e&&!0!==i)throw new Y('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&Number(s.amount)>0&&!o.payable)throw new re(s.amount,e);let d;try{if(null==s.onAccount)throw new D("Use fallback account");d=s.onAccount.address}catch(y){const e=!0===i&&(y instanceof B&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof xe||y instanceof D&&"Use fallback account"===y.message);if(!e)throw y;d=Gt.pub}const p=this._calldata.encode(this._name,e,t);if(!0===i){if(null==s.nonce){const e=null!=a&&{["number"===typeof a?"height":"hash"]:a},t=await wr(d,{...e,onNode:m}).catch((e=>{if(!ct(e))throw e;return{kind:"basic",nonce:0}}));s.nonce="generalized"===t.kind?0:t.nonce+1}const t={...s,onNode:m,callData:p};let n;if("init"===e){if(null==this.$options.bytecode)throw new k('Can\'t dry-run "init" without bytecode');n=await ji({...t,tag:Zt.ContractCreateTx,code:this.$options.bytecode,ownerId:d})}else{if(null==u)throw new X("Can't dry-run contract without address");n=await ji({...t,tag:Zt.ContractCallTx,callerId:d,contractId:u})}const{callObj:r,...i}=await kr(n,d,{...s,top:a});if(null==r)throw new D(`callObj is not available for transaction ${n}`);const o=r;return{...i,...kc(Oc,this,$c).call(this,o,e,n,s),tx:Hi(n),result:o,rawTx:n,hash:Gi(n),txData:void 0}}if(null!=a)throw new k("Can't handle `top` option in on-chain contract call");if(null==u)throw new X("Can't call contract without address");const h=await ji({_isInternalBuild:!0,...s,tag:Zt.ContractCallTx,gasLimit:null!==(r=s.gasLimit)&&void 0!==r?r:await this._estimateGas(e,t,s),callerId:d,contractId:u,callData:p});if(null==s.onAccount)throw new k("Can't call contract on chain without account");return kc(Oc,this,Dc).call(this,h,e,{...s,onAccount:s.onAccount})}$decodeEvents(e,{omitUnknown:t,...n}={}){return e.map((e=>{let r;try{r=kc(Oc,this,Vc).call(this,e.address,e.topics[0],n)}catch(o){if(null!==t&&void 0!==t&&t&&o instanceof ie)return null;throw o}const i=this._calldata.decodeEvent(r,e.data,e.topics),[a,s]=Object.entries(i)[0];return{name:a,args:s,contract:{name:r,address:e.address}}})).filter((e=>null!=e))}static async initialize({onCompiler:e,onNode:t,bytecode:n,aci:r,address:i,sourceCodePath:a,sourceCode:s,fileSystem:o,validateBytecode:c,...l}){if(null==r&&null!=e){let t;var u;if(null!=a&&(t=await e.compile(a)),null!=s&&(t=await e.compileBySourceCode(s,o)),null!=t)r=t.aci,null!==(u=n)&&void 0!==u||(n=t.bytecode)}if(null==r)throw new Z;let m;if(null!=i&&(i=await Rr(i,"contract_pubkey",{resolveByNode:!0,onNode:t}),Cn(i)&&(m=i)),null==i&&null==s&&null==a&&null==n)throw new X("Can't create instance by ACI without address");if(null!=i){const e=await Or(i,{onNode:t});if(null==e.active)throw new J(i)}if(!0===c){if(null==i)throw new X("Can't validate bytecode without contract address");const r=(await Er(i,{onNode:t})).bytecode;let c=!1;if(null!=n)c=n===r;else if(null!=s){if(null==e)throw new k("Can't validate bytecode without compiler");c=await e.validateBySourceCode(r,s,o)}else if(null!=a){if(null==e)throw new k("Can't validate bytecode without compiler");c=await e.validate(r,a)}if(!c)throw new K(null!=(null!==s&&void 0!==s?s:a)?"source code":"bytecode")}return new jc({onCompiler:e,onNode:t,sourceCode:s,sourceCodePath:a,bytecode:n,aci:r,address:i,name:m,fileSystem:o,...l})}constructor({aci:e,...t}){qc(this,Oc),Sc(this,Bc,void 0),this._aci=e;const n=e[e.length-1];if(null==n.contract)throw new k(`The last 'aci' item should have 'contract' key, got ${Object.keys(n)} keys instead`);Pc(Bc,this,n.contract),this._name=_c(Bc,this).name,this._calldata=new Ec(e),this.$options=t,Object.assign(this,Object.fromEntries(_c(Bc,this).functions.map((({name:e,arguments:t,stateful:n})=>{const r="init"!==e&&!n;return[e,async(...n)=>{const i=n.length===t.length+1?n.pop():{};if("object"!==typeof i)throw new B(`Options should be an object: ${i}`);return"init"===e?this.$deploy(n,{callStatic:r,...i}):this.$call(e,n,{callStatic:r,...i})}]}))))}}function $c({returnType:e,returnValue:t,log:n},r,i,a){let s;switch(e){case"ok":{const e=kc(Oc,this,Fc).call(this,r);return{decodedResult:this._calldata.decode(this._name,e.name,t),decodedEvents:this.$decodeEvents(n,a)}}case"revert":s=this._calldata.decodeFateString(t);break;case"error":if(s=zt(t).toString(),/Expected \d+ arguments, got \d+/.test(s))throw new T(`ACI doesn't match called contract. Error provided by node: ${s}`);break;default:throw new D(`Unknown return type: ${e}`)}throw new te(s,i)}async function Dc(e,t,n){const r=await wc(e,{...this.$options,...n});return{hash:r.hash,tx:Hi(r.rawTx),txData:r,rawTx:r.rawTx,...null!=r.blockHeight&&await this.$getCallResultByTxHash(r.hash,t,n)}}function Fc(e){const t=_c(Bc,this).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new ne(e)}function Vc(e,t,{contractAddressToName:n}){const r={...this.$options.contractAddressToName,...n};if(null!=r[e])return r[e];const i=(e,t)=>JSON.stringify(e)===JSON.stringify(t),a=this._aci.map((({contract:e})=>e)).filter((e=>e?.event)),s=a.map((e=>[e.name,e.event.variant])).map((([e,t])=>t.map((t=>[e,Object.keys(t)[0],Object.values(t)[0]])))).flat().filter((([,e])=>BigInt(`0x${Pt(e).toString("hex")}`)===t)).filter((([,,e],t,n)=>!n.slice(0,t).some((t=>i(t[2],e)))));switch(s.length){case 0:throw new ie(t.toString(),e);case 1:return s[0][0];default:throw new ae(e,s)}}const jc=Rc;var Hc=jc;const{Buffer:Gc}=Qe;async function Uc(e,t,{onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l,...u}){var m;const d=n.address;if("generalized"===(await wr(d,{onNode:i})).kind)throw new k(`Account ${d} is already GA`);const p=await Hc.initialize({onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l}),h=await ji({_isInternalBuild:!0,...u,tag:Zt.GaAttachTx,onNode:i,code:await p.$compile(),gasLimit:null!==(m=u.gasLimit)&&void 0!==m?m:await p._estimateGas("init",t,u),ownerId:d,callData:p._calldata.encode(p._name,"init",t),authFun:Pt(e)}),{hash:y,rawTx:g}=await wc(h,{onNode:i,onAccount:n,onCompiler:r,...u}),f=Ui(g);return Object.freeze({owner:d,transaction:y,rawTx:g,gaContractId:f})}async function Wc(e,{fee:t,gasPrice:n,onNode:r}){const{nodeNetworkId:i,consensusProtocolVersion:a}=await r.getNodeInfo();let s=Pt(at([Gc.from(i),zt(e)]));if(a===Jt.Ceres){if(null==t)throw new _("fee","provided (in Ceres)",t);if(null==n)throw new _("gasPrice","provided (in Ceres)",n);s=Pt(zt($i({tag:jr.GaMetaTxAuthData,fee:t,gasPrice:n,txHash:Mt(s,ut.TxHash)})))}return s}async function Lc(e,{onNode:t}){const n=Hi(e,Zt.SignedTx);if(n.encodedTx.tag!==Zt.GaMetaTx)throw new _("transaction","to include GaMetaTx",Zt[n.encodedTx.tag]);return Wc(Vi(n.encodedTx.tx.encodedTx),{fee:n.encodedTx.fee,gasPrice:n.encodedTx.gasPrice,onNode:t})}function Kc(e,t,n){Qc(e,t),t.set(e,n)}function Qc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Jc(e,t){return e.get(Xc(e,t))}function Yc(e,t,n){return e.set(Xc(e,t),n),n}function Xc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const Zc={...r,sendTransaction:wc,...a,...s};var el=new WeakMap;class tl{constructor(e={}){(0,we.A)(this,"_options",{}),Kc(this,el,void 0),Object.assign(this._options,e),Yc(el,this,{onAccount:gr((()=>this._options.onAccount)),onNode:gr((()=>this._options.onNode)),onCompiler:gr((()=>this._options.onCompiler))})}getContext(e={}){return{...this._options,...Jc(el,this),...e}}async buildTx(e){return ji({...this.getContext(),...e})}}Object.assign(tl.prototype,rt(Zc,(([e,t])=>[e,function(...e){e.length=t.length;const n=e[e.length-1];return e[e.length-1]=this.getContext(n),t(...e)}])));const nl=tl;var rl=nl;function il(e,t,n){al(e,t),t.set(e,n)}function al(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function sl(e,t){return e.get(cl(e,t))}function ol(e,t,n){return e.set(cl(e,t),n),n}function cl(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var ll=new WeakMap;class ul extends rl{constructor({nodes:e=[],...t}={}){super(t),(0,we.A)(this,"pool",new Map),il(this,ll,void 0),e.forEach((({name:e,instance:t},n)=>this.addNode(e,t,0===n))),ol(ll,this,{onNode:gr((()=>this.api)),onCompiler:gr((()=>this.compilerApi)),onAccount:gr((()=>this._resolveAccount()))})}get compilerApi(){if(null==this._options.onCompiler)throw new M("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t,n=!1){if(this.pool.has(e))throw new me(e);this.pool.set(e,t),(n||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new de(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new de("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async([e,t])=>({name:e,...await t.getNodeInfo()}))))}addresses(){return[]}_resolveAccount(e=this._options.onAccount){if("string"===typeof e)throw new R("Address in AccountResolver");if("object"===typeof e)return e;throw new B(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e,{onAccount:t,...n}={}){return this._resolveAccount(t).sign(e,n)}async signTransaction(e,{onAccount:t,...n}={}){const r=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:r,...n})}async signMessage(e,{onAccount:t,...n}={}){return this._resolveAccount(t).signMessage(e,n)}async signTypedData(e,t,{onAccount:n,...r}={}){return this._resolveAccount(n).signTypedData(e,t,r)}async signDelegation(e,{onAccount:t,...n}={}){var r;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(t).signDelegation(e,n)}getContext(e={}){return{...this._options,...sl(ll,this),...e,...null!=e.onAccount&&{onAccount:this._resolveAccount(e.onAccount)}}}}class ml extends ul{constructor({accounts:e,...t}={}){super(t),(0,we.A)(this,"accounts",{}),e?.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(e=this.selectedAddress){if("string"===typeof e){const t=e;if(zt(t),null==this.accounts[t])throw new V(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e,{select:t}={}){const{address:n}=e;this.accounts[n]=e,!0===t&&this.selectAccount(n)}removeAccount(e){if(null==this.accounts[e])throw new V(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(zt(e),null==this.accounts[e])throw new V(e);this.selectedAddress=e}}function dl(e,t){hl(e,t),t.add(e)}function pl(e,t,n){hl(e,t),t.set(e,n)}function hl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function yl(e,t){return e.get(fl(e,t))}function gl(e,t,n){return e.set(fl(e,t),n),n}function fl(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Nl=new WeakMap,vl=new WeakMap,Cl=new WeakMap,xl=new WeakSet;class Il{constructor(e,t,n){dl(this,xl),pl(this,Nl,new Map),pl(this,vl,0),pl(this,Cl,void 0),this.connection=e,gl(Cl,this,n),e.connect(fl(xl,this,bl).bind(this),t)}async request(e,t){return fl(xl,this,wl).call(this,gl(vl,this,yl(vl,this)+1),e,t),new Promise(((e,t)=>{yl(Nl,this).set(yl(vl,this),{resolve:e,reject:t})}))}notify(e,t){fl(xl,this,wl).call(this,void 0,e,t)}}async function bl(e,t){if("2.0"!==e?.jsonrpc)throw new U(JSON.stringify(e));if("result"in e||"error"in e)return void fl(xl,this,Ml).call(this,e);const n=e;let r,i;try{if(!(n.method in yl(Cl,this)))throw new De;const e=n.method;r=await yl(Cl,this)[e](n.params,t)}catch(a){lt(a),i=a}if(null!=n.id&&fl(xl,this,zl).call(this,n.id,n.method,r,null==i||i instanceof Pe?i:new $e),null!=i&&!(i instanceof Pe))throw i}function wl(e,t,n){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=n?{params:n}:{}})}function zl(e,t,n,r){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=r?{error:r.toJSON()}:{result:n}})}function Ml({id:e,error:t,result:n}){const r=yl(Nl,this).get(e);if(null==r)throw new W(e);null!=t?r.reject(Pe.deserialize(t)):r.resolve(n),yl(Nl,this).delete(e)}const Tl=1;var Sl=n(59643);const ql=Sl({storeAsString:!0}),Al=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return rt(e,(([e,t])=>[e,Al(t)]));if(Array.isArray(e))return e.map((e=>Al(e)));if("string"===typeof e&&new Ht.A(e).toString(10)===e){const t=new Ht.A(e);return t.toJSON=()=>t.toString(10),t}return e};var Pl={stringify:(...e)=>ql.stringify(Al(e[0]),...e.slice(1)),parse:ql.parse};const{Buffer:_l}=Qe;class kl extends ml{constructor({name:e,id:t,type:n,onConnection:r,onSubscription:i,onDisconnect:a,onAskAccounts:s,...o}){super(o),(0,we.A)(this,"_clients",new Map),this.onConnection=r,this.onSubscription=i,this.onDisconnect=a,this.onAskAccounts=s,this.name=e,this.id=t,this._type=n}_getAccountsForClient({addressSubscription:e}){const{current:t,connected:n}=this.getAccounts();return{current:e.has("current")||e.has("connected")?t:{},connected:e.has("connected")?n:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(Se.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(Se.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new L(e);return t}_isRpcClientConnected(e){return qe.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=qe.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=_l.from(Je.randomBytes(8)).toString("base64");let n;const r={id:t,status:qe.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new Il(e,(()=>{this._clients.delete(t),this.onDisconnect(t,n)}),{[Se.closeConnection]:e=>{n=e,this._disconnectRpcClient(t)},[Se.connect]:async({name:e,version:n,icons:i,connectNode:a},s)=>{if(n!==Tl)throw new Ee;return await this.onConnection(t,{name:e,icons:i,connectNode:a},s),r.status=qe.CONNECTED,r.connectNode=a,{...await this.getWalletInfo(),...a&&this._getNode()}},[Se.subscribeAddress]:async({type:e,value:n},i)=>{if(!this._isRpcClientConnected(t))throw new Be;switch(e){case Te.subscribe:await this.onSubscription(t,{type:e,value:n},i),r.addressSubscription.add(n);break;case Te.unsubscribe:r.addressSubscription.delete(n);break;default:throw new D(`Unknown subscription type: ${e}`)}return{subscription:Array.from(r.addressSubscription),address:this._getAccountsForClient(r)}},[Se.address]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new Be;return await this.onAskAccounts(t,e,n),this.addresses()},[Se.sign]:async({tx:e,onAccount:n=this.address,returnSigned:r,innerTx:i},a)=>{if(!this._isRpcClientConnected(t))throw new Be;if(!this.addresses().includes(n))throw new Re(n);const s={onAccount:n,aeppOrigin:a,aeppRpcClientId:t,innerTx:i};if(r||!0===i)return{signedTransaction:await this.signTransaction(e,s)};try{return Pl.parse(Pl.stringify({transactionHash:await this.sendTransaction(e,{...s,verify:!1})}))}catch(o){const t=await Ic(e,this.api);if(t.length>0)throw new _e(t);throw o}},[Se.signMessage]:async({message:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Be;if(!this.addresses().includes(n))throw new Re(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t};return{signature:_l.from(await this.signMessage(e,i)).toString("hex")}},[Se.signTypedData]:async({domain:e,aci:n,data:r,onAccount:i=this.address},a)=>{if(!this._isRpcClientConnected(t))throw new Be;if(!this.addresses().includes(i))throw new Re(i);const s={...e,onAccount:i,aeppOrigin:a,aeppRpcClientId:t};return{signature:await this.signTypedData(r,n,s)}},[Se.unsafeSign]:async({data:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Be;if(!this.addresses().includes(n))throw new Re(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=Mt(await this.sign(zt(e),i),ut.Signature);return{signature:a}},[Se.signDelegation]:async({delegation:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Be;if(!this.addresses().includes(n))throw new Re(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=await this.signDelegation(e,i);return{signature:a}}})};return this._clients.set(t,r),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(Se.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){const{origin:e}=window.location;return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:"file://"===e?"*":e,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}const El={type:{name:"Composite",className:"Contract",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},Ol={type:{name:"Composite",className:"CompileOpts",modelProperties:{fileSystem:{serializedName:"file_system",type:{name:"Dictionary",value:{type:{name:"any"}}}},srcFile:{serializedName:"src_file",type:{name:"String"}}}}},Bl={type:{name:"Composite",className:"CompilerError",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},pos:{serializedName:"pos",type:{name:"Composite",className:"ErrorPos"}},message:{serializedName:"message",required:!0,type:{name:"String"}},context:{serializedName:"context",type:{name:"String"}}}}},Rl={type:{name:"Composite",className:"ErrorPos",modelProperties:{file:{serializedName:"file",type:{name:"String"}},line:{serializedName:"line",required:!0,type:{name:"Number"}},col:{serializedName:"col",required:!0,type:{name:"Number"}}}}},$l={type:{name:"Composite",className:"CompileResult",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},aci:{serializedName:"aci",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}},warnings:{serializedName:"warnings",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}}}}},Dl={type:{name:"Composite",className:"SophiaCallResultInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Fl={type:{name:"Composite",className:"BytecodeCallResultInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Vl={type:{name:"Composite",className:"DecodedCallresult",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},jl={type:{name:"Composite",className:"FunctionCallInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Hl={type:{name:"Composite",className:"Calldata",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}}}}},Gl={type:{name:"Composite",className:"DecodeCalldataBytecode",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ul={type:{name:"Composite",className:"DecodedCalldata",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Wl={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Ll={type:{name:"Composite",className:"DecodeCalldataSource",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}}}}},Kl={type:{name:"Composite",className:"ByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ql={type:{name:"Composite",className:"FateAssembler",modelProperties:{fateAssembler:{serializedName:"fate-assembler",required:!0,type:{name:"String"}}}}},Jl={type:{name:"Composite",className:"ValidateByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},Yl={type:{name:"Composite",className:"CompilerVersion",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}}}}},Xl={type:{name:"Composite",className:"ApiVersion",modelProperties:{apiVersion:{serializedName:"api-version",required:!0,type:{name:"String"}}}}},Zl={type:{name:"Composite",className:"SophiaBinaryData",modelProperties:{sophiaType:{serializedName:"sophia-type",required:!0,type:{name:"String"}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},eu={type:{name:"Composite",className:"SophiaJsonData",modelProperties:{data:{serializedName:"data",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},tu={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},nu={parameterPath:"body",mapper:El},ru={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},iu={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},au={parameterPath:"body",mapper:Dl},su={parameterPath:"body",mapper:Fl},ou={parameterPath:"body",mapper:jl},cu={parameterPath:"body",mapper:Gl},lu={parameterPath:"body",mapper:Ll},uu={parameterPath:"body",mapper:Kl},mu={parameterPath:"body",mapper:Jl};class du extends oa.Nl{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const i={requestContentType:"application/json; charset=utf-8"},a="azsdk-js-compiler/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${a}`:`${a}`,o={...i,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}generateACI(e,t){return this.sendOperationRequest({body:e,options:t},hu)}compileContract(e,t){return this.sendOperationRequest({body:e,options:t},yu)}decodeCallResult(e,t){return this.sendOperationRequest({body:e,options:t},gu)}decodeCallResultBytecode(e,t){return this.sendOperationRequest({body:e,options:t},fu)}encodeCalldata(e,t){return this.sendOperationRequest({body:e,options:t},Nu)}decodeCalldataBytecode(e,t){return this.sendOperationRequest({body:e,options:t},vu)}decodeCalldataSource(e,t){return this.sendOperationRequest({body:e,options:t},Cu)}getFateAssemblerCode(e,t){return this.sendOperationRequest({body:e,options:t},xu)}validateByteCode(e,t){return this.sendOperationRequest({body:e,options:t},Iu)}getCompilerVersion(e,t){return this.sendOperationRequest({body:e,options:t},bu)}version(e){return this.sendOperationRequest({options:e},wu)}apiVersion(e){return this.sendOperationRequest({options:e},zu)}api(e){return this.sendOperationRequest({options:e},Mu)}}const pu=oa.rl(o,!1),hu={path:"/aci",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:nu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},yu={path:"/compile",httpMethod:"POST",responses:{200:{bodyMapper:$l},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:nu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},gu={path:"/decode-call-result",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"any"}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:au,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},fu={path:"/decode-call-result/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Vl},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:su,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},Nu={path:"/encode-calldata",httpMethod:"POST",responses:{200:{bodyMapper:Hl},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:ou,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},vu={path:"/decode-calldata/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Ul},400:{bodyMapper:Wl,isError:!0}},requestBody:cu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},Cu={path:"/decode-calldata/source",httpMethod:"POST",responses:{200:{bodyMapper:Ul},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:lu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},xu={path:"/fate-assembler",httpMethod:"POST",responses:{200:{bodyMapper:Ql},400:{bodyMapper:Wl,isError:!0}},requestBody:uu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},Iu={path:"/validate-byte-code",httpMethod:"POST",responses:{200:{},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:mu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},bu={path:"/compiler-version",httpMethod:"POST",responses:{200:{bodyMapper:Yl},400:{bodyMapper:Wl,isError:!0}},requestBody:uu,urlParameters:[iu],headerParameters:[tu,ru],mediaType:"json",serializer:pu},wu={path:"/version",httpMethod:"GET",responses:{200:{bodyMapper:Yl},500:{bodyMapper:Wl,isError:!0}},urlParameters:[iu],headerParameters:[ru],serializer:pu},zu={path:"/api-version",httpMethod:"GET",responses:{200:{bodyMapper:Xl},500:{bodyMapper:Wl,isError:!0}},urlParameters:[iu],headerParameters:[ru],serializer:pu},Mu={path:"/api",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Dictionary",value:{type:{name:"any"}}}}},400:{bodyMapper:Wl,isError:!0}},urlParameters:[iu],headerParameters:[ru],serializer:pu};class Tu{}class Su extends Tu{constructor(e,{ignoreVersion:t=!1}={}){let n;super();const r=async e=>(null!=n||(n=(await this.api.apiVersion(e)).apiVersion),n);this.api=new du(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[va("compiler",r,"8.0.0","9.0.0")],Na((e=>{let t="";return"reason"in e&&(t+=` ${e.reason}${null!=e.parameter?` in ${e.parameter}`:""}${null!=e.info?` (${JSON.stringify(e.info)})`:""}`),Array.isArray(e)&&(t+=`\n${e.map((e=>`${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${null!=e.context?` (${e.context})`:""}`)).join("\n")}`),t}))]}),this.api.pipeline.removePolicy({name:et.OD}),this.api.pipeline.removePolicy({name:et.PR})}async compileBySourceCode(e,t){try{const n=await this.api.compileContract({code:e,options:{fileSystem:t}}),r=n.warnings.map((({type:e,...t})=>t)),i={...n,warnings:r};return i}catch(n){if(n instanceof et.pj&&400===n.statusCode)throw new M(n.message);throw n}}async compile(e){throw new R("File system access, use CompilerHttpNode instead")}async generateAciBySourceCode(e,t){try{return await this.api.generateACI({code:e,options:{fileSystem:t}})}catch(n){if(n instanceof et.pj&&400===n.statusCode)throw new M(n.message);throw n}}async generateAci(e){throw new R("File system access, use CompilerHttpNode instead")}async validateBySourceCode(e,t,n){try{return await this.api.validateByteCode({bytecode:e,source:t,options:{fileSystem:n}}),!0}catch{return!1}}async validate(e,t){throw new R("File system access, use CompilerHttpNode instead")}async version(){return(await this.api.version()).version}}var qu=n(66176);function Au(e,t,n,r,i,a){return(0,l.uX)(),(0,l.CE)("div",{class:(0,u.C4)({error:e.error})},(0,u.v_)(e.text),3)}var Pu={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},_u=n(66262);const ku=(0,_u.A)(Pu,[["render",Au]]);var Eu=ku,Ou={components:{Value:Eu},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const n=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,r=new Ke({target:n});this.clientId=this.aeSdk.addRpcClient(r),this.aeSdk.shareWalletInfo(this.clientId);const i=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(i);const e=this.aeSdk._getClient(this.clientId);e.status===qe.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===qe.CONNECTED&&e.rpc.notify(Se.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){const e=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e));this.nodeName=e[(e.indexOf(this.nodeName)+1)%e.length],this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(n,r,i)=>{if(!confirm([`Client ${e[n].name} with id ${n} at ${i} want to ${t}`,Eu.methods.valueToString(r)].join("\n")))throw new ke};class n extends ea{async signTransaction(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){if(null!=n){const a={...i,unpackedTx:Hi(e)};a.onCompiler&&(a.onCompiler="<Compiler>"),a.onNode&&(a.onNode="<Node>"),t(`sign transaction ${e}`)(n,a,r)}return super.signTransaction(e,i)}async signMessage(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign message ${e}`)(n,i,r),super.signMessage(e,i)}async signTypedData(e,n,{aeppRpcClientId:r,aeppOrigin:i,...a}){if(null!=r){const s=(new qu.TypeResolver).resolveType(n),o=(new qu.ContractByteArrayEncoder).decodeWithType(e,s),c={...a,aci:n,decodedData:o};t(`sign typed data ${e}`)(r,c,i)}return super.signTypedData(e,n,a)}async sign(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign raw data ${e}`)(n,i,r),super.sign(e,i)}async signDelegation(e,{aeppRpcClientId:n,aeppOrigin:r,...i}){if(null!=n){const a={...i,...sa(e)};t("sign delegation")(n,a,r)}return super.signDelegation(e,i)}static generate(){return new n(super.generate().secretKey)}}this.aeSdk=new kl({id:window.origin,type:Me.window,nodes:[{name:"ae_uat",instance:new hc("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new hc("https://mainnet.aeternity.io")}],accounts:[new n("sk_2CuofqWZHrABCrM7GY95YSQn8PyFvKQadnvFnpwhjUnDCFAWmf"),n.generate()],onCompiler:new Su("https://v8.compiler.aepps.com"),name:"Wallet Iframe",onConnection:(t,n,r)=>{if(!confirm(`Client ${n.name} with id ${t} at ${r} want to connect`))throw new Oe;e[t]=n,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const Bu=(0,_u.A)(Ou,[["render",x],["__scopeId","data-v-70aa7756"]]);var Ru=Bu;(0,c.Ef)(Ru).mount("#app")},73519:function(){}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.m=e,function(){var e=[];n.O=function(t,r,i,a){if(!r){var s=1/0;for(u=0;u<e.length;u++){r=e[u][0],i=e[u][1],a=e[u][2];for(var o=!0,c=0;c<r.length;c++)(!1&a||s>=a)&&Object.keys(n.O).every((function(e){return n.O[e](r[c])}))?r.splice(c--,1):(o=!1,a<s&&(s=a));if(o){e.splice(u--,1);var l=i();void 0!==l&&(t=l)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[r,i,a]}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var i,a,s=r[0],o=r[1],c=r[2],l=0;if(s.some((function(t){return 0!==e[t]}))){for(i in o)n.o(o,i)&&(n.m[i]=o[i]);if(c)var u=c(n)}for(t&&t(r);l<s.length;l++)a=s[l],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(u)},r=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[504],(function(){return n(3166)}));r=n.O(r)})();
//# sourceMappingURL=app.af73a599.js.map