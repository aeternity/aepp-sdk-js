(function(){var e={21523:function(e,t,r){"use strict";var n={};r.r(n),r.d(n,{_getPollInterval:function(){return zn},awaitHeight:function(){return xn},getAccount:function(){return An},getBalance:function(){return Pn},getContract:function(){return Dn},getContractByteCode:function(){return $n},getCurrentGeneration:function(){return _n},getGeneration:function(){return In},getHeight:function(){return bn},getKeyBlock:function(){return En},getMicroBlockHeader:function(){return Mn},getMicroBlockTransactions:function(){return kn},getName:function(){return Fn},poll:function(){return Tn},resolveName:function(){return Vn},txDryRun:function(){return Bn},waitForTxConfirm:function(){return qn}});var a={};r.r(a),r.d(a,{Account:function(){return gi},AuctionEntry:function(){return qi},ByteCode:function(){return _i},Channel:function(){return Ai},ChannelCloseMutualTx:function(){return ds},ChannelCloseSoloTx:function(){return us},ChannelCreateTx:function(){return ms},ChannelDepositTx:function(){return ps},ChannelForceProgressTx:function(){return hs},ChannelSetDelegatesTx:function(){return ys},ChannelSettleTx:function(){return gs},ChannelSlashTx:function(){return fs},ChannelSnapshotSoloTx:function(){return Ns},ChannelWithdrawTx:function(){return Cs},CheckTxInPoolResponse:function(){return Ss},CommitmentId:function(){return ws},ContractCallObject:function(){return Vi},ContractCallTx:function(){return zs},ContractCreateTx:function(){return vs},ContractObject:function(){return Pi},CountResponse:function(){return Qi},CreateContractUnsignedTx:function(){return Ys},Currency:function(){return ki},Delegates:function(){return zi},DryRunAccount:function(){return Oi},DryRunCallContext:function(){return $i},DryRunCallReq:function(){return Bi},DryRunInput:function(){return Mi},DryRunInputItem:function(){return Ri},DryRunResult:function(){return Fi},DryRunResults:function(){return Di},EncodedTx:function(){return ss},ErrorModel:function(){return fi},Event:function(){return ji},GAAttachTx:function(){return Ts},GAMetaTx:function(){return xs},GAObject:function(){return cs},GasPricesItem:function(){return ts},Generation:function(){return Hi},HashResponse:function(){return Wi},Header:function(){return Ui},HeightResponse:function(){return Li},Image:function(){return Ei},KeyBlock:function(){return Gi},MicroBlockHeader:function(){return Ki},NameClaimTx:function(){return qs},NameEntry:function(){return Ji},NameHash:function(){return As},NamePointer:function(){return xi},NamePreclaimTx:function(){return Ps},NameRevokeTx:function(){return _s},NameTransferTx:function(){return Is},NameUpdateTx:function(){return ks},NextNonceResponse:function(){return Ni},OffChainCallContract:function(){return Ws},OffChainDeposit:function(){return Ls},OffChainNewContract:function(){return Ks},OffChainTransfer:function(){return Qs},OffChainUpdate:function(){return vi},OffChainWithdrawal:function(){return Js},OracleExtendTx:function(){return Ms},OracleQueries:function(){return Xi},OracleQuery:function(){return Zi},OracleQueryTx:function(){return Os},OracleRegisterTx:function(){return Rs},OracleRespondTx:function(){return Bs},PayingForTx:function(){return $s},PeerConnections:function(){return as},PeerCount:function(){return Ds},PeerCountAvailable:function(){return Vs},PeerCountConnected:function(){return Fs},PeerDetails:function(){return Es},PeerPubKey:function(){return es},Peers:function(){return js},PoI:function(){return Ii},PostTxResponse:function(){return os},Protocol:function(){return ns},PubKey:function(){return Hs},RegisteredOracle:function(){return Yi},RelativeTTL:function(){return bi},SignedTx:function(){return Si},SignedTxs:function(){return Ci},SpendTx:function(){return Gs},Status:function(){return rs},SyncStatus:function(){return is},TokenSupply:function(){return Us},Ttl:function(){return Ti},Tx:function(){return wi},TxInfoObject:function(){return ls},UnsignedTx:function(){return bs},discriminators:function(){return Xs}});var i={};r.r(i),r.d(i,{payForTransaction:function(){return Il},spend:function(){return Pl},transferFunds:function(){return _l}});var s={};r.r(s),r.d(s,{buildAuthTxHash:function(){return Jl},buildAuthTxHashByGaMetaTx:function(){return Yl},createGeneralizedAccount:function(){return Ql}});var o={};r.r(o),r.d(o,{ApiVersion:function(){return rd},ByteCodeInput:function(){return Xc},BytecodeCallResultInput:function(){return Gc},Calldata:function(){return Lc},CompileOpts:function(){return Dc},CompileResult:function(){return jc},CompilerError:function(){return Fc},CompilerVersion:function(){return td},Contract:function(){return $c},DecodeCalldataBytecode:function(){return Kc},DecodeCalldataSource:function(){return Yc},DecodedCalldata:function(){return Qc},DecodedCallresult:function(){return Uc},ErrorModel:function(){return Jc},ErrorPos:function(){return Vc},FateAssembler:function(){return Zc},FunctionCallInput:function(){return Wc},SophiaBinaryData:function(){return nd},SophiaCallResultInput:function(){return Hc},SophiaJsonData:function(){return ad},ValidateByteCodeInput:function(){return ed}});var l=r(53751),c=r(20641),d=r(90033);const u=e=>((0,c.Qi)("data-v-4a6d8aa4"),e=e(),(0,c.jt)(),e),m=u((()=>(0,c.Lk)("input",{id:"toggle-aepp",type:"checkbox"},null,-1))),p=u((()=>(0,c.Lk)("h2",null,[(0,c.eW)(" Wallet Iframe "),(0,c.Lk)("label",{for:"toggle-aepp"})],-1))),h={class:"group"},y=u((()=>(0,c.Lk)("div",null,"Aepp URL",-1))),g=u((()=>(0,c.Lk)("div",null,"Address",-1))),f=u((()=>(0,c.Lk)("div",null,"Node",-1))),N=u((()=>(0,c.Lk)("div",null,"Balance",-1))),C=u((()=>(0,c.Lk)("div",null,"RPC client",-1))),S=["src"];function w(e,t,r,n,a,i){const s=(0,c.g2)("Value");return(0,c.uX)(),(0,c.CE)(c.FK,null,[m,p,(0,c.Lk)("div",h,[(0,c.Lk)("div",null,[y,(0,c.Lk)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,l.D$)(((...e)=>i.navigate&&i.navigate(...e)),["prevent"]))},[(0,c.bo)((0,c.Lk)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[l.Jo,e.nextAeppUrl]])],32)]),(0,c.Lk)("div",null,[g,(0,c.Lk)("div",null,(0,d.v_)(e.address),1)]),(0,c.Lk)("div",null,[f,(0,c.Lk)("div",null,(0,d.v_)(e.nodeName),1)]),(0,c.Lk)("div",null,[N,(0,c.bF)(s,{value:e.balancePromise},null,8,["value"])]),(0,c.Lk)("div",null,[C,(0,c.Lk)("div",null,"status: "+(0,d.v_)(e.clientStatus??"no client")+", id: "+(0,d.v_)(e.clientId??"not defined"),1)]),(0,c.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>i.switchAccount&&i.switchAccount(...e))},"Switch Account"),(0,c.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>i.switchNode&&i.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,c.uX)(),(0,c.CE)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>i.disconnect&&i.disconnect(...e))}," Disconnect ")):((0,c.uX)(),(0,c.CE)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??i.shareWalletInfo)())},(0,d.v_)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,c.Q3)("",!0):((0,c.uX)(),(0,c.CE)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,S))],64)}class z extends Error{constructor(e){super(e),this.name="BaseError"}}class v extends z{constructor(e){super(e),this.name="AccountError"}}class b extends z{constructor(e){super(e),this.name="AensError"}}class T extends z{constructor(e){super(e),this.name="AeppError"}}class x extends z{constructor(e){super(e),this.name="CompilerError"}}class q extends z{constructor(e){super(e),this.name="ContractError"}}class A extends z{constructor(e){super(e),this.name="CryptographyError"}}class P extends z{constructor(e){super(e),this.name="NodeError"}}class _ extends z{constructor(e){super(e),this.name="TransactionError"}}class I extends z{constructor(e){super(e),this.name="WalletError"}}class k extends z{constructor(e,t,r){super(`${e} should be ${t}, got ${r} instead`),this.name="ArgumentError"}}class E extends A{constructor(e){super(e),this.name="IllegalArgumentError"}}class M extends z{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class O extends z{constructor(e,t){super([`Giving up after ${e} blocks mined`,`transaction hash: ${t}`].join(", ")),this.name="TxTimedOutError"}}class R extends z{constructor(e){super(e),this.name="TypeError"}}class B extends z{constructor(e){super(e),this.name="NotImplementedError"}}class $ extends z{constructor(e,t,r,n){super(`Unsupported ${e} version ${t}. Supported: >= ${r} < ${n}`),this.name="UnsupportedVersionError"}}class D extends z{constructor(e){super(e),this.name="InternalError"}}class F extends D{constructor(e="Expected to not happen, required for TS"){super(e),this.name="UnexpectedTsError"}}class V extends v{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class j extends b{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class H extends b{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class G extends b{constructor(e){super(e),this.name="InvalidAensNameError"}}class U extends T{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class W extends T{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class L extends T{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class K extends q{constructor(e){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`),this.name="BytecodeMismatchError"}}class Q extends q{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class J extends q{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class Y extends q{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class X extends q{constructor(e){super(e),this.name="MissingContractAddressError"}}class Z extends q{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class ee extends q{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class te extends q{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class re extends q{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class ne extends q{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class ae extends q{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class ie extends q{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((([e])=>`"${e}"`)).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class se extends A{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class oe extends A{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class le extends A{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ce extends A{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class de extends A{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class ue extends P{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class me extends P{constructor(e){super(e),this.name="NodeNotFoundError"}}class pe extends _{constructor(e){super(e),this.name="DecodeError"}}class he extends _{constructor(e){super(e),this.name="PayloadLengthError"}}class ye extends _{constructor(e){super(e),this.name="DryRunError"}}class ge extends _{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class fe extends _{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class Ne extends _{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class Ce extends _{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class Se extends I{constructor(e){super(e),this.name="AlreadyConnectedError"}}class we extends I{constructor(e){super(e),this.name="NoWalletConnectedError"}}class ze extends I{constructor(e){super(e),this.name="RpcConnectionError"}}class ve{constructor({debug:e=!1}){this.debug=e}connect(e,t){if(this.isConnected())throw new Se("You already connected")}disconnect(){if(!this.isConnected())throw new we("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}r(43838);var be=r(1814);let Te=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),xe=function(e){return e["window"]="window",e["extension"]="extension",e}({}),qe=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),Ae=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["unsafeSign"]="data.unsafeSign",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),Pe=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const _e=[];class Ie extends z{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=_e.find((t=>t.code===e.code));if(null==t)throw new D(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class ke extends Ie{constructor(e){super("Invalid transaction"),(0,be.A)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,be.A)(ke,"code",2),_e.push(ke);class Ee extends Ie{constructor(e){super("Operation rejected by user"),(0,be.A)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,be.A)(Ee,"code",4),_e.push(Ee);class Me extends Ie{constructor(){super("Unsupported Protocol Version"),(0,be.A)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,be.A)(Me,"code",5),_e.push(Me);class Oe extends Ie{constructor(e){super("Wallet deny your connection request"),(0,be.A)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,be.A)(Oe,"code",9),_e.push(Oe);class Re extends Ie{constructor(){super("You are not connected to the wallet"),(0,be.A)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,be.A)(Re,"code",10),_e.push(Re);class Be extends Ie{constructor(e){super(`You are not subscribed for account ${e}`),(0,be.A)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,be.A)(Be,"code",11),_e.push(Be);class $e extends Ie{constructor(){super("The peer failed to execute your request due to unknown error"),(0,be.A)(this,"code",12),this.name="RpcInternalError"}}(0,be.A)($e,"code",12),_e.push($e);class De extends Ie{constructor(){super("Method not found"),(0,be.A)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function Fe(e,t,r){Ve(e,t),t.set(e,r)}function Ve(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function je(e,t){return e.get(Ge(e,t))}function He(e,t,r){return e.set(Ge(e,t),r),r}function Ge(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}(0,be.A)(De,"code",-32601),_e.push(De);var Ue=new WeakMap,We=new WeakMap,Le=new WeakMap;class Ke extends ve{constructor({target:e,self:t=window,origin:r,sendDirection:n,receiveDirection:a=Te.to_aepp,...i}={}){super(i),Fe(this,Ue,void 0),Fe(this,We,void 0),Fe(this,Le,void 0),He(We,this,e),He(Le,this,t),this.origin=r,this.sendDirection=n,this.receiveDirection=a}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var r,n;if("object"!==typeof t.data||"2.0"!==(null!==(r=t.data.jsonrpc)&&void 0!==r?r:null===(n=t.data.data)||void 0===n?void 0:n.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=je(We,this)&&je(We,this)!==t.source)return;this.receiveMessage(t);let{data:a}=t;if(null!=a.type){if(t.data.type!==this.receiveDirection)return;a=a.data}e(a,t.origin,t.source)},je(Le,this).addEventListener("message",this.listener),He(Ue,this,t)}disconnect(){if(super.disconnect(),null==this.listener||null==je(Ue,this))throw new D("Expected to not happen, required for TS");je(Le,this).removeEventListener("message",this.listener),delete this.listener,je(Ue,this).call(this),He(Ue,this,void 0)}sendMessage(e){var t;if(null==je(We,this))throw new ze("Can't send messages without target");const r=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(r),je(We,this).postMessage(r,null!==(t=this.origin)&&void 0!==t?t:"*")}}r(9225),r(14632),r(8396),r(69431),r(704),r(16925);var Qe=r(81429),Je=r(50925);class Ye{}var Xe=r(12330),Ze=r(25363),et=r(88294);const{Buffer:tt}=Qe,rt=async e=>new Promise((t=>{setTimeout(t,e)})),nt=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),at=(()=>{try{return tt.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),it=at?(e,t)=>tt.concat(e.map((e=>tt.from(e))),t):tt.concat;function st(e,t){return e in t}function ot(e,t){return t.includes(e)}function lt(e){return e instanceof et.pj&&404===e.statusCode&&e.message.includes("Account not found")}function ct(e){if(!(e instanceof Error))throw e}let dt=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["AccountSecretKey"]="sk",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});var ut=r(58649),mt=r(39685);const{Buffer:pt}=Qe,{encode:ht,decode:yt}=ut;function gt(e){return(new mt).update(e).digest()}const ft=[dt.ContractBytearray,dt.ContractStoreKey,dt.ContractStoreValue,dt.Transaction,dt.OracleQuery,dt.OracleResponse,dt.State,dt.Poi,dt.StateTrees,dt.CallStateTree,dt.Bytearray],Nt=[dt.KeyBlockHash,dt.MicroBlockHash,dt.BlockPofHash,dt.BlockTxHash,dt.BlockStateHash,dt.Channel,dt.ContractAddress,dt.TxHash,dt.OracleAddress,dt.OracleQueryId,dt.AccountAddress,dt.AccountSecretKey,dt.Signature,dt.Commitment,dt.PeerPubkey,dt.Name],Ct={[dt.KeyBlockHash]:32,[dt.MicroBlockHash]:32,[dt.BlockPofHash]:32,[dt.BlockTxHash]:32,[dt.BlockStateHash]:32,[dt.Channel]:32,[dt.ContractAddress]:32,[dt.TxHash]:32,[dt.OracleAddress]:32,[dt.OracleQueryId]:32,[dt.AccountAddress]:32,[dt.AccountSecretKey]:32,[dt.Signature]:64,[dt.Commitment]:32,[dt.PeerPubkey]:32,[dt.State]:32};function St(e,t){if(!st(t,Ct))return;const r=Ct[t];if(null!=r&&e.length!==r)throw new he(`Payload should be ${r} bytes, got ${e.length} instead`)}const wt=e=>gt(gt(e)).slice(0,4),zt=e=>it([e,wt(e)]);function vt(e){const t=e.slice(0,-4);if(!wt(t).equals(e.slice(-4)))throw new se;return t}const bt={encode:e=>zt(e).toString("base64"),decode:e=>vt(pt.from(e,"base64"))},Tt={encode:e=>ht(zt(e)),decode:e=>vt(pt.from(yt(e)))},xt=e=>{const t=ft.find((t=>t===e));if(null!=t)return[t,bt];const r=Nt.find((t=>t===e));if(null!=r)return[r,Tt];throw new k("prefix",`one of ${[...Nt,...ft].join(", ")}`,e)};function qt(e){const[t,r,n]=e.split("_");if(null==r)throw new pe(`Encoded string missing payload: ${e}`);if(null!=n)throw new pe(`Encoded string have extra parts: ${e}`);const[a,i]=xt(t),s=i.decode(r);return St(s,a),s}function At(e,t){const[,r]=xt(t);return St(e,t),`${t}_${r.encode(e)}`}const{Buffer:Pt}=Qe,{blake2b:_t}=Xe,{encode:It}=Ze;function kt(e,...t){0===t.length&&(t=[dt.AccountAddress]);try{qt(e);const r=e.split("_")[0];if(!ot(r,t))throw new k("Encoded string type",t.length>1?`one of ${t.join(", ")}`:t[0],r);return!0}catch(r){return!1}}function Et(e){return Pt.from(_t(e,void 0,32))}function Mt(e=!1){const t=Je.sign.keyPair(),r=Pt.from(t.publicKey),n=Pt.from(t.secretKey);return e?{publicKey:r,secretKey:n}:{publicKey:At(r,dt.AccountAddress),secretKey:At(n.subarray(0,32),dt.AccountSecretKey)}}function Ot(e,t){return Je.sign.detached(Pt.from(e),Pt.from(t))}function Rt(e,t,r){return Je.sign.detached.verify(e,t,qt(r))}const Bt=Pt.from("aeternity Signed Message:\n","utf8"),$t=It(Bt.length);function Dt(e){const t=Pt.from(e,"utf8");return Et(it([$t,Bt,It(t.length),t]))}var Ft=r(67962),Vt=r(45195);const{TypeResolver:jt,ContractByteArrayEncoder:Ht}=Ft;function Gt(e){var t;return Et(null!==(t=Vt(e))&&void 0!==t?t:"")}function Ut(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},r=(new jt).resolveType(t,{}),n=(new Ht).encodeWithType(e,r);return Et(qt(n))}function Wt(e,t,r){return Et(it([$t,new Uint8Array([0]),Ut(r),Gt(t),Et(qt(e))]))}var Lt=r(46062);const Kt={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n},Qt=5e4,Jt=1e9,Yt=1e14,Xt=31,Zt=nt({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(([e,t])=>[e,new Lt.A(t).times(Yt)]));let er=function(e){return e[e["Ceres"]=6]="Ceres",e}({}),tr=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),rr=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),nr=function(e){return e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelClientReconnectTx"]=575]="ChannelClientReconnectTx",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e}({});const{Buffer:ar}=Qe,ir={[er.Ceres]:{"contract-create":{vmVersion:[tr.Fate3],abiVersion:[rr.Fate]},"contract-call":{vmVersion:[],abiVersion:[rr.Fate]},"oracle-call":{vmVersion:[],abiVersion:[rr.NoAbi,rr.Fate]}}};function sr(e,t){var r;const n=ir[e][t];return{vmVersion:null!==(r=n.vmVersion[0])&&void 0!==r?r:tr.Fate2,abiVersion:n.abiVersion[0]}}var or={serialize(e,t,{consensusProtocolVersion:r=er.Ceres}){var n;return null!==(n=e)&&void 0!==n||(e=sr(r,"contract-create")),ar.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,r){return null!=e?e:null==r.consensusProtocolVersion&&2!==Object.keys(er).length&&null!=r.onNode?sr((await r.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,r]=e;return{vmVersion:+t,abiVersion:+r}}};const{Buffer:lr}=Qe;var cr={_getProtocolDetails(e,t){const r=nr.ContractCallTx===t||nr.GaMetaTx===t?"contract-call":"oracle-call";return sr(e,r).abiVersion},serialize(e,{tag:t},{consensusProtocolVersion:r=er.Ceres}){const n=null!==e&&void 0!==e?e:this._getProtocolDetails(r,t);return lr.from([n])},async prepare(e,{tag:t},r){return null!=e?e:null==r.consensusProtocolVersion&&2!==Object.keys(er).length&&null!=r.onNode?this._getProtocolDetails((await r.onNode.getNodeInfo()).consensusProtocolVersion,t):void 0},deserialize(e){return e[0]}};const{Buffer:dr}=Qe;function ur(e,t=!1){if(null==e)return dr.from([]);if(Number.isInteger(e)||Lt.A.isBigNumber(e)||t){if(Lt.A.isBigNumber(e)||(e=new Lt.A(e)),!e.isInteger())throw new R(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),dr.from(t,"hex")}if("string"===typeof e)return dr.from(e);throw new M}const{Buffer:mr}=Qe,pr=[dt.AccountAddress,dt.Name,dt.Commitment,dt.OracleAddress,dt.ContractAddress,dt.Channel];function hr(...e){return{serialize(t){const r=t.slice(0,2);if(!ot(r,pr))throw new Ne(r);if(!ot(r,e))throw new k("Address encoding",e.join(", "),r);const n=pr.indexOf(r)+1;return mr.from([...ur(n),...qt(t)])},deserialize(t){const r=mr.from(t).readUIntBE(0,1),n=pr[r-1];if(null==n)throw new ge(r);if(!ot(n,e))throw new k("Address encoding",e.join(", "),n);return At(t.subarray(1),n)}}}function yr(e){return{serialize(t,r){return t.map((t=>e.serialize(t,r)))},deserialize(t,r){return t.map((t=>e.deserialize(t,r)))}}}r(21215),r(36538),r(69565);const{Buffer:gr}=Qe;function fr(e,t){const r=gr.from([...qt(e),...ur(t)]),n=Et(r);return At(n,dt.ContractAddress)}const Nr=".chain";function Cr(e){const[t,r,...n]=e.split(".");if(0!==n.length)throw new k("aens name","including only one dot",e);if(r!==Nr.slice(1))throw new k("aens name",`suffixed with ${Nr}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new k("aens name","not containing emoji",e);if("-"===t[2]&&"-"===t[3])throw new k("aens name",'without "-" char in both the third and fourth positions',e);if("-"===t[0])throw new k("aens name",'starting with no "-" char',e);if("-"===t.at(-1))throw new k("aens name",'ending with no "-" char',e);let a;try{const n=new URL(`http://${t}.${r}`);if(n.username+n.password+n.port+n.search+n.hash!==""||"/"!==n.pathname)throw new k("aens name","valid",e);a=n.host}catch(i){if(i instanceof TypeError&&i.message.includes("Invalid URL"))throw new k("aens name","valid",e);throw i}if(!/^[a-z0-9.-]+$/i.test(a))throw new k("aens name","without illegal chars",e);if(a.length>63+Nr.length)throw new k("aens name","not too long",e);return a}function Sr(e){return At(Et(Cr(e)),dt.Name)}function wr(e=gr.from([])){return new Lt.A(gr.from(e).toString("hex"),16).toString(10)}function zr(e){Cr(e)}function vr(e){try{return zr(e),!0}catch(t){return!1}}dt.AccountAddress,dt.OracleAddress,dt.ContractAddress,dt.Channel;function br(e){const t=Cr(e).length-Nr.length;return Zt[Math.min(t,Xt)]}var Tr={serialize(e){if(Number(e)<0)throw new k("value","greater or equal to 0",e);return ur(e,!0)},deserialize(e){return wr(e)}};const xr=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||Lt.A.isBigNumber(e));let qr=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const Ar={[qr.AE]:0,[qr.MILI_AE]:-3,[qr.MICRO_AE]:-6,[qr.NANO_AE]:-9,[qr.PICO_AE]:-12,[qr.FEMTO_AE]:-15,[qr.AETTOS]:-18},Pr=(e,{denomination:t=qr.AETTOS,targetDenomination:r=qr.AETTOS})=>{if(!xr(e))throw new k("value","a number",e);return new Lt.A("bigint"===typeof e?e.toString():e).shiftedBy(Ar[t]-Ar[r]).toFixed()};var _r={...Tr,serializeAettos(e,t,r){return null!==e&&void 0!==e?e:"0"},serialize(e,t,{denomination:r=qr.AETTOS,...n}){return Tr.serialize(this.serializeAettos(null!=e?Pr(e,{denomination:r}):e,t,n))}};const{Buffer:Ir}=Qe;function kr(e,t){return{serialize(e){if(null==e){if(!0===t)return Ir.from([]);throw new k("Encoded data","provided",e)}return qt(e)},deserialize(t){return At(t,e)}}}const{Buffer:Er}=Qe;function Mr(e){return{serialize(t,{packEntry:r}){return ArrayBuffer.isView(t)?Er.from(t):"string"===typeof t&&t.startsWith("tx_")?qt(t):qt(r({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackEntry:r}){return r(At(t,dt.Bytearray),e)}}}const{Buffer:Or}=Qe;function Rr(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new k("value","to be a number",e);if(e>255)throw new k("value","to be less than 256",e);if(!ot(e,t))throw new k("value","to be a value of Enum",e);return Or.from([e])},deserialize(e){if(1!==e.length)throw new k("buffer","to have single element",e.length);const r=e[0];if(!ot(r,t))throw new k("value","to be a value of Enum",r);return r}}}const Br=new WeakMap;async function $r(e){const t=Br.get(e);if(null!=t&&t.time>Date.now()-2e4)return t.gasPrice;const{minGasPrice:r,utilization:n}=(await e.getRecentGasPrices())[0];let a=n<70?0n:BigInt(new Lt.A(r.toString()).times(1.01).integerValue().toFixed());const i=100000n*BigInt(Jt);return a>i&&(console.warn([`Estimated gas price ${a} exceeds the maximum safe value for unknown reason.`,`It will be limited to ${i}.`,"To overcome this restriction provide `gasPrice`/`fee` in options."].join(" ")),a=i),Br.set(e,{gasPrice:a,time:Date.now()}),a}var Dr={..._r,async prepare(e,t,{onNode:r,denomination:n}){if(null!=e)return e;if(null==r)throw new k("onNode","provided (or provide `gasPrice` instead)",r);const a=await $r(r);return 0n!==a?Pr(a,{targetDenomination:n}):void 0},serializeAettos(e=Jt.toString()){if(+e<Jt)throw new E(`Gas price ${e.toString()} must be bigger than ${Jt}`);return e}};const Fr=15e3,Vr=20,jr=3,Hr=e=>{var t;const r={[nr.ChannelForceProgressTx]:30,[nr.ChannelOffChainTx]:0,[nr.ContractCreateTx]:5,[nr.ContractCallTx]:12,[nr.GaAttachTx]:5,[nr.GaMetaTx]:5,[nr.PayingForTx]:.2},n=null!==(t=r[e])&&void 0!==t?t:1;return n*Fr},Gr=(e,t,{relativeTtl:r,innerTxSize:n})=>{switch(e){case nr.OracleRegisterTx:case nr.OracleExtendTx:case nr.OracleQueryTx:case nr.OracleResponseTx:return t*Vr+Math.ceil(32e3*r/Math.floor(525600/jr));case nr.GaMetaTx:case nr.PayingForTx:return(t-n)*Vr;default:return t*Vr}};function Ur(e){const t={[nr.OracleRegisterTx]:"oracleTtlValue",[nr.OracleExtendTx]:"oracleTtlValue",[nr.OracleQueryTx]:"queryTtlValue",[nr.OracleResponseTx]:"responseTtlValue"},{tag:r}=e;return st(r,t)?e[t[r]]:1}function Wr(e,t,r){const{length:n}=qt(e),a=t(e);let i=0;return a.tag!==nr.GaMetaTx&&a.tag!==nr.PayingForTx||(i=qt(r(a.tx.encodedTx)).length),Hr(a.tag)+Gr(a.tag,n,{relativeTtl:Ur(a),innerTxSize:i})}function Lr(e,t,r){let n,a=new Lt.A(0);do{n=a,a=new Lt.A(Jt).times(Wr(e(a),t,r))}while(!a.eq(n));return a}const Kr="_gas-price:";var Qr={..._r,async prepare(e,t,{onNode:r}){if(null!=e)return e;if(null==r)throw new k("onNode","provided (or provide `fee` instead)",r);const n=await $r(r);return 0n!==n?Kr+n:void 0},serializeAettos(e,{rebuildTx:t,unpackTx:r,buildTx:n,_computingMinFee:a},{_canIncreaseFee:i}){if(null!=a)return a.toFixed();const s=Lr((e=>t({_computingMinFee:e})),r,n),o=!0===(null===e||void 0===e?void 0:e.startsWith(Kr))?s.dividedBy(Jt).times(e.replace(Kr,"")):new Lt.A(null!==e&&void 0!==e?e:s);if(s.gt(o)){if(!0===i)return s.toFixed();throw new E(`Fee ${o.toString()} must be bigger than ${s}`)}return o.toFixed()},serialize(e,t,r){return"string"===typeof e&&e.startsWith(Kr)?Tr.serialize(this.serializeAettos(e,t,r)):_r.serialize.call(this,e,t,r)}},Jr={serialize(e){return Tr.serialize(e)},deserialize(e){return+Tr.deserialize(e)}};function Yr(e,t,r,n){return e-+Wr(t(e),r,n)}var Xr={...Jr,serialize(e,{tag:t,rebuildTx:r,unpackTx:n,buildTx:a,_computingGasLimit:i},{gasMax:s=6e6}){if(null!=i)return Jr.serialize(i);const o=t===nr.GaMetaTx?Qt:Yr(s,(e=>r({_computingGasLimit:e,_canIncreaseFee:!0})),n,a),l=null!==e&&void 0!==e?e:o;if(l>o)throw new E(`Gas limit ${l} must be less or equal to ${o}`);return Jr.serialize(l)}};const{Buffer:Zr}=Qe;var en={serialize(e){return Zr.from(e)},deserialize(e){return e.toString()}},tn={serialize(e){return en.serialize(e)},deserialize(e){return en.deserialize(e)}},rn={..._r,serializeAettos(e,t){const r=br(t.name),n=new Lt.A(null!==e&&void 0!==e?e:r);if(r.gt(n))throw new H(n,r);return n.toFixed()},serialize(e,t,r){return _r.serialize.call(this,e,t,r)}};const nn=hr(dt.Name);var an={...nn,serialize(e){return nn.serialize(vr(e)?Sr(e):e)}};function sn(e){return{...Jr,serialize(e,{tag:t}){if(nr.GaAttachTx===t&&1!==e)throw new k("nonce","equal 1 if GaAttachTx",e);return Jr.serialize(e)},async prepare(t,r,n){if(null!=t)return t;const{onNode:a,strategy:i}=n,s=n[e],o="provided (or provide `nonce` instead)";if(null==a)throw new k("onNode",o,a);if(null==s)throw new k("senderId",o,s);return(await a.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:i}).catch((e=>{if(!lt(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const{Buffer:on}=Qe,ln=on.from([1]),cn=on.from([2]),dn=1024,un=hr(...pr);var mn=e=>({serialize(t){if(t.length>32)throw new E(`Expected 32 pointers or less, got ${t.length} instead`);return t.map((({key:t,id:r})=>{let n;if(kt(r,...pr)&&(n=[...e?[ln]:[],un.serialize(r)]),kt(r,dt.Bytearray)){const e=qt(r);if(e.length>dn)throw new k("Raw pointer",`shorter than ${dn+1} bytes`,`${e.length} bytes`);n=[cn,e]}if(null==n)throw new pe(`Unknown AENS pointer value: ${r}`);return[ur(t),on.concat(n)]}))},deserialize(t){return t.map((([t,r])=>{if(!e)return{key:t.toString(),id:un.deserialize(r)};const n=r.subarray(0,1),a=r.subarray(1);let i;if(n.equals(ln)&&(i=un.deserialize(a)),n.equals(cn)&&(i=At(a,dt.Bytearray)),null==i)throw new pe(`Unknown AENS pointer tag: ${n}`);return{key:t.toString(),id:i}}))}}),pn={..._r,async prepare(e,t,r){if(null!=e)return e;const{onNode:n,oracleId:a}=r,i="provided (or provide `queryFee` instead)";if(null==n)throw new k("onNode",i,n);if(null==a)throw new k("oracleId",i,a);return(await n.getOracleByPubkey(a)).queryFee.toString()}};const{Buffer:hn}=Qe;var yn={serialize(e){return hn.from(e)},deserialize(e){return e}};function gn(e,t){return{serialize(r){if((!0!==t||null!=r)&&r!==e)throw new k("ShortUIntConst",e,r);return Jr.serialize(e)},deserialize(t){const r=Jr.deserialize(t);if(r!==e)throw new k("ShortUIntConst",e,r);return e},constValue:e,constValueOptional:!0===t}}var fn={serialize(e){return ur(e)},deserialize(e){return e.toString()}};const{Buffer:Nn}=Qe;function Cn(e){return{serialize(t,{buildTx:r}){return ArrayBuffer.isView(t)?Nn.from(t):"string"===typeof t&&t.startsWith("tx_")?qt(t):qt(r({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackTx:r}){return r(At(t,dt.Transaction),e)}}}r(10315),r(70757),r(38672),r(17637),r(61990),r(77661),r(22417);function Sn(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,(r,...n)=>{const a=e();if(null==a)throw new k("wrapped value","defined",a);if("get"===t&&"_wrappedValue"===n[0])return a;const i=Reflect[t](a,...n);return"function"===typeof i&&"get"===t?i.bind(a):i}]))))}function wn(e){var t;return null!==(t=e._wrappedValue)&&void 0!==t?t:e}async function zn(e,{_expectedMineRate:t,_microBlockCycle:r,onNode:n}){var a,i;const s=async(t,r,a,i)=>t!==e?null:null!=r?r:"ae_dev"===await(null===n||void 0===n?void 0:n.getNetworkId())?a:i,o=null!==(a=null!==(i=await s("key-block",t,0,18e4))&&void 0!==i?i:await s("micro-block",r,0,3e3))&&void 0!==a?a:(()=>{throw new D(`Unknown type: ${e}`)})();return Math.floor(o/3)}const vn=new WeakMap;async function bn({cached:e=!1,...t}){const r=wn(t.onNode);if(e){const e=vn.get(r);if(null!=e&&e.time>Date.now()-await zn("key-block",t))return e.height}const{height:n}=await r.getCurrentKeyBlockHeight();return vn.set(r,{height:n,time:Date.now()}),n}async function Tn(e,{blocks:t=5,interval:r,...n}){var a;let i;null!==(a=r)&&void 0!==a||(r=await zn("micro-block",n));do{const a=await n.onNode.getTransactionByHash(e);if(-1!==a.blockHeight)return a;null==i&&(i=0!==a.tx.ttl?-1:await bn({...n,cached:!0})+t),await rt(r)}while(-1===i||await bn({...n,cached:!0})<i);throw new O(t,e)}async function xn(e,{interval:t,...r}){var n;let a;null!==(n=t)&&void 0!==n||(t=Math.min(await zn("key-block",r),5e3));do{null!=a&&await rt(t),a=await bn(r)}while(a<e);return a}async function qn(e,{confirm:t=3,onNode:r,...n}){const{blockHeight:a}=await r.getTransactionByHash(e),i=await xn(a+t,{onNode:r,...n}),{blockHeight:s}=await r.getTransactionByHash(e);switch(s){case-1:throw new Ce(e);case a:return i;default:return qn(e,{onNode:r,confirm:t,...n})}}async function An(e,{height:t,hash:r,onNode:n}){return null!=t?n.getAccountByPubkeyAndHeight(e,t):null!=r?n.getAccountByPubkeyAndHash(e,r):n.getAccountByPubkey(e)}async function Pn(e,{format:t=qr.AETTOS,...r}){const n=e.startsWith("ok_")?At(qt(e),dt.AccountAddress):e,{balance:a}=await An(n,r).catch((e=>{if(!lt(e))throw e;return{balance:0n}}));return Pr(a,{targetDenomination:t})}async function _n({onNode:e}){return e.getCurrentGeneration()}async function In(e,{onNode:t}){return"number"===typeof e?t.getGenerationByHeight(e):t.getGenerationByHash(e)}async function kn(e,{onNode:t}){return(await t.getMicroBlockTransactionsByHash(e)).transactions}async function En(e,{onNode:t}){return"number"===typeof e?t.getKeyBlockByHeight(e):t.getKeyBlockByHash(e)}async function Mn(e,{onNode:t}){return t.getMicroBlockHeaderByHash(e)}const On=new Map;async function Rn(e,t){const r=On.get(e);if(On.delete(e),null==r)throw new D("Can't get dry-run request");let n;try{const e="number"===typeof r[0].top?(await En(r[0].top,{onNode:t})).hash:r[0].top;n=await t.protectedDryRunTxs({top:e,txEvents:r[0].txEvents,txs:r.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(r.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:Kt.amount})))})}catch(s){return void r.forEach((({reject:e})=>e(s)))}const{results:a,txEvents:i}=n;a.forEach((({result:e,reason:t,...n},a)=>{const{resolve:s,reject:o,tx:l,accountAddress:c}=r[a];"ok"===e?s({...n,txEvents:i}):o(Object.assign(new ye(t),{tx:l,accountAddress:c}))}))}async function Bn(e,t,{top:r,txEvents:n,combine:a,onNode:i}){var s;const o=!0===a?[r,n].join():"immediate",l=null!==(s=On.get(o))&&void 0!==s?s:[];return On.set(o,l),new Promise(((s,c)=>{var d;l.push({tx:e,accountAddress:t,top:r,txEvents:n,resolve:s,reject:c}),!0===a?null!==(d=l.timeout)&&void 0!==d||(l.timeout=setTimeout((()=>{Rn(o,i)}))):Rn(o,i)}))}async function $n(e,{onNode:t}){return t.getContractCode(e)}async function Dn(e,{onNode:t}){return t.getContract(e)}async function Fn(e,{onNode:t}){return t.getNameEntryByName(e)}async function Vn(e,t,{verify:r=!0,resolveByNode:n=!1,onNode:a}){if(vr(e)){if(r||n){const r=await a.getNameEntryByName(e),i=r.pointers.find((e=>e.key===t));if(null==i)throw new j(e,t);if(n)return i.id}return Sr(e)}try{return qt(e),e}catch(i){throw new G(`Invalid name or address: ${e}`)}}var jn={...Jr,serialize(e){return Jr.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,{onNode:r,absoluteTtl:n,_isInternalBuild:a,...i}){if(!0!==n&&0!==e&&(null!=e||!0===a)){var s;if(null==r)throw new k("onNode","provided",r);e=(null!==(s=e)&&void 0!==s?s:3)+await bn({...i,onNode:r,cached:!0})}return e}};function Hn(e,t){return{...t,serialize(r,n){return t.serialize(null!==r&&void 0!==r?r:e,n)}}}function Gn(e,t){return{...t,serialize(r,n,a){return t.serialize(e(r),n,a)}}}let Un=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({}),Wn=function(e){return e[e["Account"]=10]="Account",e[e["Oracle"]=20]="Oracle",e[e["Name"]=30]="Name",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["Channel"]=58]="Channel",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({}),Ln=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({});const Kn=Cn(),Qn=Cn(nr.SignedTx),Jn=Mr(Wn.TreesPoi),Yn=Hn(3600,Jr),Xn=Gn((e=>{var t;const r=18e4;if(null!==(t=e)&&void 0!==t||(e=r),e>=1&&e<=r)return e;throw new k("nameTtl",`a number between 1 and ${r} blocks`,e)}),Jr),Zn=[{tag:gn(nr.SignedTx),version:gn(1,!0),signatures:yr(yn),encodedTx:Kn},{tag:gn(nr.SpendTx),version:gn(1,!0),senderId:hr(dt.AccountAddress),recipientId:hr(dt.AccountAddress,dt.ContractAddress,dt.Name),amount:_r,fee:Qr,ttl:jn,nonce:sn("senderId"),payload:kr(dt.Bytearray,!0)},{tag:gn(nr.NamePreclaimTx),version:gn(1,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),commitmentId:hr(dt.Commitment),fee:Qr,ttl:jn},{tag:gn(nr.NameClaimTx),version:gn(2,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),name:tn,nameSalt:Hn(0,Tr),nameFee:rn,fee:Qr,ttl:jn},{tag:gn(nr.NameUpdateTx),version:gn(1,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),nameId:an,nameTtl:Xn,pointers:mn(!1),clientTtl:Yn,fee:Qr,ttl:jn},{tag:gn(nr.NameUpdateTx),version:gn(2),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),nameId:an,nameTtl:Xn,pointers:mn(!0),clientTtl:Yn,fee:Qr,ttl:jn},{tag:gn(nr.NameTransferTx),version:gn(1,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),nameId:an,recipientId:hr(dt.AccountAddress,dt.Name),fee:Qr,ttl:jn},{tag:gn(nr.NameRevokeTx),version:gn(1,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),nameId:an,fee:Qr,ttl:jn},{tag:gn(nr.ContractCreateTx),version:gn(1,!0),ownerId:hr(dt.AccountAddress),nonce:sn("ownerId"),code:kr(dt.ContractBytearray),ctVersion:or,fee:Qr,ttl:jn,deposit:Gn(((e=0)=>{if(0===+e)return e;throw new k("deposit","equal 0 (because is not refundable)",e)}),_r),amount:_r,gasLimit:Xr,gasPrice:Dr,callData:kr(dt.ContractBytearray)},{tag:gn(nr.ContractCallTx),version:gn(1,!0),callerId:hr(dt.AccountAddress),nonce:sn("callerId"),contractId:hr(dt.ContractAddress,dt.Name),abiVersion:cr,fee:Qr,ttl:jn,amount:_r,gasLimit:Xr,gasPrice:Dr,callData:kr(dt.ContractBytearray)},{tag:gn(nr.OracleRegisterTx),version:gn(1,!0),accountId:hr(dt.AccountAddress),nonce:sn("accountId"),queryFormat:fn,responseFormat:fn,queryFee:_r,oracleTtlType:Hn(Ln.delta,Rr(Ln)),oracleTtlValue:Hn(500,Jr),fee:Qr,ttl:jn,abiVersion:cr},{tag:gn(nr.OracleExtendTx),version:gn(1,!0),oracleId:hr(dt.OracleAddress,dt.Name),nonce:sn("oracleId"),oracleTtlType:Hn(Ln.delta,Rr(Ln)),oracleTtlValue:Hn(500,Jr),fee:Qr,ttl:jn},{tag:gn(nr.OracleQueryTx),version:gn(1,!0),senderId:hr(dt.AccountAddress),nonce:sn("senderId"),oracleId:hr(dt.OracleAddress,dt.Name),query:fn,queryFee:pn,queryTtlType:Hn(Ln.delta,Rr(Ln)),queryTtlValue:Hn(10,Jr),responseTtlType:Hn(Ln.delta,Rr(Ln)),responseTtlValue:Hn(10,Jr),fee:Qr,ttl:jn},{tag:gn(nr.OracleResponseTx),version:gn(1,!0),oracleId:hr(dt.OracleAddress),nonce:sn("oracleId"),queryId:kr(dt.OracleQueryId),response:fn,responseTtlType:Hn(Ln.delta,Rr(Ln)),responseTtlValue:Hn(10,Jr),fee:Qr,ttl:jn},{tag:gn(nr.ChannelCreateTx),version:gn(2,!0),initiator:hr(dt.AccountAddress),initiatorAmount:Tr,responder:hr(dt.AccountAddress),responderAmount:Tr,channelReserve:Tr,lockPeriod:Tr,ttl:jn,fee:Qr,initiatorDelegateIds:yr(hr(...pr)),responderDelegateIds:yr(hr(...pr)),stateHash:kr(dt.State),nonce:sn("initiator")},{tag:gn(nr.ChannelCloseMutualTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),initiatorAmountFinal:Tr,responderAmountFinal:Tr,ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelCloseSoloTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),payload:kr(dt.Transaction),poi:Jn,ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelSlashTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),payload:kr(dt.Transaction),poi:Jn,ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelDepositTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),amount:Tr,ttl:jn,fee:Qr,stateHash:kr(dt.State),round:Jr,nonce:sn("fromId")},{tag:gn(nr.ChannelWithdrawTx),version:gn(1,!0),channelId:hr(dt.Channel),toId:hr(dt.AccountAddress),amount:Tr,ttl:jn,fee:Qr,stateHash:kr(dt.State),round:Jr,nonce:sn("fromId")},{tag:gn(nr.ChannelSettleTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),initiatorAmountFinal:Tr,responderAmountFinal:Tr,ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelForceProgressTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),payload:kr(dt.Transaction),round:Jr,update:kr(dt.ContractBytearray),stateHash:kr(dt.State),offChainTrees:kr(dt.StateTrees),ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelOffChainTx),version:gn(2,!0),channelId:hr(dt.Channel),round:Jr,stateHash:kr(dt.State)},{tag:gn(nr.ChannelSnapshotSoloTx),version:gn(1,!0),channelId:hr(dt.Channel),fromId:hr(dt.AccountAddress),payload:kr(dt.Transaction),ttl:jn,fee:Qr,nonce:sn("fromId")},{tag:gn(nr.ChannelClientReconnectTx),version:gn(1,!0),channelId:hr(dt.Channel),round:Jr,role:fn,pubkey:hr(dt.AccountAddress)},{tag:gn(nr.GaAttachTx),version:gn(1,!0),ownerId:hr(dt.AccountAddress),nonce:sn("ownerId"),code:kr(dt.ContractBytearray),authFun:yn,ctVersion:or,fee:Qr,ttl:jn,gasLimit:Xr,gasPrice:Dr,callData:kr(dt.ContractBytearray)},{tag:gn(nr.GaMetaTx),version:gn(2,!0),gaId:hr(dt.AccountAddress),authData:kr(dt.ContractBytearray),abiVersion:cr,fee:Qr,gasLimit:Xr,gasPrice:Dr,tx:Qn},{tag:gn(nr.PayingForTx),version:gn(1,!0),payerId:hr(dt.AccountAddress),nonce:sn("payerId"),fee:Qr,tx:Qn}];var ea=r(18212);const{decode:ta,encode:ra}=ea;function na(e,t,r,n){const a=e.filter((e=>e.tag.constValue===r));if(0===a.length)throw new fe(`${t[r]} (${r})`,0);if(null==n){const e=a.find((e=>e.version.constValueOptional));if(null==e)throw new D(`Can't find default schema of ${t[r]} (${r})`);n=e.version.constValue}const i=a.find((e=>e.version.constValue===n));if(null==i)throw new fe(`${t[r]} (${r})`,n);return Object.entries(i)}function aa(e,t,r,n,a){const i=na(e,t,r.tag,r.version),s=i.map((([e,t])=>t.serialize(r[e],{...r,...n},r)));return At(ra(s),a)}function ia(e,t,r,n,a){const i=ta(qt(r)),s=+wr(i[0]),o=+wr(i[1]),l=na(e,t,s,o);if(null!=n&&n!==s)throw new pe(`Expected ${t[n]} tag, got ${t[s]} instead`);if(i.length!==l.length)throw new k("RLP length",l.length,i.length);return Object.fromEntries(l.map((([e,t],r)=>[e,t.deserialize(i[r],a)])))}const{Buffer:sa}=Qe;var oa={serialize(e){return sa.from([e?1:0])},deserialize(e){return 1===e[0]}};function la(e,t){return{serialize(e,{packEntry:r}){return qt(r({tag:Wn.Mtree,values:Object.entries(e).map((([e,n])=>({tag:Wn.MtreeValue,key:qt(e),value:qt(r({...n,tag:t}))})))}))},deserialize(r,{unpackEntry:n}){const{values:a}=n(At(r,dt.Bytearray),Wn.Mtree);return Object.fromEntries(a.filter((({key:t})=>e!==dt.ContractAddress||32===t.length)).map((({key:r,value:a})=>[At(r,e),n(At(a,dt.Bytearray),t)])))},recursiveType:!0}}const{Buffer:ca}=Qe;var da;function ua(e,t){pa(e,t),t.add(e)}function ma(e,t,r){pa(e,t),t.set(e,r)}function pa(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ha(e,t,r){return e.set(ga(e,t),r),r}function ya(e,t){return e.get(ga(e,t))}function ga(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const{encode:fa}=ea;var Na=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}(Na||{}),Ca=new WeakMap,Sa=new WeakMap,wa=new WeakMap,za=new WeakMap,va=new WeakMap,ba=new WeakMap,Ta=new WeakSet;class xa{get isComplete(){return ya(Sa,this)}constructor(e,t,r,n){if(ua(this,Ta),ma(this,Ca,void 0),ma(this,Sa,!0),ma(this,wa,void 0),ma(this,za,void 0),ma(this,va,void 0),ma(this,ba,void 0),ha(za,this,t),ha(va,this,r),ha(ba,this,n),ha(Ca,this,e[0].toString("hex")),ha(wa,this,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=ya(wa,this)[ya(Ca,this)])Object.entries(ya(wa,this)).forEach((([e,t])=>{if(qa.call(xa,t)!==e)throw new oe;const{type:r}=Aa.call(xa,t);switch(r){case Na.Branch:t.slice(0,16).filter((e=>e.length)).forEach((e=>{null==ya(wa,this)[e.toString("hex")]&&ha(Sa,this,!1)}));break;case Na.Extension:if(null==ya(wa,this)[t[1].toString("hex")])throw new le("Can't find a node by hash in extension node");break;case Na.Leaf:break;default:throw new D(`Unknown MPTree node type: ${r}`)}}));else{if(0!==Object.keys(ya(wa,this)).length)throw new le("Can't find a node by root hash");ha(Sa,this,!1)}}isEqual(e){return ya(Ca,this)===ya(Ca,e)}serialize(){return[ca.from(ya(Ca,this),"hex"),Object.entries(ya(wa,this)).map((([e,t])=>[ca.from(e,"hex"),t]))]}get(e){const t=ga(Ta,this,Pa).call(this,qt(e).toString("hex"));return null==t?t:ya(ba,this).call(this,At(t,dt.Bytearray),ya(va,this))}toObject(){return Object.fromEntries(ga(Ta,this,_a).call(this).filter((([e])=>ya(za,this)!==dt.ContractAddress||66!==e.length)).map((([e,t])=>[At(ca.from(e,"hex"),ya(za,this)),ya(ba,this).call(this,At(t,dt.Bytearray),ya(va,this))])))}}function qa(e){return ca.from(Et(fa(e))).toString("hex")}function Aa(e){switch(e.length){case 17:return{type:Na.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new de(t);const r=t<=1?Na.Extension:Na.Leaf,n=[0,2].includes(t)?2:1;return{type:r,...r===Na.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(n)}}default:throw new ce(e.length)}}function Pa(e){let t=ya(Ca,this),r=e;while(1){const e=ya(wa,this)[t];if(null==e){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:n,value:a,path:i}=Aa.call(da,e);switch(n){case Na.Branch:if(0===r.length)return a;t=e[+`0x${r[0]}`].toString("hex"),r=r.substring(1);break;case Na.Extension:if(r.substring(0,null===i||void 0===i?void 0:i.length)!==i)return;t=e[1].toString("hex"),r=r.substring(i.length);break;case Na.Leaf:if(i!==r)return;return a;default:throw new D(`Unknown MPTree node type: ${n}`)}}}function _a(){const e=[],t=(r,n)=>{const a=ya(wa,this)[r];if(null==a){if(!this.isComplete)return;throw new D("Can't find node in complete tree")}const{type:i,value:s,path:o}=Aa.call(da,a);switch(i){case Na.Branch:a.slice(0,16).map(((e,t)=>[e,t])).filter((([e])=>e.length)).forEach((([e,r])=>t(e.toString("hex"),n+r.toString(16)))),null!=s&&e.push([n,s]);break;case Na.Extension:t(a[1].toString("hex"),n+o);break;case Na.Leaf:if(null==s)throw new F;e.push([n+o,s]);break;default:throw new D(`Unknown MPTree node type: ${i}`)}};return t(ya(Ca,this),""),e}function Ia(e,t){return{serialize(e){return e.serialize()},deserialize(r,{unpackEntry:n}){return new xa(r,e,t,n)}}}function ka(e){return{serialize(t,{packEntry:r}){return qt(r({tag:e,payload:t}))},deserialize(t,{unpackEntry:r}){return r(At(t,dt.Bytearray),e).payload},recursiveType:!0}}da=xa;const Ea=yr(Mr(Wn.MtreeValue)),Ma=la(dt.ContractAddress,Wn.Contract),Oa=la(dt.AccountAddress,Wn.Account),Ra=la(dt.Bytearray,Wn.ContractCall),Ba=la(dt.Channel,Wn.Channel),$a=la(dt.Name,Wn.Name),Da=la(dt.OracleAddress,Wn.Oracle),Fa=[{tag:gn(Wn.Account),version:gn(1),nonce:Jr,balance:Tr},{tag:gn(Wn.Account),version:gn(2,!0),flags:Tr,nonce:Jr,balance:Tr,gaContract:hr(dt.ContractAddress,dt.Name),gaAuthFun:kr(dt.ContractBytearray)},{tag:gn(Wn.Name),version:gn(1,!0),accountId:hr(dt.AccountAddress),nameTtl:Jr,status:yn,clientTtl:Jr,pointers:mn},{tag:gn(Wn.Contract),version:gn(1,!0),owner:hr(dt.AccountAddress),ctVersion:or,code:kr(dt.ContractBytearray),log:kr(dt.ContractBytearray),active:oa,referers:yr(hr(dt.AccountAddress)),deposit:_r},{tag:gn(Wn.ContractCall),version:gn(2,!0),callerId:hr(dt.AccountAddress),callerNonce:Jr,height:Jr,contractId:hr(dt.ContractAddress),gasPrice:Tr,gasUsed:Jr,returnValue:kr(dt.ContractBytearray),returnType:Rr(Un),log:yr(yn)},{tag:gn(Wn.Oracle),version:gn(1,!0),accountId:hr(dt.AccountAddress),queryFormat:fn,responseFormat:fn,queryFee:_r,oracleTtlValue:Jr,abiVersion:cr},{tag:gn(Wn.Channel),version:gn(3,!0),initiator:hr(dt.AccountAddress),responder:hr(dt.AccountAddress),channelAmount:Tr,initiatorAmount:Tr,responderAmount:Tr,channelReserve:Tr,initiatorDelegateIds:yr(hr(...pr)),responderDelegateIds:yr(hr(...pr)),stateHash:kr(dt.State),round:Jr,soloRound:Tr,lockPeriod:Tr,lockedUntil:Tr,initiatorAuth:kr(dt.ContractBytearray),responderAuth:kr(dt.ContractBytearray)},{tag:gn(Wn.ChannelOffChainUpdateTransfer),version:gn(1,!0),from:hr(dt.AccountAddress),to:hr(dt.AccountAddress),amount:Tr},{tag:gn(Wn.ChannelOffChainUpdateDeposit),version:gn(1,!0),from:hr(dt.AccountAddress),amount:Tr},{tag:gn(Wn.ChannelOffChainUpdateWithdraw),version:gn(1,!0),from:hr(dt.AccountAddress),amount:Tr},{tag:gn(Wn.ChannelOffChainUpdateCreateContract),version:gn(1,!0),owner:hr(dt.AccountAddress),ctVersion:or,code:kr(dt.ContractBytearray),deposit:Tr,callData:kr(dt.ContractBytearray)},{tag:gn(Wn.ChannelOffChainUpdateCallContract),version:gn(1,!0),caller:hr(dt.AccountAddress),contract:hr(dt.ContractAddress),abiVersion:cr,amount:Tr,callData:kr(dt.ContractBytearray),callStack:yn,gasPrice:Dr,gasLimit:Xr},{tag:gn(Wn.TreesPoi),version:gn(1,!0),accounts:yr(Ia(dt.AccountAddress,Wn.Account)),calls:yr(Ia(dt.Bytearray,Wn.ContractCall)),channels:yr(Ia(dt.Channel,Wn.Channel)),contracts:yr(Ia(dt.ContractAddress,Wn.Contract)),ns:yr(Ia(dt.Name,Wn.Name)),oracles:yr(Ia(dt.OracleAddress,Wn.Oracle))},{tag:gn(Wn.StateTrees),version:gn(0,!0),contracts:ka(Wn.ContractsMtree),calls:ka(Wn.CallsMtree),channels:ka(Wn.ChannelsMtree),ns:ka(Wn.NameserviceMtree),oracles:ka(Wn.OraclesMtree),accounts:ka(Wn.AccountsMtree)},{tag:gn(Wn.Mtree),version:gn(1,!0),values:Ea},{tag:gn(Wn.MtreeValue),version:gn(1,!0),key:yn,value:yn},{tag:gn(Wn.ContractsMtree),version:gn(1,!0),payload:Ma},{tag:gn(Wn.CallsMtree),version:gn(1,!0),payload:Ra},{tag:gn(Wn.ChannelsMtree),version:gn(1,!0),payload:Ba},{tag:gn(Wn.NameserviceMtree),version:gn(1,!0),payload:$a},{tag:gn(Wn.OraclesMtree),version:gn(1,!0),payload:Da},{tag:gn(Wn.AccountsMtree),version:gn(1,!0),payload:Oa},{tag:gn(Wn.GaMetaTxAuthData),version:gn(1,!0),fee:_r,gasPrice:Dr,txHash:kr(dt.TxHash)}],Va=[[Wn.CallsMtree,dt.CallStateTree],[Wn.StateTrees,dt.StateTrees],[Wn.TreesPoi,dt.Poi]];function ja(e){var t,r;const n=null!==(t=null===(r=Va.find((([t])=>t===e.tag)))||void 0===r?void 0:r[1])&&void 0!==t?t:dt.Bytearray;return aa(Fa,Wn,e,{packEntry:ja},n)}function Ha(e,t){var r,n;return null!==(r=t)&&void 0!==r||(t=null===(n=Va.find((([,t])=>e.startsWith(t))))||void 0===n?void 0:n[0]),ia(Fa,Wn,e,t,{unpackEntry:Ha})}function Ga(e,t){return na(Zn,nr,e,t)}function Ua(e){return aa(Zn,nr,e,{unpackTx:La,buildTx:Ua,rebuildTx:t=>Ua({...e,...t}),packEntry:ja},dt.Transaction)}async function Wa(e){return await Promise.all(Ga(e.tag,e.version).map((async([t,r])=>{null!=r.prepare&&(e[t]=await r.prepare(e[t],e,e))}))),Ua(e)}function La(e,t){return ia(Zn,nr,e,t,{unpackTx:La,unpackEntry:Ha})}function Ka(e){const t="string"===typeof e&&e.startsWith("tx_")?qt(e):e;return At(Et(t),dt.TxHash)}function Qa(e){let t=La(e);if(nr.SignedTx===t.tag&&(t=t.encodedTx),nr.ContractCreateTx!==t.tag&&nr.GaAttachTx!==t.tag)throw new k("contractTx","a contractCreateTx or gaAttach",t.tag);return fr(t.ownerId,t.nonce)}const{Buffer:Ja}=Qe,Ya=new WeakMap;function Xa(e,t,r){const n=[t];r&&n.push("inner_tx");const a=qt(e);return it([Ja.from(n.join("-")),Et(a)])}class Za extends Ye{constructor(e){super();const t=Je.sign.keyPair.fromSeed(qt(e));Ya.set(this,t.secretKey),this.address=At(t.publicKey,dt.AccountAddress)}static generate(){return new Za(Mt().secretKey)}async sign(e,t){const r=Ya.get(this);if(null==r)throw new F;return Ot(e,r)}async signTransaction(e,{innerTx:t,networkId:r,...n}={}){if(null==r)throw new k("networkId","provided",r);const a=qt(e),i=Xa(e,r,!0===t),s=[await this.sign(i,n)];return Ua({tag:nr.SignedTx,encodedTx:a,signatures:s})}async signMessage(e,t){return this.sign(Dt(e),t)}async signTypedData(e,t,{name:r,version:n,networkId:a,contractAddress:i,...s}={}){const o=Wt(e,t,{name:r,version:n,networkId:a,contractAddress:i}),l=await this.sign(o,s);return At(l,dt.Signature)}async signDelegation(e,{networkId:t}={}){if(null==t)throw new k("networkId","provided",t);const r=it([$t,new Uint8Array([1]),Ja.from(t),qt(e)]),n=await this.sign(r);return At(n,dt.Signature)}}let ei=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const ti=hr(dt.OracleAddress),ri={serialize(e){return ti.serialize(At(qt(e),dt.OracleAddress))},deserialize(e){return At(qt(ti.deserialize(e)),dt.OracleQueryId)}},ni=hr(dt.ContractAddress),ai=[{tag:gn(ei.AensWildcard),version:gn(1,!0),accountAddress:hr(dt.AccountAddress),contractAddress:ni},{tag:gn(ei.AensName),version:gn(1,!0),accountAddress:hr(dt.AccountAddress),nameId:an,contractAddress:ni},{tag:gn(ei.AensPreclaim),version:gn(1,!0),accountAddress:hr(dt.AccountAddress),contractAddress:ni},{tag:gn(ei.Oracle),version:gn(1,!0),accountAddress:hr(dt.AccountAddress),contractAddress:ni},{tag:gn(ei.OracleResponse),version:gn(1,!0),queryId:ri,contractAddress:ni}];function ii(e,t){return ia(ai,ei,e,t,{})}var si=r(79562);function oi(e,t){const r=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),n=r(e),a=r(t),i=Math.max(...n,...a)+1,s=e=>e.reverse().reduce(((e,t,r)=>e+t*i**r),0);return s(n)-s(a)}function li(e,t,r){return oi(e,t)>=0&&(null==r||oi(e,r)<0)}const ci=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,r){var n;const a=t.headers.get("__queue");t.headers.delete("__queue");const i=async()=>r(t);if(null==a)return i();const s=(null!==(n=e.get(a))&&void 0!==n?n:Promise.resolve()).then(i);return e.set(a,s.catch((()=>{}))),s}},position:"perCall"}},di=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,r){var n;if("GET"!==t.method)return r(t);const a=JSON.stringify([t.url,t.body]),i=null!==(n=e.get(a))&&void 0!==n?n:r(t);e.set(a,i);try{return await i}finally{e.delete(a)}}},position:"perCall"}},ui=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,r){var n;if("GET"!==t.method)return r(t);const a=JSON.stringify([t.url,t.body]),i=null!==(n=e.get(a))&&void 0!==n?n:r(t);return e.set(a,i),i}},position:"perCall"}},mi=e=>({policy:{name:"error-formatter",async sendRequest(t,r){try{return await r(t)}catch(a){var n;if(!(a instanceof et.pj)||null==a.request)throw a;const t=`${new URL(a.request.url).pathname.slice(1)} error`;if(null==(null===(n=a.response)||void 0===n?void 0:n.bodyAsText))throw""===a.message&&(a.message=`${t}: ${a.code}`),a;const r=a.response.parsedBody;a.message=t;const i=null==r?` ${a.response.status} status code`:e(r);throw""!==i&&(a.message+=`:${i}`),a}}},position:"perCall"}),pi=(e,t,r,n)=>({policy:{name:"version-check",async sendRequest(a,i){if(a.headers.has("__version-check"))return a.headers.delete("__version-check"),i(a);const s={requestOptions:{customHeaders:{"__version-check":"true"}}},o=[await t(s),r,n];if(!li(...o))throw new $(e,...o);return i(a)}},position:"perCall"}),hi=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(r,n){var a;const i=null!==(a=r.headers.get("__retry-code"))&&void 0!==a?a:NaN;r.headers.delete("__retry-code");const s=[200,400,403,410,500].filter((e=>e!==+i)),o=new Array(e).fill(0).map(((t,r)=>((r+1)/e)**2)),l=o.reduce(((e,t)=>e+t),0),c=o.map((e=>Math.floor(e/l*t)));let d=new et.pj("Not expected to be thrown");for(let t=0;t<=e;t+=1){if(0!==t){await rt(c[t-1]);const e=new URL(r.url);e.searchParams.set("__sdk-retry",t.toString()),r.url=e.toString()}try{return await n(r)}catch(p){var u,m;if(!(p instanceof et.pj))throw p;if(s.includes(null!==(u=null===(m=p.response)||void 0===m?void 0:m.status)&&void 0!==u?u:0))throw p;d=p}}throw d}},position:"perCall"});var yi=r(28784);const gi={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{serializedName:"balance",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},fi={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}},errorCode:{serializedName:"error_code",type:{name:"String"}}}}},Ni={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{serializedName:"next_nonce",required:!0,type:{name:"String"}}}}},Ci={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},Si={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{serializedName:"block_height",required:!0,type:{name:"String"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},encodedTx:{serializedName:"encoded_tx",type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},wi={type:{name:"Composite",className:"Tx",modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",type:{name:"String"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{serializedName:"responder_amount",type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",type:{name:"String"}},lockPeriod:{serializedName:"lock_period",type:{name:"String"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{serializedName:"round",type:{name:"String"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",type:{name:"String"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{serializedName:"query_fee",type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{serializedName:"name_salt",type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{serializedName:"name_ttl",type:{name:"String"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",type:{name:"String"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{serializedName:"vm_version",type:{name:"String"}},deposit:{serializedName:"deposit",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},gasPrice:{serializedName:"gas_price",type:{name:"String"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},zi={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},vi={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},bi={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},Ti={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},xi={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},encodedKey:{serializedName:"encoded_key",type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},qi={type:{name:"Composite",className:"AuctionEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},startedAt:{serializedName:"started_at",type:{name:"String"}},endsAt:{serializedName:"ends_at",required:!0,type:{name:"String"}},highestBidder:{serializedName:"highest_bidder",required:!0,type:{name:"String"}},highestBid:{serializedName:"highest_bid",required:!0,type:{name:"String"}}}}},Ai={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{serializedName:"channel_amount",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},soloRound:{serializedName:"solo_round",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},lockedUntil:{serializedName:"locked_until",required:!0,type:{name:"String"}}}}},Pi={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}}}}},_i={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ii={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},ki={type:{name:"Composite",className:"Currency",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},symbol:{serializedName:"symbol",required:!0,type:{name:"String"}},subunit:{serializedName:"subunit",required:!0,type:{name:"String"}},subunitsPerUnit:{serializedName:"subunits_per_unit",required:!0,type:{name:"String"}},fiatConverstionUrl:{serializedName:"fiat_converstion_url",type:{name:"String"}},fiatConversionUrl:{serializedName:"fiat_conversion_url",type:{name:"String"}},logo:{serializedName:"logo",type:{name:"Composite",className:"Image"}},primaryColour:{serializedName:"primary_colour",required:!0,type:{name:"String"}},secondaryColour:{serializedName:"secondary_colour",required:!0,type:{name:"String"}},networkName:{serializedName:"network_name",required:!0,type:{name:"String"}}}}},Ei={type:{name:"Composite",className:"Image",modelProperties:{type:{serializedName:"type",type:{name:"String"}},data:{serializedName:"data",type:{name:"String"}}}}},Mi={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},Oi={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Ri={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},Bi={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},$i={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},Di={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Fi={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},Vi={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{serializedName:"caller_nonce",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},ji={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},Hi={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Gi={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{serializedName:"target",required:!0,type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},Ui={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Wi={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},Li={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{serializedName:"height",required:!0,type:{name:"String"}}}}},Ki={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}}}}},Qi={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{serializedName:"count",required:!0,type:{name:"String"}}}}},Ji={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},Yi={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}}}}},Xi={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},Zi={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{serializedName:"sender_nonce",required:!0,type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}}}}},es={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},ts={type:{name:"Composite",className:"GasPricesItem",modelProperties:{minGasPrice:{serializedName:"min_gas_price",required:!0,type:{name:"String"}},utilization:{serializedName:"utilization",required:!0,type:{name:"String"}},minutes:{serializedName:"minutes",required:!0,type:{name:"String"}}}}},rs={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{serializedName:"solutions",required:!0,type:{name:"String"}},difficulty:{serializedName:"difficulty",required:!0,type:{name:"String"}},hashrate:{serializedName:"hashrate",required:!0,type:{name:"String"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},uptime:{serializedName:"uptime",required:!0,type:{name:"String"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{serializedName:"peer_count",required:!0,type:{name:"String"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{serializedName:"pending_transactions_count",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{serializedName:"top_block_height",required:!0,type:{name:"String"}}}}},ns={type:{name:"Composite",className:"Protocol",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}},effectiveAtHeight:{serializedName:"effective_at_height",required:!0,type:{name:"String"}}}}},as={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{serializedName:"inbound",required:!0,type:{name:"String"}},outbound:{serializedName:"outbound",required:!0,type:{name:"String"}}}}},is={type:{name:"Composite",className:"SyncStatus",modelProperties:{progress:{serializedName:"progress",required:!0,type:{name:"Number"}},target:{serializedName:"target",required:!0,type:{name:"String"}},speed:{serializedName:"speed",required:!0,type:{name:"Number"}},estimate:{serializedName:"estimate",required:!0,type:{name:"String"}}}}},ss={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},os={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},ls={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},cs={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},ds={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},us={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},ms={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},ps={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},hs={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},ys={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},gs={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},fs={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ns={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Cs={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},Ss={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},ws={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},zs={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},vs={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},bs={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},Ts={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},xs={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},qs={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{serializedName:"name_salt",required:!0,type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},As={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},Ps={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},_s={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Is={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},ks={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{serializedName:"name_ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Es={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{serializedName:"port",required:!0,type:{name:"String"}},firstSeen:{serializedName:"first_seen",required:!0,type:{name:"String"}},lastSeen:{serializedName:"last_seen",required:!0,type:{name:"String"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{serializedName:"top_difficulty",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},Ms={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{serializedName:"fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}}}}},Os={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Rs={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}}}}},Bs={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},$s={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Ds={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{serializedName:"blocked",required:!0,type:{name:"String"}}}}},Fs={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{serializedName:"inbound",type:{name:"String"}},outbound:{serializedName:"outbound",type:{name:"String"}}}}},Vs={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{serializedName:"verified",type:{name:"String"}},unverified:{serializedName:"unverified",type:{name:"String"}}}}},js={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Hs={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},Gs={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},Us={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{serializedName:"accounts",type:{name:"String"}},contracts:{serializedName:"contracts",type:{name:"String"}},contractOracles:{serializedName:"contract_oracles",type:{name:"String"}},locked:{serializedName:"locked",type:{name:"String"}},oracles:{serializedName:"oracles",type:{name:"String"}},oracleQueries:{serializedName:"oracle_queries",type:{name:"String"}},pendingRewards:{serializedName:"pending_rewards",type:{name:"String"}},total:{serializedName:"total",type:{name:"String"}}}}},Ws={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:vi.type.polymorphicDiscriminator,modelProperties:{...vi.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ls={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:vi.type.polymorphicDiscriminator,modelProperties:{...vi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Ks={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:vi.type.polymorphicDiscriminator,modelProperties:{...vi.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Qs={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:vi.type.polymorphicDiscriminator,modelProperties:{...vi.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Js={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:vi.type.polymorphicDiscriminator,modelProperties:{...vi.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},Ys={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...bs.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let Xs={OffChainUpdate:vi,"OffChainUpdate.OffChainCallContract":Ws,"OffChainUpdate.OffChainDeposit":Ls,"OffChainUpdate.OffChainNewContract":Ks,"OffChainUpdate.OffChainTransfer":Qs,"OffChainUpdate.OffChainWithdrawal":Js};const Zs={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},eo={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},to={parameterPath:"intAsString",mapper:{defaultValue:!1,serializedName:"int-as-string",type:{name:"Boolean"}}},ro={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},no={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},ao={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},io={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},so={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},oo={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},lo={parameterPath:"body",mapper:Mi},co={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},uo={parameterPath:"nameHash",mapper:{serializedName:"name_hash",required:!0,type:{name:"String"}}},mo={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},po={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},ho={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},yo={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},go={parameterPath:"body",mapper:ss};class fo extends yi.Nl{constructor(e,t){var r,n;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(r=null!==(n=t.endpoint)&&void 0!==n?n:t.baseUri)&&void 0!==r?r:"{$host}"};super(o),this.$host=e}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Co)}getAccountByPubkeyAndHash(e,t,r){return this.sendOperationRequest({pubkey:e,hash:t,options:r},So)}getAccountByPubkeyAndHeight(e,t,r){return this.sendOperationRequest({pubkey:e,height:t,options:r},wo)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},zo)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},vo)}getAuctionEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},bo)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},To)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},xo)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},qo)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ao)}getCurrency(e){return this.sendOperationRequest({options:e},Po)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},_o)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},Io)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ko)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Eo)}getTopHeader(e){return this.sendOperationRequest({options:e},Mo)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},Oo)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},Ro)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},Bo)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},$o)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Do)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},Fo)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Vo)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},jo)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Ho)}getMicroBlockTransactionByHashAndIndex(e,t,r){return this.sendOperationRequest({hash:e,index:t,options:r},Go)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},Uo)}getNameEntryByNameHash(e,t){return this.sendOperationRequest({nameHash:e,options:t},Wo)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Lo)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ko)}getOracleQueryByPubkeyAndQueryId(e,t,r){return this.sendOperationRequest({pubkey:e,queryId:t,options:r},Qo)}getPeerPubkey(e){return this.sendOperationRequest({options:e},Jo)}getRecentGasPrices(e){return this.sendOperationRequest({options:e},Yo)}getStatus(e){return this.sendOperationRequest({options:e},Xo)}getChainEnds(e){return this.sendOperationRequest({options:e},Zo)}getSyncStatus(e){return this.sendOperationRequest({options:e},el)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},tl)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},rl)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},nl)}}const No=yi.rl(a,!1),Co={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:gi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},So={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:gi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro,no],headerParameters:[Zs],serializer:No},wo={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:gi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0},410:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro,ao],headerParameters:[Zs],serializer:No},zo={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:Ni},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to,io],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},vo={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:Ci},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},bo={path:"/v3/auctions/{name}",httpMethod:"GET",responses:{200:{bodyMapper:qi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,so],headerParameters:[Zs],serializer:No},To={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Ai},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},xo={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Pi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},qo={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:_i},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},Ao={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:Ii},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},Po={path:"/v3/currency",httpMethod:"GET",responses:{200:{bodyMapper:ki}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},_o={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:Di},400:{bodyMapper:fi,isError:!0},403:{bodyMapper:fi,isError:!0}},requestBody:lo,queryParameters:[to],urlParameters:[eo],headerParameters:[Zs,oo],mediaType:"json",serializer:No},Io={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:Hi},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},ko={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Hi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},Eo={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Hi},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ao],headerParameters:[Zs],serializer:No},Mo={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:Ui},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Oo={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:Gi},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Ro={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Wi},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Bo={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:Li},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},$o={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Gi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},Do={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Gi},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ao],headerParameters:[Zs],serializer:No},Fo={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:Gi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Vo={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:Ki},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},jo={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:Ci},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},Ho={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:Qi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},Go={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:Si},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no,co],headerParameters:[Zs],serializer:No},Uo={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:Ji},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,so],headerParameters:[Zs],serializer:No},Wo={path:"/v3/names/hash/{name_hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ji},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,uo],headerParameters:[Zs],serializer:No},Lo={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Yi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},Ko={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:Xi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to,mo,po,ho],urlParameters:[eo,ro],headerParameters:[Zs],serializer:No},Qo={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:Zi},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,ro,yo],headerParameters:[Zs],serializer:No},Jo={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:es}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Yo={path:"/v3/recent-gas-prices",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"GasPricesItem"}}}}},400:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Xo={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:rs}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},Zo={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},queryParameters:[to],urlParameters:[eo],headerParameters:[Zs],serializer:No},el={path:"/v3/sync-status",httpMethod:"GET",responses:{200:{bodyMapper:is},404:{bodyMapper:fi,isError:!0}},urlParameters:[eo],headerParameters:[Zs],serializer:No},tl={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:os},400:{bodyMapper:fi,isError:!0}},requestBody:go,queryParameters:[to],urlParameters:[eo],headerParameters:[Zs,oo],mediaType:"json",serializer:No},rl={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Si},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No},nl={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:ls},400:{bodyMapper:fi,isError:!0},404:{bodyMapper:fi,isError:!0},410:{bodyMapper:fi,isError:!0}},queryParameters:[to],urlParameters:[eo,no],headerParameters:[Zs],serializer:No};function al(e,t,r){ll(e,t),t.set(e,r)}function il(e,t,r){return e.set(cl(e,t),r),r}function sl(e,t){return e.get(cl(e,t))}function ol(e,t){ll(e,t),t.add(e)}function ll(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function cl(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const dl=["balance","queryFee","fee","amount","nameFee","channelAmount","initiatorAmount","responderAmount","channelReserve","initiatorAmountFinal","responderAmountFinal","gasPrice","minGasPrice","deposit"],ul=["time","gas","gasUsed","nameSalt","nonce","nextNonce","height","blockHeight","topBlockHeight","ttl","nameTtl","clientTtl","inbound","outbound","peerCount","pendingTransactionsCount","effectiveAtHeight","version","solutions","round","minutes","utilization","difficulty","hashrate"];var ml=new WeakSet;class pl extends fo{constructor(...e){super(...e),ol(this,ml)}async sendOperationRequest(e,t){const r=nt(e,(([e,t])=>[e,cl(ml,this,yl).call(this,t)]));return cl(ml,this,gl).call(this,await super.sendOperationRequest(r,t))}}function hl(e,t){return Array.isArray(e)?e.map((e=>cl(ml,this,hl).call(this,e,t))):null!=e&&"object"===typeof e?nt(e,(([e,r])=>null==r?[e,r]:dl.some((t=>t===e))?[e,t.bigInt(r)]:ul.some((t=>t===e))?[e,t.number(r)]:[e,cl(ml,this,hl).call(this,r,t)])):e}function yl(e){return cl(ml,this,hl).call(this,e,{bigInt:e=>e instanceof Lt.A?e.toFixed():e.toString(),number:e=>e.toString()})}function gl(e){return cl(ml,this,hl).call(this,e,{bigInt:e=>BigInt(e),number:e=>+e})}var fl=new WeakMap;class Nl extends pl{constructor(e,{ignoreVersion:t=!1,retryCount:r=3,retryOverallDelay:n=800,...a}={}){const i=async e=>(await this._getCachedStatus(e)).nodeVersion;super(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[pi("node",i,"7.1.0","8.0.0")],ci(),di(),hi(r,n),mi((e=>[" ",e.reason,null==e.errorCode?"":` (${e.errorCode})`].join("")))],...a}),al(this,fl,void 0),this.pipeline.removePolicy({name:et.OD}),this.pipeline.removePolicy({name:et.PR}),this.pipeline.removePolicy({name:"defaultRetryPolicy"}),this.intAsString=!0}async _getCachedStatus(e){return null!=sl(fl,this)?sl(fl,this):this.getStatus(e)}async getStatus(...e){const t=super.getStatus(...e);return t.then((()=>{il(fl,this,t)}),(()=>{})),t}async getNetworkId(){return(await this._getCachedStatus()).networkId}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:r,topBlockHeight:n}=await this.getStatus(),a=r.filter((({effectiveAtHeight:e})=>n>=e)).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==er[a]){const e=a.toString(),t=Object.values(er).filter((e=>"number"===typeof e)).map((e=>+e)),r=Math.min(...t).toString(),n=(Math.max(...t)+1).toString();throw new $("consensus protocol",e,r,n)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:a}}}function Cl(e){var t;const r=La(e);switch(r.tag){case nr.SignedTx:return Cl(Ua(r.encodedTx));case nr.GaMetaTx:return r.gaId;default:}const n=null===(t=Ga(r.tag,r.version).find((([e])=>"nonce"===e)))||void 0===t?void 0:t[1];if(null==n)throw new _(`Transaction doesn't have nonce: ${nr[r.tag]}`);if(!("senderKey"in n))throw new F;const a=r[n.senderKey];return a.replace(/^ok_/,"ak_")}function Sl(e,{innerTx:t,gasUsed:r,queryFee:n,isInitiator:a}={}){const i=La(e);if(i.tag===nr.SignedTx)throw new E("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in i&&"freeloader"!==t&&(s+=BigInt(i.fee)),i.tag===nr.NameClaimTx&&(s+=BigInt(i.nameFee)),i.tag===nr.OracleQueryTx&&(s+=BigInt(i.queryFee)),i.tag===nr.OracleResponseTx&&(s-=BigInt(null!==n&&void 0!==n?n:0)),i.tag===nr.ChannelSettleTx&&(!0===a&&(s-=BigInt(i.initiatorAmountFinal)),!1===a&&(s-=BigInt(i.responderAmountFinal))),(i.tag===nr.SpendTx&&i.senderId!==i.recipientId||i.tag===nr.ContractCreateTx||i.tag===nr.ContractCallTx||i.tag===nr.ChannelDepositTx)&&"fee-payer"!==t&&(s+=BigInt(i.amount)),i.tag===nr.ContractCreateTx&&(s+=BigInt(i.deposit)),i.tag!==nr.ContractCreateTx&&i.tag!==nr.ContractCallTx&&i.tag!==nr.GaAttachTx&&i.tag!==nr.GaMetaTx||"freeloader"===t||(s+=BigInt(i.gasPrice)*BigInt(null!==r&&void 0!==r?r:i.gasLimit)),i.tag!==nr.GaMetaTx&&i.tag!==nr.PayingForTx||(s+=Sl(Ua(i.tx.encodedTx),i.tag===nr.PayingForTx?{innerTx:"fee-payer"}:{})),s}function wl(e,t,r){const n=La(e,nr.SignedTx);if(n.encodedTx.tag===nr.GaMetaTx)return Sl(Ua(n.encodedTx),r);const a=Ua(n.encodedTx),i=Cl(a),[s,o]=[!0,!1].map((e=>Rt(Xa(a,t,e),n.signatures[0],i)));if(!s&&!o)throw new _("Can't verify signature");return Sl(Ua(n.encodedTx),{...s&&{innerTx:"freeloader"},...r})}async function zl(e,t,{isMined:r,...n}={}){let a=La(e);const i=a.tag===nr.SignedTx,s=i&&!0===r&&Ka(e);if(a.tag===nr.SignedTx&&(a=a.encodedTx),null==n.gasUsed&&!1!==s&&[nr.ContractCreateTx,nr.ContractCallTx,nr.GaAttachTx,nr.GaMetaTx].includes(a.tag)){const{callInfo:e,gaInfo:r}=await t.getTransactionInfoByHash(s),a=null!==e&&void 0!==e?e:r;if(null==a)throw new D(`callInfo and gaInfo is not available for transaction ${s}`);n.gasUsed=a.gasUsed}if(null==n.queryFee&&nr.OracleResponseTx===a.tag&&(n.queryFee=(await t.getOracleByPubkey(a.oracleId)).queryFee.toString()),null==n.isInitiator&&nr.ChannelSettleTx===a.tag&&!0!==r){const{initiatorId:e}=await t.getChannelByPubkey(a.channelId);n.isInitiator=a.fromId===e}return i?wl(e,await t.getNetworkId(),n):Sl(e,n)}const{Buffer:vl}=Qe,bl=[];async function Tl(e,t,r){const n=Cl(Ua(e)),[a,{height:i},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(n).catch((e=>{if(!lt(e))throw e;return{id:n,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(bl.map((async n=>n(e,{node:t,account:a,height:i,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:r}))))).flat()}async function xl(e,t){const r=new Nl(t.$host,{ignoreVersion:!0,pipeline:t.pipeline.clone(),additionalPolicies:[ui()]});return Tl(La(e),r,[])}bl.push(((e,{account:t,nodeNetworkId:r,parentTxTypes:n})=>{if(e.tag!==nr.SignedTx)return[];const{encodedTx:a,signatures:i}=e;if(null==(null!==a&&void 0!==a?a:i))return[];if(1!==i.length)return[];const s=vl.from([r,...n.includes(nr.PayingForTx)?["inner_tx"]:[]].join("-")),o=qt(Ua(a)),l=it([s,o]),c=it([s,Et(o)]);return Rt(l,i[0],t.id)||Rt(c,i[0],t.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,{node:t,parentTxTypes:r})=>{let n;return"encodedTx"in e&&(n=e.encodedTx),"tx"in e&&(n=e.tx),null==n?[]:Tl(n,t,[...r,e.tag])}),((e,{height:t})=>"ttl"in e?0===e.ttl||e.ttl>t?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${t}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]),(async(e,{account:t,parentTxTypes:r,node:n})=>{if(0!==r.length)return[];const a=await zl(Ua(e),n).catch((()=>0n));return a<=t.balance?[]:[{message:`Account balance ${t.balance} is not enough to execute the transaction that costs ${a}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),(async(e,{node:t})=>{if(e.tag!==nr.SpendTx||kt(e.recipientId,dt.Name))return[];const r=await t.getAccountByPubkey(e.recipientId).catch((e=>{if(!lt(e))throw e;return null}));return null==r||!0===r.payable?[]:[{message:"Recipient account is not payable",key:"RecipientAccountNotPayable",checkedKeys:["recipientId"]}]}),((e,{account:t})=>{let r;return e.tag===nr.SignedTx&&"generalized"===t.kind&&0!==e.signatures.length&&(r="Generalized account can't be used to generate SignedTx with signatures"),e.tag===nr.GaMetaTx&&"basic"===t.kind&&(r="Basic account can't be used to generate GaMetaTx"),null==r?[]:[{message:r,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,{consensusProtocolVersion:t})=>{var r,n;const a=nr.OracleRegisterTx===e.tag,i=nr.ContractCreateTx===e.tag||nr.GaAttachTx===e.tag,s=nr.ContractCallTx===e.tag||nr.GaMetaTx===e.tag,o=null!==(r=null!==(n=a?"oracle-call":null)&&void 0!==n?n:i?"contract-create":null)&&void 0!==r?r:s?"contract-call":null;if(null==o)return[];const l=ir[t][o];let c;if("abiVersion"in e&&(c={abiVersion:e.abiVersion}),"ctVersion"in e&&(c=e.ctVersion),null==c)throw new F;return!l.abiVersion.includes(c.abiVersion)||i&&!l.vmVersion.includes(c.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(c)} is wrong, supported is: ${JSON.stringify(l)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,{node:t})=>{if(nr.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:r}=await t.getContract(e.contractId);return r?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(n){var r;if(!(n instanceof et.pj)||null==(null===(r=n.response)||void 0===r?void 0:r.bodyAsText))throw n;return[{message:JSON.parse(n.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}));class ql extends _{constructor(e,t,r){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=r}}async function Al(e,{onNode:t,onAccount:r,verify:n=!0,waitMined:a=!0,confirm:i,innerTx:s,...o}){const l=await r.signTransaction(e,{...o,onNode:t,innerTx:s,networkId:await t.getNetworkId()});if(!0===s)return{hash:Ka(l),rawTx:l};if(n){const e=await xl(l,t);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new ql(t,e,l)}}try{let e;try{e=null!=r?`tx-${r.address}`:null}catch(c){e=null}const{txHash:n}=await t.postTransaction({tx:l},{requestOptions:{customHeaders:{"__retry-code":"400",...null!=e?{__queue:e}:{}}}});if(a){const e=await Tn(n,{onNode:t,...o}),r={...e,hash:e.hash,rawTx:l};if(null!=i&&+i>0){const e="boolean"===typeof i?void 0:i;return{...r,confirmationHeight:await qn(n,{onNode:t,confirm:e,...o})}}return r}return{hash:n,rawTx:l}}catch(c){throw ct(c),Object.assign(c,{rawTx:l,verifyTx:async()=>xl(l,t)})}}async function Pl(e,t,r){return Al(await Wa({_isInternalBuild:!0,...r,tag:nr.SpendTx,senderId:r.onAccount.address,recipientId:await Vn(t,"account_pubkey",r),amount:e}),r)}async function _l(e,t,r){if(+e<0||+e>1)throw new k("fraction","a number between 0 and 1",e);const n=await Vn(t,"account_pubkey",r),a=r.onAccount.address,i=new Lt.A(await Pn.bind(r.onAccount)(a,r)),s=i.times(e).integerValue(Lt.A.ROUND_HALF_UP),{fee:o}=La(await Wa({_isInternalBuild:!0,...r,tag:nr.SpendTx,senderId:a,recipientId:n,amount:s}),nr.SpendTx),l=s.plus(o).gt(i)?i.minus(o):s;return Al(await Wa({_isInternalBuild:!0,...r,tag:nr.SpendTx,senderId:a,recipientId:n,amount:l}),r)}async function Il(e,t){return Al(await Wa({_isInternalBuild:!0,...t,tag:nr.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}function kl(e,t,r){Ml(e,t),t.set(e,r)}function El(e,t){Ml(e,t),t.add(e)}function Ml(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ol(e,t,r){return e.set(Bl(e,t),r),r}function Rl(e,t){return e.get(Bl(e,t))}function Bl(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const{Encoder:$l}=Ft;var Dl=new WeakSet,Fl=new WeakMap;class Vl{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new E("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new E("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,r){const{callInfo:n}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==n)throw new q(`callInfo is not available for transaction ${e}`);const a=n;return{...Bl(Dl,this,jl).call(this,a,t,void 0,r),result:a}}async _estimateGas(e,t,r={}){const{result:n}=await this.$call(e,t,{...r,callStatic:!0});if(null==n)throw new F;const{gasUsed:a}=n;return Math.floor(1.25*a)}async $deploy(e,t){var r,n;const{callStatic:a,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===a)return this.$call("init",e,{...i,callStatic:a});if(null!=this.$options.address)throw new Q;if(null==i.onAccount)throw new E("Can't deploy without account");const s=i.onAccount.address;if(null==this.$options.bytecode)throw new E("Can't deploy without bytecode");const o=await Wa({_isInternalBuild:!0,...i,tag:nr.ContractCreateTx,gasLimit:null!==(r=i.gasLimit)&&void 0!==r?r:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:s}),{hash:l,...c}=await Bl(Dl,this,Hl).call(this,o,"init",{...i,onAccount:i.onAccount});return this.$options.address=Qa(c.rawTx),{...c,...null!=(null===(n=c.result)||void 0===n?void 0:n.log)&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:s,transaction:l,address:this.$options.address}}async $call(e,t,r={}){var n;const{callStatic:a,top:i,...s}={...this.$options,...r},o=Bl(Dl,this,Gl).call(this,e),{address:l,name:c}=this.$options,d=null!=c?Sr(c):l,{onNode:u}=s;if(null==e)throw new ee;if("init"===e&&!0!==a)throw new Y('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&Number(s.amount)>0&&!o.payable)throw new ne(s.amount,e);let m;try{if(null==s.onAccount)throw new D("Use fallback account");m=s.onAccount.address}catch(y){const e=!0===a&&(y instanceof R&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof we||y instanceof D&&"Use fallback account"===y.message);if(!e)throw y;m=Kt.pub}const p=this._calldata.encode(this._name,e,t);if(!0===a){if(null==s.nonce){const e=null!=i&&{["number"===typeof i?"height":"hash"]:i},t=await An(m,{...e,onNode:u}).catch((e=>{if(!lt(e))throw e;return{kind:"basic",nonce:0}}));s.nonce="generalized"===t.kind?0:t.nonce+1}const t={...s,onNode:u,callData:p};let r;if("init"===e){if(null==this.$options.bytecode)throw new E('Can\'t dry-run "init" without bytecode');r=await Wa({...t,tag:nr.ContractCreateTx,code:this.$options.bytecode,ownerId:m})}else{if(null==d)throw new X("Can't dry-run contract without address");r=await Wa({...t,tag:nr.ContractCallTx,callerId:m,contractId:d})}const{callObj:n,...a}=await Bn(r,m,{...s,top:i});if(null==n)throw new D(`callObj is not available for transaction ${r}`);const o=n;return{...a,...Bl(Dl,this,jl).call(this,o,e,r,s),tx:La(r),result:o,rawTx:r,hash:Ka(r),txData:void 0}}if(null!=i)throw new E("Can't handle `top` option in on-chain contract call");if(null==d)throw new X("Can't call contract without address");const h=await Wa({_isInternalBuild:!0,...s,tag:nr.ContractCallTx,gasLimit:null!==(n=s.gasLimit)&&void 0!==n?n:await this._estimateGas(e,t,s),callerId:m,contractId:d,callData:p});if(null==s.onAccount)throw new E("Can't call contract on chain without account");return Bl(Dl,this,Hl).call(this,h,e,{...s,onAccount:s.onAccount})}$decodeEvents(e,{omitUnknown:t,...r}={}){return e.map((e=>{const n=e.topics.map((e=>BigInt(e)));let a;try{a=Bl(Dl,this,Ul).call(this,e.address,n[0],r)}catch(l){if(null!==t&&void 0!==t&&t&&l instanceof ae)return null;throw l}const i=this._calldata.decodeEvent(a,e.data,n),[s,o]=Object.entries(i)[0];return{name:s,args:o,contract:{name:a,address:e.address}}})).filter((e=>null!=e))}static async initialize({onCompiler:e,onNode:t,bytecode:r,aci:n,address:a,sourceCodePath:i,sourceCode:s,fileSystem:o,validateBytecode:l,...c}){if(null==n&&null!=e){let t;var d;if(null!=i&&(t=await e.compile(i)),null!=s&&(t=await e.compileBySourceCode(s,o)),null!=t)n=t.aci,null!==(d=r)&&void 0!==d||(r=t.bytecode)}if(null==n)throw new Z;let u;if(null!=a&&(a=await Vn(a,"contract_pubkey",{resolveByNode:!0,onNode:t}),vr(a)&&(u=a)),null==a&&null==s&&null==i&&null==r)throw new X("Can't create instance by ACI without address");if(null!=a){const e=await Dn(a,{onNode:t});if(null==e.active)throw new J(a)}if(!0===l){if(null==a)throw new X("Can't validate bytecode without contract address");const n=(await $n(a,{onNode:t})).bytecode;let l=!1;if(null!=r)l=r===n;else if(null!=s){if(null==e)throw new E("Can't validate bytecode without compiler");l=await e.validateBySourceCode(n,s,o)}else if(null!=i){if(null==e)throw new E("Can't validate bytecode without compiler");l=await e.validate(n,i)}if(!l)throw new K(null!=(null!==s&&void 0!==s?s:i)?"source code":"bytecode")}return new Wl({onCompiler:e,onNode:t,sourceCode:s,sourceCodePath:i,bytecode:r,aci:n,address:a,name:u,fileSystem:o,...c})}constructor({aci:e,...t}){El(this,Dl),kl(this,Fl,void 0),this._aci=e;const r=e[e.length-1];if(null==r.contract)throw new E(`The last 'aci' item should have 'contract' key, got ${Object.keys(r)} keys instead`);Ol(Fl,this,r.contract),this._name=Rl(Fl,this).name,this._calldata=new $l(e),this.$options=t,Object.assign(this,Object.fromEntries(Rl(Fl,this).functions.map((({name:e,arguments:t,stateful:r})=>{const n="init"!==e&&!r;return[e,async(...r)=>{const a=r.length===t.length+1?r.pop():{};if("object"!==typeof a)throw new R(`Options should be an object: ${a}`);return"init"===e?this.$deploy(r,{callStatic:n,...a}):this.$call(e,r,{callStatic:n,...a})}]}))))}}function jl({returnType:e,returnValue:t,log:r},n,a,i){let s;switch(e){case"ok":{const e=Bl(Dl,this,Gl).call(this,n);return{decodedResult:this._calldata.decode(this._name,e.name,t),decodedEvents:this.$decodeEvents(r,i)}}case"revert":s=this._calldata.decodeFateString(t);break;case"error":if(s=qt(t).toString(),/Expected \d+ arguments, got \d+/.test(s))throw new q(`ACI doesn't match called contract. Error provided by node: ${s}`);break;default:throw new D(`Unknown return type: ${e}`)}throw new te(s,a)}async function Hl(e,t,r){const n=await Al(e,{...this.$options,...r});return{hash:n.hash,tx:La(n.rawTx),txData:n,rawTx:n.rawTx,...null!=n.blockHeight&&await this.$getCallResultByTxHash(n.hash,t,r)}}function Gl(e){const t=Rl(Fl,this).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new re(e)}function Ul(e,t,{contractAddressToName:r}){const n={...this.$options.contractAddressToName,...r};if(null!=n[e])return n[e];const a=(e,t)=>JSON.stringify(e)===JSON.stringify(t),i=this._aci.map((({contract:e})=>e)).filter((e=>null===e||void 0===e?void 0:e.event)),s=i.map((e=>[e.name,e.event.variant])).map((([e,t])=>t.map((t=>[e,Object.keys(t)[0],Object.values(t)[0]])))).flat().filter((([,e])=>BigInt(`0x${Et(e).toString("hex")}`)===t)).filter((([,,e],t,r)=>!r.slice(0,t).some((t=>a(t[2],e)))));switch(s.length){case 0:throw new ae(t.toString(),e);case 1:return s[0][0];default:throw new ie(e,s)}}const Wl=Vl;var Ll=Wl;const{Buffer:Kl}=Qe;async function Ql(e,t,{onAccount:r,onCompiler:n,onNode:a,bytecode:i,aci:s,sourceCodePath:o,sourceCode:l,fileSystem:c,...d}){var u;const m=r.address;if("generalized"===(await An(m,{onNode:a})).kind)throw new E(`Account ${m} is already GA`);const p=await Ll.initialize({onAccount:r,onCompiler:n,onNode:a,bytecode:i,aci:s,sourceCodePath:o,sourceCode:l,fileSystem:c}),h=await Wa({_isInternalBuild:!0,...d,tag:nr.GaAttachTx,onNode:a,code:await p.$compile(),gasLimit:null!==(u=d.gasLimit)&&void 0!==u?u:await p._estimateGas("init",t,d),ownerId:m,callData:p._calldata.encode(p._name,"init",t),authFun:Et(e)}),{hash:y,rawTx:g}=await Al(h,{onNode:a,onAccount:r,onCompiler:n,...d}),f=Qa(g);return Object.freeze({owner:m,transaction:y,rawTx:g,gaContractId:f})}async function Jl(e,{fee:t,gasPrice:r,onNode:n}){const{nodeNetworkId:a,consensusProtocolVersion:i}=await n.getNodeInfo();let s=Et(it([Kl.from(a),qt(e)]));if(i===er.Ceres){if(null==t)throw new k("fee","provided (in Ceres)",t);if(null==r)throw new k("gasPrice","provided (in Ceres)",r);s=Et(qt(ja({tag:Wn.GaMetaTxAuthData,fee:t,gasPrice:r,txHash:At(s,dt.TxHash)})))}return s}async function Yl(e,{onNode:t}){const r=La(e,nr.SignedTx);if(r.encodedTx.tag!==nr.GaMetaTx)throw new k("transaction","to include GaMetaTx",nr[r.encodedTx.tag]);return Jl(Ua(r.encodedTx.tx.encodedTx),{fee:r.encodedTx.fee,gasPrice:r.encodedTx.gasPrice,onNode:t})}function Xl(e,t,r){Zl(e,t),t.set(e,r)}function Zl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function ec(e,t){return e.get(rc(e,t))}function tc(e,t,r){return e.set(rc(e,t),r),r}function rc(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const nc={...n,sendTransaction:Al,...i,...s};var ac=new WeakMap;class ic{constructor(e={}){(0,be.A)(this,"_options",{}),Xl(this,ac,void 0),Object.assign(this._options,e),tc(ac,this,{onAccount:Sn((()=>this._options.onAccount)),onNode:Sn((()=>this._options.onNode)),onCompiler:Sn((()=>this._options.onCompiler))})}getContext(e={}){return{...this._options,...ec(ac,this),...e}}async buildTx(e){return Wa({...this.getContext(),...e})}}Object.assign(ic.prototype,nt(nc,(([e,t])=>[e,function(...e){e.length=t.length;const r=e[e.length-1];return e[e.length-1]=this.getContext(r),t(...e)}])));const sc=ic;var oc=sc;function lc(e,t,r){cc(e,t),t.set(e,r)}function cc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function dc(e,t){return e.get(mc(e,t))}function uc(e,t,r){return e.set(mc(e,t),r),r}function mc(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}var pc=new WeakMap;class hc extends oc{constructor({nodes:e=[],...t}={}){super(t),(0,be.A)(this,"pool",new Map),lc(this,pc,void 0),e.forEach((({name:e,instance:t},r)=>this.addNode(e,t,0===r))),uc(pc,this,{onNode:Sn((()=>this.api)),onCompiler:Sn((()=>this.compilerApi)),onAccount:Sn((()=>this._resolveAccount()))})}get compilerApi(){if(null==this._options.onCompiler)throw new x("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t,r=!1){if(this.pool.has(e))throw new ue(e);this.pool.set(e,t),(r||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new me(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new me("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async([e,t])=>({name:e,...await t.getNodeInfo()}))))}addresses(){return[]}_resolveAccount(e=this._options.onAccount){if("string"===typeof e)throw new B("Address in AccountResolver");if("object"===typeof e)return e;throw new R(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e,{onAccount:t,...r}={}){return this._resolveAccount(t).sign(e,r)}async signTransaction(e,{onAccount:t,...r}={}){const n=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:n,...r})}async signMessage(e,{onAccount:t,...r}={}){return this._resolveAccount(t).signMessage(e,r)}async signTypedData(e,t,{onAccount:r,...n}={}){return this._resolveAccount(r).signTypedData(e,t,n)}async signDelegation(e,{onAccount:t,...r}={}){var n;return null!==(n=r.networkId)&&void 0!==n||(r.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(t).signDelegation(e,r)}getContext(e={}){return{...this._options,...dc(pc,this),...e,...null!=e.onAccount&&{onAccount:this._resolveAccount(e.onAccount)}}}}class yc extends hc{constructor({accounts:e,...t}={}){super(t),(0,be.A)(this,"accounts",{}),null===e||void 0===e||e.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(e=this.selectedAddress){if("string"===typeof e){const t=e;if(qt(t),null==this.accounts[t])throw new V(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e,{select:t}={}){const{address:r}=e;this.accounts[r]=e,!0===t&&this.selectAccount(r)}removeAccount(e){if(null==this.accounts[e])throw new V(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(qt(e),null==this.accounts[e])throw new V(e);this.selectedAddress=e}}function gc(e,t){Nc(e,t),t.add(e)}function fc(e,t,r){Nc(e,t),t.set(e,r)}function Nc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Cc(e,t){return e.get(wc(e,t))}function Sc(e,t,r){return e.set(wc(e,t),r),r}function wc(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}var zc=new WeakMap,vc=new WeakMap,bc=new WeakMap,Tc=new WeakSet;class xc{constructor(e,t,r){gc(this,Tc),fc(this,zc,new Map),fc(this,vc,0),fc(this,bc,void 0),this.connection=e,Sc(bc,this,r),e.connect(wc(Tc,this,qc).bind(this),t)}async request(e,t){return wc(Tc,this,Ac).call(this,Sc(vc,this,Cc(vc,this)+1),e,t),new Promise(((e,t)=>{Cc(zc,this).set(Cc(vc,this),{resolve:e,reject:t})}))}notify(e,t){wc(Tc,this,Ac).call(this,void 0,e,t)}}async function qc(e,t){if("2.0"!==(null===e||void 0===e?void 0:e.jsonrpc))throw new U(JSON.stringify(e));if("result"in e||"error"in e)return void wc(Tc,this,_c).call(this,e);const r=e;let n,a;try{if(!(r.method in Cc(bc,this)))throw new De;const e=r.method;n=await Cc(bc,this)[e](r.params,t)}catch(i){ct(i),a=i}if(null!=r.id&&wc(Tc,this,Pc).call(this,r.id,r.method,n,null==a||a instanceof Ie?a:new $e),null!=a&&!(a instanceof Ie))throw a}function Ac(e,t,r){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=r?{params:r}:{}})}function Pc(e,t,r,n){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=n?{error:n.toJSON()}:{result:r}})}function _c({id:e,error:t,result:r}){const n=Cc(zc,this).get(e);if(null==n)throw new W(e);null!=t?n.reject(Ie.deserialize(t)):n.resolve(r),Cc(zc,this).delete(e)}const Ic=1;var kc=r(59643);const Ec=kc({storeAsString:!0}),Mc=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return nt(e,(([e,t])=>[e,Mc(t)]));if(Array.isArray(e))return e.map((e=>Mc(e)));if("string"===typeof e&&new Lt.A(e).toString(10)===e){const t=new Lt.A(e);return t.toJSON=()=>t.toString(10),t}return e};var Oc={stringify:(...e)=>Ec.stringify(Mc(e[0]),...e.slice(1)),parse:Ec.parse};const{Buffer:Rc}=Qe;class Bc extends yc{constructor({name:e,id:t,type:r,onConnection:n,onSubscription:a,onDisconnect:i,onAskAccounts:s,...o}){super(o),(0,be.A)(this,"_clients",new Map),this.onConnection=n,this.onSubscription=a,this.onDisconnect=i,this.onAskAccounts=s,this.name=e,this.id=t,this._type=r}_getAccountsForClient({addressSubscription:e}){const{current:t,connected:r}=this.getAccounts();return{current:e.has("current")||e.has("connected")?t:{},connected:e.has("connected")?r:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(Ae.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(Ae.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new L(e);return t}_isRpcClientConnected(e){return Pe.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=Pe.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=(0,si.A)();let r;const n={id:t,status:Pe.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new xc(e,(()=>{this._clients.delete(t),this.onDisconnect(t,r)}),{[Ae.closeConnection]:e=>{r=e,this._disconnectRpcClient(t)},[Ae.connect]:async({name:e,version:r,icons:a,connectNode:i},s)=>{if(r!==Ic)throw new Me;return await this.onConnection(t,{name:e,icons:a,connectNode:i},s),n.status=Pe.CONNECTED,n.connectNode=i,{...await this.getWalletInfo(),...i&&this._getNode()}},[Ae.subscribeAddress]:async({type:e,value:r},a)=>{if(!this._isRpcClientConnected(t))throw new Re;switch(e){case qe.subscribe:await this.onSubscription(t,{type:e,value:r},a),n.addressSubscription.add(r);break;case qe.unsubscribe:n.addressSubscription.delete(r);break;default:throw new D(`Unknown subscription type: ${e}`)}return{subscription:Array.from(n.addressSubscription),address:this._getAccountsForClient(n)}},[Ae.address]:async(e,r)=>{if(!this._isRpcClientConnected(t))throw new Re;return await this.onAskAccounts(t,e,r),this.addresses()},[Ae.sign]:async({tx:e,onAccount:r=this.address,returnSigned:n,innerTx:a},i)=>{if(!this._isRpcClientConnected(t))throw new Re;if(!this.addresses().includes(r))throw new Be(r);const s={onAccount:r,aeppOrigin:i,aeppRpcClientId:t,innerTx:a};if(n||!0===a)return{signedTransaction:await this.signTransaction(e,s)};try{return Oc.parse(Oc.stringify({transactionHash:await this.sendTransaction(e,{...s,verify:!1})}))}catch(o){const t=await xl(e,this.api);if(t.length>0)throw new ke(t);throw o}},[Ae.signMessage]:async({message:e,onAccount:r=this.address},n)=>{if(!this._isRpcClientConnected(t))throw new Re;if(!this.addresses().includes(r))throw new Be(r);const a={onAccount:r,aeppOrigin:n,aeppRpcClientId:t};return{signature:Rc.from(await this.signMessage(e,a)).toString("hex")}},[Ae.signTypedData]:async({domain:e,aci:r,data:n,onAccount:a=this.address},i)=>{if(!this._isRpcClientConnected(t))throw new Re;if(!this.addresses().includes(a))throw new Be(a);const s={...e,onAccount:a,aeppOrigin:i,aeppRpcClientId:t};return{signature:await this.signTypedData(n,r,s)}},[Ae.unsafeSign]:async({data:e,onAccount:r=this.address},n)=>{if(!this._isRpcClientConnected(t))throw new Re;if(!this.addresses().includes(r))throw new Be(r);const a={onAccount:r,aeppOrigin:n,aeppRpcClientId:t},i=At(await this.sign(qt(e),a),dt.Signature);return{signature:i}},[Ae.signDelegation]:async({delegation:e,onAccount:r=this.address},n)=>{if(!this._isRpcClientConnected(t))throw new Re;if(!this.addresses().includes(r))throw new Be(r);const a={onAccount:r,aeppOrigin:n,aeppRpcClientId:t},i=await this.signDelegation(e,a);return{signature:i}}})};return this._clients.set(t,n),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(Ae.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){const{origin:e}=window.location;return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:"file://"===e?"*":e,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}const $c={type:{name:"Composite",className:"Contract",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},Dc={type:{name:"Composite",className:"CompileOpts",modelProperties:{fileSystem:{serializedName:"file_system",type:{name:"Dictionary",value:{type:{name:"any"}}}},srcFile:{serializedName:"src_file",type:{name:"String"}}}}},Fc={type:{name:"Composite",className:"CompilerError",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},pos:{serializedName:"pos",type:{name:"Composite",className:"ErrorPos"}},message:{serializedName:"message",required:!0,type:{name:"String"}},context:{serializedName:"context",type:{name:"String"}}}}},Vc={type:{name:"Composite",className:"ErrorPos",modelProperties:{file:{serializedName:"file",type:{name:"String"}},line:{serializedName:"line",required:!0,type:{name:"Number"}},col:{serializedName:"col",required:!0,type:{name:"Number"}}}}},jc={type:{name:"Composite",className:"CompileResult",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},aci:{serializedName:"aci",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}},warnings:{serializedName:"warnings",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}}}}},Hc={type:{name:"Composite",className:"SophiaCallResultInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Gc={type:{name:"Composite",className:"BytecodeCallResultInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Uc={type:{name:"Composite",className:"DecodedCallresult",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},Wc={type:{name:"Composite",className:"FunctionCallInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Lc={type:{name:"Composite",className:"Calldata",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}}}}},Kc={type:{name:"Composite",className:"DecodeCalldataBytecode",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Qc={type:{name:"Composite",className:"DecodedCalldata",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Jc={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Yc={type:{name:"Composite",className:"DecodeCalldataSource",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}}}}},Xc={type:{name:"Composite",className:"ByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Zc={type:{name:"Composite",className:"FateAssembler",modelProperties:{fateAssembler:{serializedName:"fate-assembler",required:!0,type:{name:"String"}}}}},ed={type:{name:"Composite",className:"ValidateByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},td={type:{name:"Composite",className:"CompilerVersion",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}}}}},rd={type:{name:"Composite",className:"ApiVersion",modelProperties:{apiVersion:{serializedName:"api-version",required:!0,type:{name:"String"}}}}},nd={type:{name:"Composite",className:"SophiaBinaryData",modelProperties:{sophiaType:{serializedName:"sophia-type",required:!0,type:{name:"String"}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},ad={type:{name:"Composite",className:"SophiaJsonData",modelProperties:{data:{serializedName:"data",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},id={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},sd={parameterPath:"body",mapper:$c},od={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},ld={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},cd={parameterPath:"body",mapper:Hc},dd={parameterPath:"body",mapper:Gc},ud={parameterPath:"body",mapper:Wc},md={parameterPath:"body",mapper:Kc},pd={parameterPath:"body",mapper:Yc},hd={parameterPath:"body",mapper:Xc},yd={parameterPath:"body",mapper:ed};class gd extends yi.Nl{constructor(e,t){var r,n;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-compiler/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,o={...a,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(r=null!==(n=t.endpoint)&&void 0!==n?n:t.baseUri)&&void 0!==r?r:"{$host}"};super(o),this.$host=e}generateACI(e,t){return this.sendOperationRequest({body:e,options:t},Nd)}compileContract(e,t){return this.sendOperationRequest({body:e,options:t},Cd)}decodeCallResult(e,t){return this.sendOperationRequest({body:e,options:t},Sd)}decodeCallResultBytecode(e,t){return this.sendOperationRequest({body:e,options:t},wd)}encodeCalldata(e,t){return this.sendOperationRequest({body:e,options:t},zd)}decodeCalldataBytecode(e,t){return this.sendOperationRequest({body:e,options:t},vd)}decodeCalldataSource(e,t){return this.sendOperationRequest({body:e,options:t},bd)}getFateAssemblerCode(e,t){return this.sendOperationRequest({body:e,options:t},Td)}validateByteCode(e,t){return this.sendOperationRequest({body:e,options:t},xd)}getCompilerVersion(e,t){return this.sendOperationRequest({body:e,options:t},qd)}version(e){return this.sendOperationRequest({options:e},Ad)}apiVersion(e){return this.sendOperationRequest({options:e},Pd)}api(e){return this.sendOperationRequest({options:e},_d)}}const fd=yi.rl(o,!1),Nd={path:"/aci",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:sd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Cd={path:"/compile",httpMethod:"POST",responses:{200:{bodyMapper:jc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:sd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Sd={path:"/decode-call-result",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"any"}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:cd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},wd={path:"/decode-call-result/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Uc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:dd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},zd={path:"/encode-calldata",httpMethod:"POST",responses:{200:{bodyMapper:Lc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:ud,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},vd={path:"/decode-calldata/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Qc},400:{bodyMapper:Jc,isError:!0}},requestBody:md,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},bd={path:"/decode-calldata/source",httpMethod:"POST",responses:{200:{bodyMapper:Qc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:pd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Td={path:"/fate-assembler",httpMethod:"POST",responses:{200:{bodyMapper:Zc},400:{bodyMapper:Jc,isError:!0}},requestBody:hd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},xd={path:"/validate-byte-code",httpMethod:"POST",responses:{200:{},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:yd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},qd={path:"/compiler-version",httpMethod:"POST",responses:{200:{bodyMapper:td},400:{bodyMapper:Jc,isError:!0}},requestBody:hd,urlParameters:[ld],headerParameters:[id,od],mediaType:"json",serializer:fd},Ad={path:"/version",httpMethod:"GET",responses:{200:{bodyMapper:td},500:{bodyMapper:Jc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd},Pd={path:"/api-version",httpMethod:"GET",responses:{200:{bodyMapper:rd},500:{bodyMapper:Jc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd},_d={path:"/api",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Dictionary",value:{type:{name:"any"}}}}},400:{bodyMapper:Jc,isError:!0}},urlParameters:[ld],headerParameters:[od],serializer:fd};class Id{}class kd extends Id{constructor(e,{ignoreVersion:t=!1}={}){let r;super();const n=async e=>(null!=r||(r=(await this.api.apiVersion(e)).apiVersion),r);this.api=new gd(e,{allowInsecureConnection:!0,additionalPolicies:[...t?[]:[pi("compiler",n,"8.0.0","9.0.0")],mi((e=>{let t="";return"reason"in e&&(t+=` ${e.reason}${null!=e.parameter?` in ${e.parameter}`:""}${null!=e.info?` (${JSON.stringify(e.info)})`:""}`),Array.isArray(e)&&(t+=`\n${e.map((e=>`${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${null!=e.context?` (${e.context})`:""}`)).join("\n")}`),t}))]}),this.api.pipeline.removePolicy({name:et.OD}),this.api.pipeline.removePolicy({name:et.PR})}async compileBySourceCode(e,t){try{const r=await this.api.compileContract({code:e,options:{fileSystem:t}}),n=r.warnings.map((({type:e,...t})=>t)),a={...r,warnings:n};return a}catch(r){if(r instanceof et.pj&&400===r.statusCode)throw new x(r.message);throw r}}async compile(e){throw new B("File system access, use CompilerHttpNode instead")}async generateAciBySourceCode(e,t){try{return await this.api.generateACI({code:e,options:{fileSystem:t}})}catch(r){if(r instanceof et.pj&&400===r.statusCode)throw new x(r.message);throw r}}async generateAci(e){throw new B("File system access, use CompilerHttpNode instead")}async validateBySourceCode(e,t,r){try{return await this.api.validateByteCode({bytecode:e,source:t,options:{fileSystem:r}}),!0}catch{return!1}}async validate(e,t){throw new B("File system access, use CompilerHttpNode instead")}async version(){return(await this.api.version()).version}}var Ed=r(66176);function Md(e,t,r,n,a,i){return(0,c.uX)(),(0,c.CE)("div",{class:(0,d.C4)({error:e.error})},(0,d.v_)(e.text),3)}var Od={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},Rd=r(66262);const Bd=(0,Rd.A)(Od,[["render",Md]]);var $d=Bd,Dd={components:{Value:$d},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const r=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,n=new Ke({target:r});this.clientId=this.aeSdk.addRpcClient(n),this.aeSdk.shareWalletInfo(this.clientId);const a=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(a);const e=this.aeSdk._getClient(this.clientId);e.status===Pe.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===Pe.CONNECTED&&e.rpc.notify(Ae.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){const e=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e));this.nodeName=e[(e.indexOf(this.nodeName)+1)%e.length],this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(r,n,a)=>{if(!confirm([`Client ${e[r].name} with id ${r} at ${a} want to ${t}`,$d.methods.valueToString(n)].join("\n")))throw new Ee};class r extends Za{async signTransaction(e,{aeppRpcClientId:r,aeppOrigin:n,...a}={}){if(null!=r){const i={...a,unpackedTx:La(e)};i.onCompiler&&(i.onCompiler="<Compiler>"),i.onNode&&(i.onNode="<Node>"),t(`sign transaction ${e}`)(r,i,n)}return super.signTransaction(e,a)}async signMessage(e,{aeppRpcClientId:r,aeppOrigin:n,...a}={}){return null!=r&&t(`sign message ${e}`)(r,a,n),super.signMessage(e,a)}async signTypedData(e,r,{aeppRpcClientId:n,aeppOrigin:a,...i}){if(null!=n){const s=(new Ed.TypeResolver).resolveType(r),o=(new Ed.ContractByteArrayEncoder).decodeWithType(e,s),l={...i,aci:r,decodedData:o};t(`sign typed data ${e}`)(n,l,a)}return super.signTypedData(e,r,i)}async sign(e,{aeppRpcClientId:r,aeppOrigin:n,...a}={}){return null!=r&&t(`sign raw data ${e}`)(r,a,n),super.sign(e,a)}async signDelegation(e,{aeppRpcClientId:r,aeppOrigin:n,...a}){if(null!=r){const i={...a,...ii(e)};t("sign delegation")(r,i,n)}return super.signDelegation(e,a)}static generate(){return new r(Mt().secretKey)}}this.aeSdk=new Bc({id:window.origin,type:xe.window,nodes:[{name:"ae_uat",instance:new Nl("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new Nl("https://mainnet.aeternity.io")}],accounts:[new r("sk_2CuofqWZHrABCrM7GY95YSQn8PyFvKQadnvFnpwhjUnDCFAWmf"),r.generate()],onCompiler:new kd("https://v7.compiler.aepps.com"),name:"Wallet Iframe",onConnection:(t,r,n)=>{if(!confirm(`Client ${r.name} with id ${t} at ${n} want to connect`))throw new Oe;e[t]=r,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const Fd=(0,Rd.A)(Dd,[["render",w],["__scopeId","data-v-4a6d8aa4"]]);var Vd=Fd;(0,l.Ef)(Vd).mount("#app")},73519:function(){}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.m=e,function(){var e=[];r.O=function(t,n,a,i){if(!n){var s=1/0;for(d=0;d<e.length;d++){n=e[d][0],a=e[d][1],i=e[d][2];for(var o=!0,l=0;l<n.length;l++)(!1&i||s>=i)&&Object.keys(r.O).every((function(e){return r.O[e](n[l])}))?n.splice(l--,1):(o=!1,i<s&&(s=i));if(o){e.splice(d--,1);var c=a();void 0!==c&&(t=c)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[n,a,i]}}(),function(){r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){r.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};r.O.j=function(t){return 0===e[t]};var t=function(t,n){var a,i,s=n[0],o=n[1],l=n[2],c=0;if(s.some((function(t){return 0!==e[t]}))){for(a in o)r.o(o,a)&&(r.m[a]=o[a]);if(l)var d=l(r)}for(t&&t(n);c<s.length;c++)i=s[c],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(d)},n=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=r.O(void 0,[504],(function(){return r(21523)}));n=r.O(n)})();
//# sourceMappingURL=app.f9010c98.js.map