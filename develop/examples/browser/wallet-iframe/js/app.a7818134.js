(function(){var e={96088:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{Account:function(){return ui},ByteCode:function(){return qi},Channel:function(){return Oi},ChannelCloseMutualTx:function(){return eo},ChannelCloseSoloTx:function(){return to},ChannelCreateTx:function(){return Ji},ChannelDepositTx:function(){return Yi},ChannelForceProgressTx:function(){return Zi},ChannelSetDelegatesTx:function(){return io},ChannelSettleTx:function(){return ro},ChannelSlashTx:function(){return no},ChannelSnapshotSoloTx:function(){return ao},ChannelWithdrawTx:function(){return Xi},CheckTxInPoolResponse:function(){return wo},CommitmentId:function(){return Ki},ContractCallObject:function(){return wi},ContractCallTx:function(){return ho},ContractCreateTx:function(){return po},ContractObject:function(){return xi},CountResponse:function(){return ci},CreateContractUnsignedTx:function(){return xo},Delegates:function(){return ai},DryRunAccount:function(){return hi},DryRunCallContext:function(){return fi},DryRunCallReq:function(){return gi},DryRunInput:function(){return pi},DryRunInputItem:function(){return yi},DryRunResult:function(){return Ci},DryRunResults:function(){return Ni},EncodedTx:function(){return zi},ErrorModel:function(){return Ja},Event:function(){return Si},GAAttachTx:function(){return fo},GAMetaTx:function(){return No},GAObject:function(){return Ti},Generation:function(){return di},HashResponse:function(){return Xa},Header:function(){return La},HeightResponse:function(){return Za},KeyBlock:function(){return Ya},MicroBlockHeader:function(){return ei},NameClaimTx:function(){return Ui},NameEntry:function(){return _i},NameHash:function(){return Li},NamePointer:function(){return li},NamePreclaimTx:function(){return ji},NameRevokeTx:function(){return Qi},NameTransferTx:function(){return Wi},NameUpdateTx:function(){return Gi},NextNonceResponse:function(){return mi},OffChainCallContract:function(){return bo},OffChainDeposit:function(){return To},OffChainNewContract:function(){return zo},OffChainTransfer:function(){return So},OffChainUpdate:function(){return ii},OffChainWithdrawal:function(){return vo},OracleExtendTx:function(){return Vi},OracleQueries:function(){return Ii},OracleQuery:function(){return ki},OracleQueryTx:function(){return Fi},OracleRegisterTx:function(){return $i},OracleRespondTx:function(){return Hi},PayingForTx:function(){return Co},PeerConnections:function(){return Di},PeerCount:function(){return co},PeerCountAvailable:function(){return mo},PeerCountConnected:function(){return uo},PeerDetails:function(){return so},PeerPubKey:function(){return Ei},Peers:function(){return lo},PoI:function(){return Ai},PostTxResponse:function(){return bi},Protocol:function(){return Ri},PubKey:function(){return oo},RegisteredOracle:function(){return Pi},RelativeTTL:function(){return oi},SignedTx:function(){return ni},SignedTxs:function(){return ti},SpendTx:function(){return Bi},Status:function(){return Mi},TokenSupply:function(){return go},Ttl:function(){return si},Tx:function(){return ri},TxInfoObject:function(){return vi},UnsignedTx:function(){return yo},discriminators:function(){return qo}});var a={};n.r(a),n.d(a,{InvalidTxError:function(){return Js},_getPollInterval:function(){return Ls},awaitHeight:function(){return Zs},getAccount:function(){return nl},getBalance:function(){return rl},getContract:function(){return pl},getContractByteCode:function(){return ml},getCurrentGeneration:function(){return al},getGeneration:function(){return il},getHeight:function(){return Ys},getKeyBlock:function(){return sl},getMicroBlockHeader:function(){return ll},getMicroBlockTransactions:function(){return ol},getName:function(){return hl},poll:function(){return Xs},resolveName:function(){return yl},sendTransaction:function(){return tl},txDryRun:function(){return ul},waitForTxConfirm:function(){return el}});var i={};n.r(i),n.d(i,{aensBid:function(){return vl},aensClaim:function(){return wl},aensPreclaim:function(){return Sl},aensQuery:function(){return Cl},aensRevoke:function(){return gl},aensTransfer:function(){return Nl},aensUpdate:function(){return fl}});var o={};n.r(o),n.d(o,{payForTransaction:function(){return bl},spend:function(){return Tl},transferFunds:function(){return zl}});var s={};n.r(s),n.d(s,{extendOracleTtl:function(){return Il},getOracleObject:function(){return _l},getQueryObject:function(){return Al},pollForQueries:function(){return xl},pollForQueryResponse:function(){return ql},postQueryToOracle:function(){return Pl},registerOracle:function(){return Ol},respondToQuery:function(){return kl}});var l={};n.r(l),n.d(l,{buildAuthTxHash:function(){return tc},buildAuthTxHashByGaMetaTx:function(){return nc},createGeneralizedAccount:function(){return ec}});var c={};n.r(c),n.d(c,{ApiVersion:function(){return Zc},ByteCodeInput:function(){return Lc},BytecodeCallResultInput:function(){return Fc},Calldata:function(){return Uc},CompileOpts:function(){return Rc},CompileResult:function(){return $c},CompilerError:function(){return Dc},CompilerVersion:function(){return Xc},Contract:function(){return Mc},DecodeCalldataBytecode:function(){return Gc},DecodeCalldataSource:function(){return Kc},DecodedCalldata:function(){return Wc},DecodedCallresult:function(){return Hc},ErrorModel:function(){return Qc},ErrorPos:function(){return Bc},FateAssembler:function(){return Jc},FunctionCallInput:function(){return jc},SophiaBinaryData:function(){return ed},SophiaCallResultInput:function(){return Vc},SophiaJsonData:function(){return td},ValidateByteCodeInput:function(){return Yc}});var d=n(95328),u=n(66760),m=n(98752);const p=e=>((0,u.ED)("data-v-0fa4fbfb"),e=e(),(0,u.ii)(),e),h=p((()=>(0,u.QD)("input",{id:"toggle-aepp",type:"checkbox"},null,-1))),y=p((()=>(0,u.QD)("h2",null,[(0,u.mY)(" Wallet Iframe "),(0,u.QD)("label",{for:"toggle-aepp"})],-1))),g={class:"group"},f=p((()=>(0,u.QD)("div",null,"Aepp URL",-1))),N=p((()=>(0,u.QD)("div",null,"Address",-1))),C=p((()=>(0,u.QD)("div",null,"Node",-1))),w=p((()=>(0,u.QD)("div",null,"Balance",-1))),S=p((()=>(0,u.QD)("div",null,"RPC client",-1))),v=["src"];function T(e,t,n,r,a,i){const o=(0,u.E1)("Value");return(0,u.Wz)(),(0,u.An)(u.ae,null,[h,y,(0,u.QD)("div",g,[(0,u.QD)("div",null,[f,(0,u.QD)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,d.Y7)(((...e)=>i.navigate&&i.navigate(...e)),["prevent"]))},[(0,u.wt)((0,u.QD)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[d.Og,e.nextAeppUrl]])],32)]),(0,u.QD)("div",null,[N,(0,u.QD)("div",null,(0,m.WA)(e.address),1)]),(0,u.QD)("div",null,[C,(0,u.QD)("div",null,(0,m.WA)(e.nodeName),1)]),(0,u.QD)("div",null,[w,(0,u.K2)(o,{value:e.balancePromise},null,8,["value"])]),(0,u.QD)("div",null,[S,(0,u.QD)("div",null,"status: "+(0,m.WA)(e.clientStatus??"no client")+", id: "+(0,m.WA)(e.clientId??"not defined"),1)]),(0,u.QD)("button",{onClick:t[3]||(t[3]=(...e)=>i.switchAccount&&i.switchAccount(...e))},"Switch Account"),(0,u.QD)("button",{onClick:t[4]||(t[4]=(...e)=>i.switchNode&&i.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,u.Wz)(),(0,u.An)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>i.disconnect&&i.disconnect(...e))}," Disconnect ")):((0,u.Wz)(),(0,u.An)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??i.shareWalletInfo)())},(0,m.WA)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,u.g1)("",!0):((0,u.Wz)(),(0,u.An)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,v))],64)}var z=n(97376),b=n(51890);class x extends Error{constructor(e){super(e),this.name="BaseError"}}class q extends x{constructor(e){super(e),this.name="AccountError"}}class A extends x{constructor(e){super(e),this.name="AensError"}}class P extends x{constructor(e){super(e),this.name="AeppError"}}class I extends x{constructor(e){super(e),this.name="CompilerError"}}class k extends x{constructor(e){super(e),this.name="ContractError"}}class _ extends x{constructor(e){super(e),this.name="CryptographyError"}}class O extends x{constructor(e){super(e),this.name="NodeError"}}class E extends x{constructor(e){super(e),this.name="TransactionError"}}class M extends x{constructor(e){super(e),this.name="WalletError"}}class R extends x{constructor(e,t,n){super(`${e} should be ${t}, got ${n} instead`),this.name="ArgumentError"}}class D extends _{constructor(e){super(e),this.name="IllegalArgumentError"}}class B extends x{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class $ extends x{constructor(e){super(`Giving up at height ${e}`),this.name="RequestTimedOutError"}}class V extends x{constructor(e,t){super([`Giving up after ${e} blocks mined`,`transaction hash: ${t}`].join(", ")),this.name="TxTimedOutError"}}class F extends x{constructor(e){super(e),this.name="TypeError"}}class H extends x{constructor(e){super(e),this.name="UnsupportedProtocolError"}}class j extends x{constructor(e){super(e),this.name="NotImplementedError"}}class U extends x{constructor(e,t,n,r){super(`Unsupported ${e} version ${t}. Supported: >= ${n} < ${r}`),this.name="UnsupportedVersionError"}}class G extends x{constructor(e){super(e),this.name="InternalError"}}class W extends G{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Expected to not happen, required for TS";super(e),this.name="UnexpectedTsError"}}class Q extends q{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class K extends A{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class L extends A{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class J extends A{constructor(e){super(e),this.name="InvalidAensNameError"}}class Y extends P{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class X extends P{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class Z extends P{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class ee extends k{constructor(e){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`),this.name="BytecodeMismatchError"}}class te extends k{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class ne extends k{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class re extends k{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class ae extends k{constructor(e){super(e),this.name="MissingContractAddressError"}}class ie extends k{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class oe extends k{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class se extends k{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class le extends k{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class ce extends k{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class de extends k{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class ue extends k{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((e=>{let[t]=e;return`"${t}"`})).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class me extends _{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class pe extends _{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class he extends _{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ye extends _{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class ge extends _{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class fe extends O{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class Ne extends O{constructor(e){super(e),this.name="NodeNotFoundError"}}class Ce extends E{constructor(e){super(e),this.name="DecodeError"}}class we extends E{constructor(e){super(e),this.name="PayloadLengthError"}}class Se extends E{constructor(e){super(e),this.name="DryRunError"}}class ve extends E{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class Te extends E{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class ze extends E{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class be extends E{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class xe extends M{constructor(e){super(e),this.name="AlreadyConnectedError"}}class qe extends M{constructor(e){super(e),this.name="NoWalletConnectedError"}}class Ae extends M{constructor(e){super(e),this.name="RpcConnectionError"}}class Pe{constructor(e){let{debug:t=!1}=e;this.debug=t}connect(e,t){if(this.isConnected())throw new xe("You already connected")}disconnect(){if(!this.isConnected())throw new qe("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}n(73288);var Ie=n(7084);let ke=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),_e=function(e){return e["window"]="window",e["extension"]="extension",e}({}),Oe=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),Ee=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegationToContract"]="delegationToContract.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),Me=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const Re=[];class De extends x{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Re.find((t=>t.code===e.code));if(null==t)throw new G(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class Be extends De{constructor(e){super("Invalid transaction"),(0,Ie.c)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,Ie.c)(Be,"code",2),Re.push(Be);class $e extends De{constructor(e){super("Operation rejected by user"),(0,Ie.c)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,Ie.c)($e,"code",4),Re.push($e);class Ve extends De{constructor(){super("Unsupported Protocol Version"),(0,Ie.c)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,Ie.c)(Ve,"code",5),Re.push(Ve);class Fe extends De{constructor(e){super("Wallet deny your connection request"),(0,Ie.c)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,Ie.c)(Fe,"code",9),Re.push(Fe);class He extends De{constructor(){super("You are not connected to the wallet"),(0,Ie.c)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,Ie.c)(He,"code",10),Re.push(He);class je extends De{constructor(e){super(`You are not subscribed for account ${e}`),(0,Ie.c)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,Ie.c)(je,"code",11),Re.push(je);class Ue extends De{constructor(){super("The peer failed to execute your request due to unknown error"),(0,Ie.c)(this,"code",12),this.name="RpcInternalError"}}(0,Ie.c)(Ue,"code",12),Re.push(Ue);class Ge extends De{constructor(){super("Method not found"),(0,Ie.c)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function We(e,t,n){Qe(e,t),t.set(e,n)}function Qe(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(0,Ie.c)(Ge,"code",-32601),Re.push(Ge);var Ke=new WeakMap,Le=new WeakMap,Je=new WeakMap;class Ye extends Pe{constructor(){let{target:e,self:t=window,origin:n,sendDirection:r,receiveDirection:a=ke.to_aepp,...i}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(i),We(this,Ke,{writable:!0,value:void 0}),We(this,Le,{writable:!0,value:void 0}),We(this,Je,{writable:!0,value:void 0}),(0,b.c)(this,Le,e),(0,b.c)(this,Je,t),this.origin=n,this.sendDirection=r,this.receiveDirection=a}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var n,r;if("object"!==typeof t.data||"2.0"!==(null!==(n=t.data.jsonrpc)&&void 0!==n?n:null===(r=t.data.data)||void 0===r?void 0:r.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=(0,z.c)(this,Le)&&(0,z.c)(this,Le)!==t.source)return;this.receiveMessage(t);let{data:a}=t;if(null!=a.type){if(t.data.type!==this.receiveDirection)return;a=a.data}e(a,t.origin,t.source)},(0,z.c)(this,Je).addEventListener("message",this.listener),(0,b.c)(this,Ke,t)}disconnect(){if(super.disconnect(),null==this.listener||null==(0,z.c)(this,Ke))throw new G("Expected to not happen, required for TS");(0,z.c)(this,Je).removeEventListener("message",this.listener),delete this.listener,(0,z.c)(this,Ke).call(this),(0,b.c)(this,Ke,void 0)}sendMessage(e){var t;if(null==(0,z.c)(this,Le))throw new Ae("Can't send messages without target");const n=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(n),(0,z.c)(this,Le).postMessage(n,null!==(t=this.origin)&&void 0!==t?t:"*")}}n(89356),n(15704),n(64288);var Xe=n(66020);class Ze{async signTypedData(e,t,n){throw new j("signTypedData method")}async signDelegationToContract(e,t){throw new j("signDelegationToContract method")}async signNameDelegationToContract(e,t,n){throw new j("signNameDelegationToContract method")}async signAllNamesDelegationToContract(e,t){throw new j("signAllNamesDelegationToContract method")}async signOracleQueryDelegationToContract(e,t,n){throw new j("signOracleQueryDelegationToContract method")}async signDelegation(e,t){throw new j("signDelegation method")}}var et=n(70836),tt=n(74061),nt=n(83420),rt=n(32508);const{Buffer:at}=Xe,it=async e=>new Promise((t=>{setTimeout(t,e)})),ot=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),st=(()=>{try{return at.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),lt=st?(e,t)=>at.concat(e.map((e=>at.from(e))),t):at.concat;function ct(e,t){return e in t}function dt(e,t){return t.includes(e)}function ut(e){return e instanceof rt.y&&404===e.statusCode&&e.message.includes("Account not found")}function mt(e){if(!(e instanceof Error))throw e}let pt=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});var ht=n(47280),yt=n(99777);const{Buffer:gt}=Xe,{encode:ft,decode:Nt}=ht;function Ct(e){return(new yt).update(e).digest()}const wt=[pt.ContractBytearray,pt.ContractStoreKey,pt.ContractStoreValue,pt.Transaction,pt.OracleQuery,pt.OracleResponse,pt.State,pt.Poi,pt.StateTrees,pt.CallStateTree,pt.Bytearray],St=[pt.KeyBlockHash,pt.MicroBlockHash,pt.BlockPofHash,pt.BlockTxHash,pt.BlockStateHash,pt.Channel,pt.ContractAddress,pt.TxHash,pt.OracleAddress,pt.OracleQueryId,pt.AccountAddress,pt.Signature,pt.Commitment,pt.PeerPubkey,pt.Name],vt={[pt.KeyBlockHash]:32,[pt.MicroBlockHash]:32,[pt.BlockPofHash]:32,[pt.BlockTxHash]:32,[pt.BlockStateHash]:32,[pt.Channel]:32,[pt.ContractAddress]:32,[pt.TxHash]:32,[pt.OracleAddress]:32,[pt.OracleQueryId]:32,[pt.AccountAddress]:32,[pt.Signature]:64,[pt.Commitment]:32,[pt.PeerPubkey]:32,[pt.State]:32};function Tt(e,t){if(!ct(t,vt))return;const n=vt[t];if(null!=n&&e.length!==n)throw new we(`Payload should be ${n} bytes, got ${e.length} instead`)}const zt=e=>Ct(Ct(e)).slice(0,4),bt=e=>lt([e,zt(e)]);function xt(e){const t=e.slice(0,-4);if(!zt(t).equals(e.slice(-4)))throw new me;return t}const qt={encode:e=>bt(e).toString("base64"),decode:e=>xt(gt.from(e,"base64"))},At={encode:e=>ft(bt(e)),decode:e=>xt(gt.from(Nt(e)))},Pt=e=>{const t=wt.find((t=>t===e));if(null!=t)return[t,qt];const n=St.find((t=>t===e));if(null!=n)return[n,At];throw new R("prefix",`one of ${[...St,...wt].join(", ")}`,e)};function It(e){const[t,n,r]=e.split("_");if(null==n)throw new Ce(`Encoded string missing payload: ${e}`);if(null!=r)throw new Ce(`Encoded string have extra parts: ${e}`);const[a,i]=Pt(t),o=i.decode(n);return Tt(o,a),o}function kt(e,t){const[,n]=Pt(t);return Tt(e,t),`${t}_${n.encode(e)}`}const{Buffer:_t}=Xe,{blake2b:Ot}=tt,{encode:Et}=nt;function Mt(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[pt.AccountAddress]);try{It(e);const t=e.split("_")[0];if(!dt(t,n))throw new R("Encoded string type",n.length>1?`one of ${n.join(", ")}`:n[0],t);return!0}catch(a){return!1}}function Rt(){const[e]=new BigUint64Array(et.randomBytes(8).buffer);return Number(e%BigInt(Number.MAX_SAFE_INTEGER))}function Dt(e){return _t.from(Ot(e,void 0,32))}function Bt(e){return et.sign.keyPair.fromSecretKey(e)}function $t(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=et.sign.keyPair(),n=_t.from(t.publicKey),r=_t.from(t.secretKey);return e?{publicKey:n,secretKey:r}:{publicKey:kt(n,pt.AccountAddress),secretKey:r.toString("hex")}}function Vt(e,t){return et.sign.detached(_t.from(e),_t.from(t))}function Ft(e,t,n){return et.sign.detached.verify(e,t,It(n))}const Ht=_t.from("aeternity Signed Message:\n","utf8"),jt=Et(Ht.length);function Ut(e){const t=_t.from(e,"utf8");return Dt(lt([jt,Ht,Et(t.length),t]))}var Gt=n(58716),Wt=n(22936);const{TypeResolver:Qt,ContractByteArrayEncoder:Kt}=Gt;function Lt(e){var t;return Dt(null!==(t=Wt(e))&&void 0!==t?t:"")}function Jt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},n=(new Qt).resolveType(t,{}),r=(new Kt).encodeWithType(e,n);return Dt(It(r))}function Yt(e,t,n){return Dt(lt([jt,new Uint8Array([0]),Jt(n),Lt(t),Dt(It(e))]))}var Xt=n(87268);const Zt=5e4,en=1e9,tn=1e14,nn=31,rn=ot({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(e=>{let[t,n]=e;return[t,new Xt.c(n).times(tn)]}));let an=function(e){return e[e["Iris"]=5]="Iris",e[e["Ceres"]=6]="Ceres",e}({}),on=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),sn=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),ln=function(e){return e[e["Account"]=10]="Account",e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["Oracle"]=20]="Oracle",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["Name"]=30]="Name",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["ChannelClientReconnectTx"]=575]="ChannelClientReconnectTx",e[e["Channel"]=58]="Channel",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({});const{Buffer:cn}=Xe;function dn(e){return{serialize(t,n){let{buildTx:r}=n;return ArrayBuffer.isView(t)?cn.from(t):"string"===typeof t&&t.startsWith("tx_")?It(t):It(r({...t,...null!=e&&{tag:e}}))},deserialize(t,n){let{unpackTx:r}=n;const a=r(kt(t,pt.Transaction));if(null!=e&&a.tag!==e)throw new R("Tag",ln[e],ln[a.tag]);return a}}}function un(e){return{serialize(t,n){return t.map((t=>e.serialize(t,n)))},deserialize(t,n){return t.map((t=>e.deserialize(t,n)))}}}function mn(e,t){return{serialize(e,n){let{buildTx:r}=n;return It(r({tag:ln.Mtree,values:Object.entries(e).map((e=>{let[n,a]=e;return{tag:ln.MtreeValue,key:It(n),value:It(r({...a,tag:t}))}}))}))},deserialize(n,r){let{unpackTx:a}=r;const{values:i}=a(kt(n,pt.Transaction),ln.Mtree);return Object.fromEntries(i.filter((t=>{let{key:n}=t;return e!==pt.ContractAddress||32===n.length})).map((n=>{let{key:r,value:i}=n;return[kt(r,e),a(kt(i,pt.Transaction),t)]})))},recursiveType:!0}}function pn(e,t){return{...t,serialize(n,r){return t.serialize(null!==n&&void 0!==n?n:e,r)}}}n(96224),n(12020),n(97168);const{Buffer:hn}=Xe;function yn(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(null==e)return hn.from([]);if(Number.isInteger(e)||Xt.c.isBigNumber(e)||t){if(Xt.c.isBigNumber(e)||(e=new Xt.c(e)),!e.isInteger())throw new F(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),hn.from(t,"hex")}if("string"===typeof e)return hn.from(e);throw new B}const{Buffer:gn}=Xe;function fn(e,t){const n=gn.from([...It(e),...yn(t)]),r=Dt(n);return kt(r,pt.ContractAddress)}function Nn(e,t,n){function r(e){const t=yn(e,!0);return lt([gn.alloc(32-t.length),t])}const a=Dt(gn.from([...It(e),...r(t),...It(n)]));return kt(a,pt.OracleQueryId)}const Cn=".chain";function wn(e){const[t,n,...r]=e.split(".");if(0!==r.length)throw new R("aens name","including only one dot",e);if(n!==Cn.slice(1))throw new R("aens name",`suffixed with ${Cn}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new R("aens name","not containing emoji",e);let a;try{const r=new URL(`http://${t}.${n}`);if(r.username+r.password+r.port+r.search+r.hash!==""||"/"!==r.pathname)throw new R("aens name","valid",e);a=r.host}catch(i){if(i instanceof TypeError&&i.message.includes("Invalid URL"))throw new R("aens name","valid",e);throw i}if(!/^[a-z0-9.-]+$/i.test(a))throw new R("aens name","without illegal chars",e);if(a.length>63+Cn.length)throw new R("aens name","not too long",e);return a}function Sn(e){return kt(Dt(wn(e)),pt.Name)}function vn(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Rt();return kt(Dt(lt([gn.from(wn(e)),gn.from(t.toString(16).padStart(64,"0"),"hex")])),pt.Commitment)}function Tn(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:gn.from([]);return new Xt.c(gn.from(e).toString("hex"),16).toString(10)}function zn(e){wn(e)}function bn(e){try{return zn(e),!0}catch(t){return!1}}pt.AccountAddress,pt.OracleAddress,pt.ContractAddress,pt.Channel;function xn(e){const t=wn(e).length-Cn.length;return rn[Math.min(t,nn)]}function qn(e){return wn(e).length<13+Cn.length}var An={serialize(e){if(Number(e)<0)throw new R("value","greater or equal to 0",e);return yn(e,!0)},deserialize(e){return Tn(e)}},Pn={serialize(e){return An.serialize(e)},deserialize(e){return+An.deserialize(e)}};function In(e,t){return{...t,serialize(n,r,a){return t.serialize(e(n),r,a)}}}function kn(e,t){return{serialize(n){if((!0!==t||null!=n)&&n!==e)throw new R("ShortUIntConst",e,n);return Pn.serialize(e)},deserialize(t){const n=Pn.deserialize(t);if(n!==e)throw new R("ShortUIntConst",e,n);return e},constValue:e,constValueOptional:!0===t}}const{Buffer:_n}=Xe,On=[pt.AccountAddress,pt.Name,pt.Commitment,pt.OracleAddress,pt.ContractAddress,pt.Channel];function En(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return{serialize(e){const n=e.slice(0,2);if(!dt(n,On))throw new ze(n);if(!dt(n,t))throw new R("Address encoding",t.join(", "),n);const r=On.indexOf(n)+1;return _n.from([...yn(r),...It(e)])},deserialize(e){const n=_n.from(e).readUIntBE(0,1),r=On[n-1];if(null==r)throw new ve(n);if(!dt(r,t))throw new R("Address encoding",t.join(", "),r);return kt(e.subarray(1),r)}}}const{Buffer:Mn}=Xe;function Rn(e,t){return{serialize(e){if(null==e){if(!0===t)return Mn.from([]);throw new R("Encoded data","provided",e)}return It(e)},deserialize(t){return kt(t,e)}}}const{Buffer:Dn}=Xe;var Bn={serialize(e){return Dn.from(e)},deserialize(e){return e}};const $n=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||Xt.c.isBigNumber(e));let Vn=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const Fn={[Vn.AE]:0,[Vn.MILI_AE]:-3,[Vn.MICRO_AE]:-6,[Vn.NANO_AE]:-9,[Vn.PICO_AE]:-12,[Vn.FEMTO_AE]:-15,[Vn.AETTOS]:-18},Hn=(e,t)=>{let{denomination:n=Vn.AETTOS,targetDenomination:r=Vn.AETTOS}=t;if(!$n(e))throw new R("value","a number",e);return new Xt.c("bigint"===typeof e?e.toString():e).shiftedBy(Fn[n]-Fn[r]).toFixed()};var jn={...An,serializeAettos(e,t){return null!==e&&void 0!==e?e:"0"},serialize(e,t,n){let{denomination:r=Vn.AETTOS}=n;return An.serialize(this.serializeAettos(null!=e?Hn(e,{denomination:r}):e,t))}};const Un=15e3,Gn=20,Wn=3,Qn=e=>{var t;const n={[ln.ChannelForceProgressTx]:30,[ln.ChannelOffChainTx]:0,[ln.ChannelOffChainUpdateCallContract]:0,[ln.ChannelOffChainUpdateCreateContract]:0,[ln.ChannelOffChainUpdateDeposit]:0,[ln.ChannelOffChainUpdateWithdraw]:0,[ln.ChannelOffChainUpdateTransfer]:0,[ln.ContractCreateTx]:5,[ln.ContractCallTx]:12,[ln.GaAttachTx]:5,[ln.GaMetaTx]:5,[ln.PayingForTx]:.2},r=null!==(t=n[e])&&void 0!==t?t:1;return new Xt.c(r*Un)},Kn=(e,t,n)=>{let{relativeTtl:r,innerTxSize:a}=n;switch(e){case ln.OracleRegisterTx:case ln.OracleExtendTx:case ln.OracleQueryTx:case ln.OracleResponseTx:return new Xt.c(t).times(Gn).plus(Math.ceil(32e3*r/Math.floor(525600/Wn)));case ln.GaMetaTx:case ln.PayingForTx:return new Xt.c(t).minus(a).times(Gn);default:return new Xt.c(t).times(Gn)}};function Ln(e){const t={[ln.OracleRegisterTx]:"oracleTtlValue",[ln.OracleExtendTx]:"oracleTtlValue",[ln.OracleQueryTx]:"queryTtlValue",[ln.OracleResponseTx]:"responseTtlValue"},{tag:n}=e;return ct(n,t)?e[t[n]]:1}function Jn(e,t,n){const{length:r}=It(e),a=t(e);let i=0;return a.tag!==ln.GaMetaTx&&a.tag!==ln.PayingForTx||(i=It(n(a.tx.encodedTx)).length),Qn(a.tag).plus(Kn(a.tag,r,{relativeTtl:Ln(a),innerTxSize:i})).times(en)}function Yn(e,t,n){let r,a=new Xt.c(0);do{r=a,a=Jn(e(a),t,n)}while(!a.eq(r));return a}var Xn={...jn,serializeAettos(e,t){let{rebuildTx:n,unpackTx:r,buildTx:a,_computingMinFee:i,_pickBiggerFee:o}=t;if(null!=i)return i.toFixed();const s=Yn((e=>n({_computingMinFee:e})),r,a),l=new Xt.c(null!==e&&void 0!==e?e:s);if(s.gt(l)){if(!0===o)return s.toFixed();throw new D(`Fee ${l.toString()} must be bigger than ${s}`)}return l.toFixed()}},Zn={...Pn,serialize(e){return Pn.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,n){let{onNode:r,absoluteTtl:a}=n;if(!0!==a&&0!==e&&null!=e){if(null==r)throw new R("onNode","provided",r);e+=(await r.getCurrentKeyBlock()).height}return e}};function er(e){return{...Pn,async prepare(t,n,r){if(null!=t)return t;const{onNode:a,strategy:i}=r,o=r[e],s="provided (or provide `nonce` instead)";if(null==a)throw new R("onNode",s,a);if(null==o)throw new R("senderId",s,o);return(await a.getAccountNextNonce(o.replace(/^ok_/,"ak_"),{strategy:i}).catch((e=>{if(!ut(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const tr=En(...On);var nr={serialize(e){if(e.length>32)throw new D(`Expected 32 pointers or less, got ${e.length} instead`);return e.map((e=>[yn(e.key),tr.serialize(e.id)]))},deserialize(e){return e.map((e=>{let[t,n]=e;return{key:t.toString(),id:tr.deserialize(n)}}))}};const{Buffer:rr}=Xe;var ar={serialize(e){return rr.from(e)},deserialize(e){return e.toString()}},ir={serialize(e){return ar.serialize(e)},deserialize(e){return ar.deserialize(e)}},or={...jn,serializeAettos(e,t){const n=xn(t.name),r=new Xt.c(null!==e&&void 0!==e?e:n);if(n.gt(r))throw new L(r,n);return r.toFixed()},serialize(e,t,n){return jn.serialize.call(this,e,t,n)}};const sr=En(pt.Name);var lr={...sr,serialize(e){return sr.serialize(bn(e)?Sn(e):e)}};const{Buffer:cr}=Xe,dr=cr.from([1]),ur=cr.from([2]),mr=1024,pr=En(...On);var hr={serialize(e){if(e.length>32)throw new D(`Expected 32 pointers or less, got ${e.length} instead`);return e.map((e=>{let t,{key:n,id:r}=e;if(Mt(r,...On)&&(t=[dr,pr.serialize(r)]),Mt(r,pt.Bytearray)){const e=It(r);if(e.length>mr)throw new R("Raw pointer",`shorter than ${mr+1} bytes`,`${e.length} bytes`);t=[ur,e]}if(null==t)throw new Ce(`Unknown AENS pointer value: ${r}`);return[yn(n),cr.concat(t)]}))},deserialize(e){return e.map((e=>{let[t,n]=e;const r=n.subarray(0,1),a=n.subarray(1);let i;if(r.equals(dr)&&(i=pr.deserialize(a)),r.equals(ur)&&(i=kt(a,pt.Bytearray)),null==i)throw new Ce(`Unknown AENS pointer tag: ${r}`);return{key:t.toString(),id:i}}))}};const{Buffer:yr}=Xe,gr={[an.Iris]:{"contract-create":{vmVersion:[on.Fate2],abiVersion:[sn.Fate]},"contract-call":{vmVersion:[],abiVersion:[sn.Fate,sn.Sophia]},"oracle-call":{vmVersion:[],abiVersion:[sn.NoAbi,sn.Fate]}},[an.Ceres]:{"contract-create":{vmVersion:[on.Fate3],abiVersion:[sn.Fate]},"contract-call":{vmVersion:[],abiVersion:[sn.Fate]},"oracle-call":{vmVersion:[],abiVersion:[sn.NoAbi,sn.Fate]}}};function fr(e,t){var n;const r=gr[e][t];return{vmVersion:null!==(n=r.vmVersion[0])&&void 0!==n?n:on.Fate2,abiVersion:r.abiVersion[0]}}var Nr={serialize(e,t,n){var r;let{consensusProtocolVersion:a=an.Iris}=n;return null!==(r=e)&&void 0!==r||(e=fr(a,"contract-create")),yr.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(an).length&&null!=n.onNode?fr((await n.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,n]=e;return{vmVersion:+t,abiVersion:+n}}};const{Buffer:Cr}=Xe;var wr={serialize(e){return Cr.from([e?1:0])},deserialize(e){return 1===e[0]}};function Sr(e,t,n,r){return e-+Jn(t(e),n,r).dividedBy(en)}var vr={...Pn,serialize(e,t,n){let{tag:r,rebuildTx:a,unpackTx:i,buildTx:o,_computingGasLimit:s}=t,{gasMax:l=6e6}=n;if(null!=s)return Pn.serialize(s);const c=r===ln.GaMetaTx?Zt:Sr(l,(e=>a({_computingGasLimit:e,_pickBiggerFee:!0})),i,o),d=null!==e&&void 0!==e?e:c;if(d>c)throw new D(`Gas limit ${d} must be less or equal to ${c}`);return Pn.serialize(d)}},Tr={...jn,serializeAettos(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:en.toString();if(+e<en)throw new D(`Gas price ${e.toString()} must be bigger than ${en}`);return e}};const{Buffer:zr}=Xe;var br={_getProtocolDetails(e,t){const n=ln.ContractCallTx===t||ln.GaMetaTx===t?"contract-call":"oracle-call";return fr(e,n).abiVersion},serialize(e,t,n){let{tag:r}=t,{consensusProtocolVersion:a=an.Iris}=n;const i=null!==e&&void 0!==e?e:this._getProtocolDetails(a,r);return zr.from([i])},async prepare(e,t,n){let{tag:r}=t;return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(an).length&&null!=n.onNode?this._getProtocolDetails((await n.onNode.getNodeInfo()).consensusProtocolVersion,r):void 0},deserialize(e){return e[0]}};const{Buffer:xr}=Xe;function qr(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new R("value","to be a number",e);if(e>255)throw new R("value","to be less than 256",e);if(!dt(e,t))throw new R("value","to be a value of Enum",e);return xr.from([e])},deserialize(e){if(1!==e.length)throw new R("buffer","to have single element",e.length);const n=e[0];if(!dt(n,t))throw new R("value","to be a value of Enum",n);return n}}}var Ar={serialize(e){return yn(e)},deserialize(e){return e.toString()}},Pr={...jn,async prepare(e,t,n){if(null!=e)return e;const{onNode:r,oracleId:a}=n,i="provided (or provide `queryFee` instead)";if(null==r)throw new R("onNode",i,r);if(null==a)throw new R("oracleId",i,a);return(await r.getOracleByPubkey(a)).queryFee.toString()}},Ir=n(62332);const{Buffer:kr}=Xe;var _r;function Or(e,t){Mr(e,t),t.add(e)}function Er(e,t,n){Mr(e,t),t.set(e,n)}function Mr(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Rr(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function Dr(e,t,n){return Br(e,t),n}function Br(e,t){if(e!==t)throw new TypeError("Private static access of wrong provenance")}const{encode:$r}=Ir;var Vr=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}(Vr||{}),Fr=new WeakMap,Hr=new WeakMap,jr=new WeakMap,Ur=new WeakMap,Gr=new WeakMap,Wr=new WeakMap,Qr=new WeakSet,Kr=new WeakSet;class Lr{get isComplete(){return(0,z.c)(this,Hr)}constructor(e,t,n,r){if(Or(this,Kr),Or(this,Qr),Er(this,Fr,{writable:!0,value:void 0}),Er(this,Hr,{writable:!0,value:!0}),Er(this,jr,{writable:!0,value:void 0}),Er(this,Ur,{writable:!0,value:void 0}),Er(this,Gr,{writable:!0,value:void 0}),Er(this,Wr,{writable:!0,value:void 0}),(0,b.c)(this,Ur,t),(0,b.c)(this,Gr,n),(0,b.c)(this,Wr,r),(0,b.c)(this,Fr,e[0].toString("hex")),(0,b.c)(this,jr,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=(0,z.c)(this,jr)[(0,z.c)(this,Fr)])Object.entries((0,z.c)(this,jr)).forEach((e=>{let[t,n]=e;if(Dr(Lr,Lr,Jr).call(Lr,n)!==t)throw new pe;const{type:r}=Dr(Lr,Lr,Yr).call(Lr,n);switch(r){case Vr.Branch:n.slice(0,16).filter((e=>e.length)).forEach((e=>{null==(0,z.c)(this,jr)[e.toString("hex")]&&(0,b.c)(this,Hr,!1)}));break;case Vr.Extension:if(null==(0,z.c)(this,jr)[n[1].toString("hex")])throw new he("Can't find a node by hash in extension node");break;case Vr.Leaf:break;default:throw new G(`Unknown MPTree node type: ${r}`)}}));else{if(0!==Object.keys((0,z.c)(this,jr)).length)throw new he("Can't find a node by root hash");(0,b.c)(this,Hr,!1)}}isEqual(e){return(0,z.c)(this,Fr)===(0,z.c)(e,Fr)}serialize(){return[kr.from((0,z.c)(this,Fr),"hex"),Object.entries((0,z.c)(this,jr)).map((e=>{let[t,n]=e;return[kr.from(t,"hex"),n]}))]}get(e){const t=Rr(this,Qr,Xr).call(this,It(e).toString("hex"));return null==t?t:(0,z.c)(this,Wr).call(this,kt(t,pt.Transaction),(0,z.c)(this,Gr))}toObject(){return Object.fromEntries(Rr(this,Kr,Zr).call(this).filter((e=>{let[t]=e;return(0,z.c)(this,Ur)!==pt.ContractAddress||66!==t.length})).map((e=>{let[t,n]=e;return[kt(kr.from(t,"hex"),(0,z.c)(this,Ur)),(0,z.c)(this,Wr).call(this,kt(n,pt.Transaction),(0,z.c)(this,Gr))]})))}}function Jr(e){return kr.from(Dt($r(e))).toString("hex")}function Yr(e){switch(e.length){case 17:return{type:Vr.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new ge(t);const n=t<=1?Vr.Extension:Vr.Leaf,r=[0,2].includes(t)?2:1;return{type:n,...n===Vr.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(r)}}default:throw new ye(e.length)}}function Xr(e){let t=(0,z.c)(this,Fr),n=e;while(1){const e=(0,z.c)(this,jr)[t];if(null==e){if(!this.isComplete)return;throw new G("Can't find node in complete tree")}const{type:r,value:a,path:i}=Dr(_r,_r,Yr).call(_r,e);switch(r){case Vr.Branch:if(0===n.length)return a;t=e[+`0x${n[0]}`].toString("hex"),n=n.substring(1);break;case Vr.Extension:if(n.substring(0,null===i||void 0===i?void 0:i.length)!==i)return;t=e[1].toString("hex"),n=n.substring(i.length);break;case Vr.Leaf:if(i!==n)return;return a;default:throw new G(`Unknown MPTree node type: ${r}`)}}}function Zr(){const e=[],t=(n,r)=>{const a=(0,z.c)(this,jr)[n];if(null==a){if(!this.isComplete)return;throw new G("Can't find node in complete tree")}const{type:i,value:o,path:s}=Dr(_r,_r,Yr).call(_r,a);switch(i){case Vr.Branch:a.slice(0,16).map(((e,t)=>[e,t])).filter((e=>{let[t]=e;return t.length})).forEach((e=>{let[n,a]=e;return t(n.toString("hex"),r+a.toString(16))})),null!=o&&e.push([r,o]);break;case Vr.Extension:t(a[1].toString("hex"),r+s);break;case Vr.Leaf:if(null==o)throw new W;e.push([r+s,o]);break;default:throw new G(`Unknown MPTree node type: ${i}`)}};return t((0,z.c)(this,Fr),""),e}function ea(e,t){return{serialize(e){return e.serialize()},deserialize(n,r){let{unpackTx:a}=r;return new Lr(n,e,t,a)}}}function ta(e){return{serialize(t,n){let{buildTx:r}=n;return It(r({tag:e,payload:t}))},deserialize(t,n){let{unpackTx:r}=n;return r(kt(t,pt.Transaction),e).payload},recursiveType:!0}}_r=Lr;let na=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({});const ra={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n};let aa=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({});const ia=dn(),oa=dn(ln.SignedTx),sa=un(dn(ln.MtreeValue)),la=dn(ln.TreesPoi),ca=mn(pt.ContractAddress,ln.Contract),da=mn(pt.AccountAddress,ln.Account),ua=mn(pt.Bytearray,ln.ContractCall),ma=mn(pt.Channel,ln.Channel),pa=mn(pt.Name,ln.Name),ha=mn(pt.OracleAddress,ln.Oracle),ya=pn(3600,Pn),ga=In((e=>{var t;const n=18e4;if(null!==(t=e)&&void 0!==t||(e=n),e>=1&&e<=n)return e;throw new R("nameTtl",`a number between 1 and ${n} blocks`,e)}),Pn),fa=[{tag:kn(ln.Account),version:kn(1),nonce:Pn,balance:An},{tag:kn(ln.Account),version:kn(2,!0),flags:An,nonce:Pn,balance:An,gaContract:En(pt.ContractAddress,pt.Name),gaAuthFun:Rn(pt.ContractBytearray)},{tag:kn(ln.SignedTx),version:kn(1,!0),signatures:un(Bn),encodedTx:ia},{tag:kn(ln.SpendTx),version:kn(1,!0),senderId:En(pt.AccountAddress),recipientId:En(pt.AccountAddress,pt.Name),amount:jn,fee:Xn,ttl:Zn,nonce:er("senderId"),payload:Rn(pt.Bytearray,!0)},{tag:kn(ln.Name),version:kn(1,!0),accountId:En(pt.AccountAddress),nameTtl:Pn,status:Bn,clientTtl:Pn,pointers:nr},{tag:kn(ln.NamePreclaimTx),version:kn(1,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),commitmentId:En(pt.Commitment),fee:Xn,ttl:Zn},{tag:kn(ln.NameClaimTx),version:kn(2,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),name:ir,nameSalt:An,nameFee:or,fee:Xn,ttl:Zn},{tag:kn(ln.NameUpdateTx),version:kn(1,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),nameId:lr,nameTtl:ga,pointers:nr,clientTtl:ya,fee:Xn,ttl:Zn},{tag:kn(ln.NameUpdateTx),version:kn(2),accountId:En(pt.AccountAddress),nonce:er("accountId"),nameId:lr,nameTtl:ga,pointers:hr,clientTtl:ya,fee:Xn,ttl:Zn},{tag:kn(ln.NameTransferTx),version:kn(1,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),nameId:lr,recipientId:En(pt.AccountAddress,pt.Name),fee:Xn,ttl:Zn},{tag:kn(ln.NameRevokeTx),version:kn(1,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),nameId:lr,fee:Xn,ttl:Zn},{tag:kn(ln.Contract),version:kn(1,!0),owner:En(pt.AccountAddress),ctVersion:Nr,code:Rn(pt.ContractBytearray),log:Rn(pt.ContractBytearray),active:wr,referers:un(En(pt.AccountAddress)),deposit:jn},{tag:kn(ln.ContractCreateTx),version:kn(1,!0),ownerId:En(pt.AccountAddress),nonce:er("ownerId"),code:Rn(pt.ContractBytearray),ctVersion:Nr,fee:Xn,ttl:Zn,deposit:In((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(0===+e)return e;throw new R("deposit","equal 0 (because is not refundable)",e)}),jn),amount:jn,gasLimit:vr,gasPrice:Tr,callData:Rn(pt.ContractBytearray)},{tag:kn(ln.ContractCallTx),version:kn(1,!0),callerId:En(pt.AccountAddress),nonce:er("callerId"),contractId:En(pt.ContractAddress,pt.Name),abiVersion:br,fee:Xn,ttl:Zn,amount:jn,gasLimit:vr,gasPrice:Tr,callData:Rn(pt.ContractBytearray)},{tag:kn(ln.ContractCall),version:kn(2,!0),callerId:En(pt.AccountAddress),callerNonce:Pn,height:Pn,contractId:En(pt.ContractAddress),gasPrice:An,gasUsed:Pn,returnValue:Rn(pt.ContractBytearray),returnType:qr(aa),log:un(Bn)},{tag:kn(ln.Oracle),version:kn(1,!0),accountId:En(pt.AccountAddress),queryFormat:Ar,responseFormat:Ar,queryFee:jn,oracleTtlValue:Pn,abiVersion:br},{tag:kn(ln.OracleRegisterTx),version:kn(1,!0),accountId:En(pt.AccountAddress),nonce:er("accountId"),queryFormat:Ar,responseFormat:Ar,queryFee:jn,oracleTtlType:pn(na.delta,qr(na)),oracleTtlValue:pn(500,Pn),fee:Xn,ttl:Zn,abiVersion:br},{tag:kn(ln.OracleExtendTx),version:kn(1,!0),oracleId:En(pt.OracleAddress,pt.Name),nonce:er("oracleId"),oracleTtlType:pn(na.delta,qr(na)),oracleTtlValue:pn(500,Pn),fee:Xn,ttl:Zn},{tag:kn(ln.OracleQueryTx),version:kn(1,!0),senderId:En(pt.AccountAddress),nonce:er("senderId"),oracleId:En(pt.OracleAddress,pt.Name),query:Ar,queryFee:Pr,queryTtlType:pn(na.delta,qr(na)),queryTtlValue:pn(10,Pn),responseTtlType:pn(na.delta,qr(na)),responseTtlValue:pn(10,Pn),fee:Xn,ttl:Zn},{tag:kn(ln.OracleResponseTx),version:kn(1,!0),oracleId:En(pt.OracleAddress),nonce:er("oracleId"),queryId:Rn(pt.OracleQueryId),response:Ar,responseTtlType:pn(na.delta,qr(na)),responseTtlValue:pn(10,Pn),fee:Xn,ttl:Zn},{tag:kn(ln.ChannelCreateTx),version:kn(2,!0),initiator:En(pt.AccountAddress),initiatorAmount:An,responder:En(pt.AccountAddress),responderAmount:An,channelReserve:An,lockPeriod:An,ttl:Zn,fee:Xn,initiatorDelegateIds:un(En(...On)),responderDelegateIds:un(En(...On)),stateHash:Rn(pt.State),nonce:er("initiator")},{tag:kn(ln.ChannelCloseMutualTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),initiatorAmountFinal:An,responderAmountFinal:An,ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelCloseSoloTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),payload:Rn(pt.Transaction),poi:la,ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelSlashTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),payload:Rn(pt.Transaction),poi:la,ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelDepositTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),amount:An,ttl:Zn,fee:Xn,stateHash:Rn(pt.State),round:Pn,nonce:er("fromId")},{tag:kn(ln.ChannelWithdrawTx),version:kn(1,!0),channelId:En(pt.Channel),toId:En(pt.AccountAddress),amount:An,ttl:Zn,fee:Xn,stateHash:Rn(pt.State),round:Pn,nonce:er("fromId")},{tag:kn(ln.ChannelSettleTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),initiatorAmountFinal:An,responderAmountFinal:An,ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelForceProgressTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),payload:Rn(pt.Transaction),round:Pn,update:Rn(pt.ContractBytearray),stateHash:Rn(pt.State),offChainTrees:Rn(pt.StateTrees),ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelOffChainTx),version:kn(2,!0),channelId:En(pt.Channel),round:Pn,stateHash:Rn(pt.State)},{tag:kn(ln.Channel),version:kn(3,!0),initiator:En(pt.AccountAddress),responder:En(pt.AccountAddress),channelAmount:An,initiatorAmount:An,responderAmount:An,channelReserve:An,initiatorDelegateIds:un(En(...On)),responderDelegateIds:un(En(...On)),stateHash:Rn(pt.State),round:Pn,soloRound:An,lockPeriod:An,lockedUntil:An,initiatorAuth:Rn(pt.ContractBytearray),responderAuth:Rn(pt.ContractBytearray)},{tag:kn(ln.ChannelSnapshotSoloTx),version:kn(1,!0),channelId:En(pt.Channel),fromId:En(pt.AccountAddress),payload:Rn(pt.Transaction),ttl:Zn,fee:Xn,nonce:er("fromId")},{tag:kn(ln.ChannelOffChainUpdateTransfer),version:kn(1,!0),from:En(pt.AccountAddress),to:En(pt.AccountAddress),amount:An},{tag:kn(ln.ChannelOffChainUpdateDeposit),version:kn(1,!0),from:En(pt.AccountAddress),amount:An},{tag:kn(ln.ChannelOffChainUpdateWithdraw),version:kn(1,!0),from:En(pt.AccountAddress),amount:An},{tag:kn(ln.ChannelOffChainUpdateCreateContract),version:kn(1,!0),owner:En(pt.AccountAddress),ctVersion:Nr,code:Rn(pt.ContractBytearray),deposit:An,callData:Rn(pt.ContractBytearray)},{tag:kn(ln.ChannelOffChainUpdateCallContract),version:kn(1,!0),caller:En(pt.AccountAddress),contract:En(pt.ContractAddress),abiVersion:br,amount:An,callData:Rn(pt.ContractBytearray),callStack:Bn,gasPrice:Tr,gasLimit:vr},{tag:kn(ln.ChannelClientReconnectTx),version:kn(1,!0),channelId:En(pt.Channel),round:Pn,role:Ar,pubkey:En(pt.AccountAddress)},{tag:kn(ln.TreesPoi),version:kn(1,!0),accounts:un(ea(pt.AccountAddress,ln.Account)),calls:un(ea(pt.Bytearray,ln.ContractCall)),channels:un(ea(pt.Channel,ln.Channel)),contracts:un(ea(pt.ContractAddress,ln.Contract)),ns:un(ea(pt.Name,ln.Name)),oracles:un(ea(pt.OracleAddress,ln.Oracle))},{tag:kn(ln.StateTrees),version:kn(0,!0),contracts:ta(ln.ContractsMtree),calls:ta(ln.CallsMtree),channels:ta(ln.ChannelsMtree),ns:ta(ln.NameserviceMtree),oracles:ta(ln.OraclesMtree),accounts:ta(ln.AccountsMtree)},{tag:kn(ln.Mtree),version:kn(1,!0),values:sa},{tag:kn(ln.MtreeValue),version:kn(1,!0),key:Bn,value:Bn},{tag:kn(ln.ContractsMtree),version:kn(1,!0),payload:ca},{tag:kn(ln.CallsMtree),version:kn(1,!0),payload:ua},{tag:kn(ln.ChannelsMtree),version:kn(1,!0),payload:ma},{tag:kn(ln.NameserviceMtree),version:kn(1,!0),payload:pa},{tag:kn(ln.OraclesMtree),version:kn(1,!0),payload:ha},{tag:kn(ln.AccountsMtree),version:kn(1,!0),payload:da},{tag:kn(ln.GaAttachTx),version:kn(1,!0),ownerId:En(pt.AccountAddress),nonce:er("ownerId"),code:Rn(pt.ContractBytearray),authFun:Bn,ctVersion:Nr,fee:Xn,ttl:Zn,gasLimit:vr,gasPrice:Tr,callData:Rn(pt.ContractBytearray)},{tag:kn(ln.GaMetaTx),version:kn(2,!0),gaId:En(pt.AccountAddress),authData:Rn(pt.ContractBytearray),abiVersion:br,fee:Xn,gasLimit:vr,gasPrice:Tr,tx:oa},{tag:kn(ln.PayingForTx),version:kn(1,!0),payerId:En(pt.AccountAddress),nonce:er("payerId"),fee:Xn,tx:oa},{tag:kn(ln.GaMetaTxAuthData),version:kn(1,!0),fee:jn,gasPrice:Tr,txHash:Rn(pt.TxHash)}],{decode:Na,encode:Ca}=Ir;function wa(e,t,n,r){const a=e.filter((e=>e.tag.constValue===n));if(0===a.length)throw new Te(`${t[n]} (${n})`,0);if(null==r){const e=a.find((e=>e.version.constValueOptional));if(null==e)throw new G(`Can't find default schema of ${t[n]} (${n})`);r=e.version.constValue}const i=a.find((e=>e.version.constValue===r));if(null==i)throw new Te(`${t[n]} (${n})`,r);return Object.entries(i)}function Sa(e,t,n,r,a){const i=wa(e,t,n.tag,n.version),o=i.map((e=>{let[t,a]=e;return a.serialize(n[t],{...n,...r},n)}));return kt(Ca(o),a)}function va(e,t,n,r,a){const i=Na(It(n)),o=+Tn(i[0]),s=+Tn(i[1]),l=wa(e,t,o,s);if(null!=r&&r!==o)throw new Ce(`Expected ${t[r]} tag, got ${t[o]} instead`);if(i.length!==l.length)throw new R("RLP length",l.length,i.length);return Object.fromEntries(l.map(((e,t)=>{let[n,r]=e;return[n,r.deserialize(i[t],a)]})))}function Ta(e,t){return wa(fa,ln,e,t)}function za(e){let{prefix:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Sa(fa,ln,e,{unpackTx:xa,buildTx:za,rebuildTx:t=>za({...e,...t})},null!==t&&void 0!==t?t:pt.Transaction)}async function ba(e){return await Promise.all(Ta(e.tag,e.version).map((async t=>{let[n,r]=t;null!=r.prepare&&(e[n]=await r.prepare(e[n],e,e))}))),za(e)}function xa(e,t){return va(fa,ln,e,t,{unpackTx:xa})}function qa(e){const t="string"===typeof e&&e.startsWith("tx_")?It(e):e;return kt(Dt(t),pt.TxHash)}function Aa(e){const t=xa(e);if(ln.ContractCreateTx!==t.tag&&ln.GaAttachTx!==t.tag)throw new R("contractTx","a contractCreateTx or gaAttach",t.tag);return fn(t.ownerId,t.nonce)}let Pa=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const Ia=En(pt.OracleAddress),ka={serialize(e){return Ia.serialize(kt(It(e),pt.OracleAddress))},deserialize(e){return kt(It(Ia.deserialize(e)),pt.OracleQueryId)}},_a=[{tag:kn(Pa.AensWildcard),version:kn(1,!0),accountAddress:En(pt.AccountAddress),contractAddress:En(pt.ContractAddress)},{tag:kn(Pa.AensName),version:kn(1,!0),accountAddress:En(pt.AccountAddress),nameId:lr,contractAddress:En(pt.ContractAddress)},{tag:kn(Pa.AensPreclaim),version:kn(1,!0),accountAddress:En(pt.AccountAddress),contractAddress:En(pt.ContractAddress)},{tag:kn(Pa.Oracle),version:kn(1,!0),accountAddress:En(pt.AccountAddress),contractAddress:En(pt.ContractAddress)},{tag:kn(Pa.OracleResponse),version:kn(1,!0),queryId:ka,contractAddress:En(pt.ContractAddress)}];function Oa(e){return Sa(_a,Pa,e,{},pt.Bytearray)}function Ea(e,t){return va(_a,Pa,e,t,{})}const{Buffer:Ma}=Xe,Ra=new WeakMap;function Da(e,t,n){const r=[t];n&&r.push("inner_tx");const a=It(e);return lt([Ma.from(r.join("-")),Dt(a)])}class Ba extends Ze{constructor(e){if(super(),e="string"===typeof e?Ma.from(e,"hex"):e,64!==e.length)throw new R("secretKey","64 bytes",e.length);Ra.set(this,e),this.address=kt(Bt(Ra.get(this)).publicKey,pt.AccountAddress)}static generate(){return new Ba($t().secretKey)}async sign(e,t){return Vt(e,Ra.get(this))}async signTransaction(e){let{innerTx:t,networkId:n,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==n)throw new R("networkId","provided",n);const a=It(e),i=Da(e,n,!0===t),o=[await this.sign(i,r)];return za({tag:ln.SignedTx,encodedTx:a,signatures:o})}async signMessage(e,t){return this.sign(Ut(e),t)}async signTypedData(e,t){let{name:n,version:r,networkId:a,contractAddress:i,...o}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=Yt(e,t,{name:n,version:r,networkId:a,contractAddress:i}),l=await this.sign(s,o);return kt(l,pt.Signature)}async signDelegationToContract(e){let{networkId:t,consensusProtocolVersion:n,isOracle:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==r){const e=null!=n?an[n]:"unknown";console.warn(`AccountMemory:signDelegationToContract: isOracle is not set. By default, sdk would generate an AENS preclaim delegation signature, but it won't be the same as the oracle delegation signature in Ceres (current protocol is ${e}).`)}if(n===an.Ceres){const n=Oa({tag:!0===r?Pa.Oracle:Pa.AensPreclaim,accountAddress:this.address,contractAddress:e});return this.signDelegation(n,{networkId:t})}if(null==t)throw new R("networkId","provided",t);const a=lt([Ma.from(t),It(this.address),It(e)]),i=await this.sign(a);return kt(i,pt.Signature)}async signNameDelegationToContract(e,t){let{networkId:n,consensusProtocolVersion:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(r===an.Ceres){const r=Oa({tag:Pa.AensName,accountAddress:this.address,contractAddress:e,nameId:t});return this.signDelegation(r,{networkId:n})}if(null==n)throw new R("networkId","provided",n);const a=lt([Ma.from(n),It(this.address),It(Sn(t)),It(e)]),i=await this.sign(a);return kt(i,pt.Signature)}async signAllNamesDelegationToContract(e){let{networkId:t,consensusProtocolVersion:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(n===an.Ceres){const n=Oa({tag:Pa.AensWildcard,accountAddress:this.address,contractAddress:e});return this.signDelegation(n,{networkId:t})}if(null==t)throw new R("networkId","provided",t);const r=lt([Ma.from(t),It(this.address),Ma.from("AENS"),It(e)]),a=await this.sign(r);return kt(a,pt.Signature)}async signOracleQueryDelegationToContract(e,t){let{networkId:n,consensusProtocolVersion:r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(r===an.Ceres){const r=Oa({tag:Pa.OracleResponse,queryId:t,contractAddress:e});return this.signDelegation(r,{networkId:n})}const a=It(t),i=It(this.address);if(0===a.compare(i))throw new R("oracleQueryId","not equal to account address",t);if(null==n)throw new R("networkId","provided",n);const o=lt([Ma.from(n),a,It(e)]),s=await this.sign(o);return kt(s,pt.Signature)}async signDelegation(e){let{networkId:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==t)throw new R("networkId","provided",t);const n=lt([jt,new Uint8Array([1]),Ma.from(t),It(e)]),r=await this.sign(n);return kt(r,pt.Signature)}}var $a=n(87864);function Va(e,t,n){const r=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),a=r(e),i=r(t),o=r(n),s=Math.max(...a,...i,...o)+1,l=e=>e.reverse().reduce(((e,t,n)=>e+t*s**n),0),c=l(a),d=l(i),u=l(o);return c>=d&&c<u}const Fa=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,n){var r;const a=t.headers.get("__queue");t.headers.delete("__queue");const i=async()=>n(t);if(null==a)return i();const o=(null!==(r=e.get(a))&&void 0!==r?r:Promise.resolve()).then(i);return e.set(a,o.then((async()=>it(750)),(()=>{}))),o}},position:"perCall"}},Ha=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const a=JSON.stringify([t.url,t.body]),i=null!==(r=e.get(a))&&void 0!==r?r:n(t);e.set(a,i);try{return await i}finally{e.delete(a)}}},position:"perCall"}},ja=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const a=JSON.stringify([t.url,t.body]),i=null!==(r=e.get(a))&&void 0!==r?r:n(t);return e.set(a,i),i}},position:"perCall"}},Ua=e=>({policy:{name:"error-formatter",async sendRequest(t,n){try{return await n(t)}catch(a){var r;if(!(a instanceof rt.y)||null==a.request)throw a;if(null==(null===(r=a.response)||void 0===r?void 0:r.bodyAsText))throw a;let t;try{t=JSON.parse(a.response.bodyAsText)}catch(i){throw a}a.message=`${new URL(a.request.url).pathname.slice(1)} error`;const n=e(t);throw""!==n&&(a.message+=`:${n}`),a}}},position:"perCall"}),Ga=(e,t,n,r,a)=>({name:"version-check",async sendRequest(i,o){if(new URL(i.url).pathname===t)return o(i);const s=await n;if(s instanceof Error)throw s;const l=[s,r,a];if(!Va(...l))throw new U(e,...l);return o(i)}}),Wa=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(n,r){const a=[200,400,403,410,500],i=new Array(e).fill(0).map(((t,n)=>((n+1)/e)**2)),o=i.reduce(((e,t)=>e+t)),s=i.map((e=>e/o*t));let l=new rt.y("Not expected to be thrown");for(let t=0;t<=e;t+=1){0!==t&&await it(s[t-1]);try{return await r(n)}catch(u){var c,d;if(!(u instanceof rt.y))throw u;if(a.includes(null!==(c=null===(d=u.response)||void 0===d?void 0:d.status)&&void 0!==c?c:0))throw u;l=u}}throw l}},position:"perCall"});var Qa=n(33992),Ka=n(78768);const La={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{serializedName:"target",type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},Ja={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Ya={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{serializedName:"target",required:!0,type:{name:"String"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{type:{name:"String"}}}},nonce:{serializedName:"nonce",type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},Xa={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},Za={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{serializedName:"height",required:!0,type:{name:"String"}}}}},ei={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}}}}},ti={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},ni={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{serializedName:"block_height",required:!0,type:{name:"String"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ri={serializedName:"Tx",type:{name:"Composite",className:"Tx",uberParent:"Tx",polymorphicDiscriminator:{serializedName:"type",clientName:"type"},modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",type:{name:"String"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{serializedName:"responder_amount",type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",type:{name:"String"}},lockPeriod:{serializedName:"lock_period",type:{name:"String"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{serializedName:"round",type:{name:"String"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",type:{name:"String"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{serializedName:"query_fee",type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{serializedName:"name_salt",type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{serializedName:"name_ttl",type:{name:"String"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",type:{name:"String"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{serializedName:"vm_version",type:{name:"String"}},deposit:{serializedName:"deposit",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},gasPrice:{serializedName:"gas_price",type:{name:"String"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{serializedName:"version",required:!0,type:{name:"String"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},ai={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ii={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},oi={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},si={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{serializedName:"value",required:!0,type:{name:"String"}}}}},li={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},ci={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{serializedName:"count",required:!0,type:{name:"String"}}}}},di={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ui={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{serializedName:"balance",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},mi={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{serializedName:"next_nonce",required:!0,type:{name:"String"}}}}},pi={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},hi={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},yi={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},gi={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{serializedName:"amount",type:{name:"String"}},gas:{serializedName:"gas",type:{name:"String"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},fi={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},Ni={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Ci={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},wi={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{serializedName:"caller_nonce",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},Si={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},vi={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},Ti={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{serializedName:"height",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},gasUsed:{serializedName:"gas_used",required:!0,type:{name:"String"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},zi={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},bi={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},xi={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}}}}},qi={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Ai={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Pi={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}}}}},Ii={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},ki={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{serializedName:"sender_nonce",required:!0,type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}}}}},_i={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{serializedName:"ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},Oi={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{serializedName:"channel_amount",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},soloRound:{serializedName:"solo_round",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},lockedUntil:{serializedName:"locked_until",required:!0,type:{name:"String"}}}}},Ei={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},Mi={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{serializedName:"solutions",required:!0,type:{name:"String"}},difficulty:{serializedName:"difficulty",required:!0,type:{name:"String"}},hashrate:{serializedName:"hashrate",required:!0,type:{name:"String"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{serializedName:"peer_count",required:!0,type:{name:"String"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{serializedName:"pending_transactions_count",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{serializedName:"top_block_height",required:!0,type:{name:"String"}}}}},Ri={type:{name:"Composite",className:"Protocol",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}},effectiveAtHeight:{serializedName:"effective_at_height",required:!0,type:{name:"String"}}}}},Di={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{serializedName:"inbound",required:!0,type:{name:"String"}},outbound:{serializedName:"outbound",required:!0,type:{name:"String"}}}}},Bi={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},$i={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},abiVersion:{serializedName:"abi_version",type:{name:"String"}}}}},Vi={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{serializedName:"fee",required:!0,type:{name:"String"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}}}}},Fi={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{serializedName:"query_fee",required:!0,type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Hi={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},ji={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ui={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{serializedName:"name_salt",required:!0,type:{name:"String"}},nameFee:{serializedName:"name_fee",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Gi={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{serializedName:"name_ttl",required:!0,type:{name:"String"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{serializedName:"client_ttl",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Wi={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Qi={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},Ki={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},Li={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},Ji={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{serializedName:"initiator_amount",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{serializedName:"responder_amount",required:!0,type:{name:"String"}},channelReserve:{serializedName:"channel_reserve",required:!0,type:{name:"String"}},lockPeriod:{serializedName:"lock_period",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},Yi={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},Xi={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}}}}},Zi={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},eo={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},to={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},no={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},ro={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{serializedName:"initiator_amount_final",required:!0,type:{name:"String"}},responderAmountFinal:{serializedName:"responder_amount_final",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",required:!0,type:{name:"String"}}}}},ao={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},io={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{serializedName:"round",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}}}}},oo={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},so={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{serializedName:"port",required:!0,type:{name:"String"}},firstSeen:{serializedName:"first_seen",required:!0,type:{name:"String"}},lastSeen:{serializedName:"last_seen",required:!0,type:{name:"String"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{serializedName:"top_difficulty",required:!0,type:{name:"String"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},lo={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},co={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{serializedName:"blocked",required:!0,type:{name:"String"}}}}},uo={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{serializedName:"inbound",type:{name:"String"}},outbound:{serializedName:"outbound",type:{name:"String"}}}}},mo={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{serializedName:"verified",type:{name:"String"}},unverified:{serializedName:"unverified",type:{name:"String"}}}}},po={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ho={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},yo={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},go={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{serializedName:"accounts",type:{name:"String"}},contracts:{serializedName:"contracts",type:{name:"String"}},contractOracles:{serializedName:"contract_oracles",type:{name:"String"}},locked:{serializedName:"locked",type:{name:"String"}},oracles:{serializedName:"oracles",type:{name:"String"}},oracleQueries:{serializedName:"oracle_queries",type:{name:"String"}},pendingRewards:{serializedName:"pending_rewards",type:{name:"String"}},total:{serializedName:"total",type:{name:"String"}}}}},fo={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},No={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},ttl:{serializedName:"ttl",type:{name:"String"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},Co={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{serializedName:"fee",required:!0,type:{name:"String"}},nonce:{serializedName:"nonce",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},wo={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},So={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:ii.type.polymorphicDiscriminator,modelProperties:{...ii.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},vo={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:ii.type.polymorphicDiscriminator,modelProperties:{...ii.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},To={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:ii.type.polymorphicDiscriminator,modelProperties:{...ii.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}}}}},zo={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:ii.type.polymorphicDiscriminator,modelProperties:{...ii.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{serializedName:"vm_version",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{serializedName:"deposit",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},bo={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:ii.type.polymorphicDiscriminator,modelProperties:{...ii.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{serializedName:"abi_version",required:!0,type:{name:"String"}},amount:{serializedName:"amount",required:!0,type:{name:"String"}},gas:{serializedName:"gas",required:!0,type:{name:"String"}},gasPrice:{serializedName:"gas_price",required:!0,type:{name:"String"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},xo={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...yo.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let qo={"Tx.Tx":ri,OffChainUpdate:ii,"OffChainUpdate.OffChainTransfer":So,"OffChainUpdate.OffChainWithdrawal":vo,"OffChainUpdate.OffChainDeposit":To,"OffChainUpdate.OffChainNewContract":zo,"OffChainUpdate.OffChainCallContract":bo};const Ao={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},Po={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},Io={parameterPath:"intAsString",mapper:{defaultValue:!1,serializedName:"int-as-string",type:{name:"Boolean"}}},ko={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},_o={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},Oo={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},Eo={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},Mo={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},Ro={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Do={parameterPath:"body",mapper:pi},Bo={parameterPath:"body",mapper:zi},$o={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},Vo={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},Fo={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},Ho={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},jo={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}};class Uo extends Qa.w{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-node/1.0.0-beta.1",o=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,s={...a,...t,userAgentOptions:{userAgentPrefix:o},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(s),this.$host=e}getTopHeader(e){return this.sendOperationRequest({options:e},Wo)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},Qo)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},Ko)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},Lo)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},Jo)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Yo)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},Xo)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Zo)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},es)}getMicroBlockTransactionByHashAndIndex(e,t,n){return this.sendOperationRequest({hash:e,index:t,options:n},ts)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ns)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},rs)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},as)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},is)}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},os)}getAccountByPubkeyAndHeight(e,t,n){return this.sendOperationRequest({pubkey:e,height:t,options:n},ss)}getAccountByPubkeyAndHash(e,t,n){return this.sendOperationRequest({pubkey:e,hash:t,options:n},ls)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},cs)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},ds)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},us)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ms)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ps)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},hs)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},ys)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},gs)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},fs)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ns)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Cs)}getOracleQueryByPubkeyAndQueryId(e,t,n){return this.sendOperationRequest({pubkey:e,queryId:t,options:n},ws)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},Ss)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},vs)}getPeerPubkey(e){return this.sendOperationRequest({options:e},Ts)}getStatus(e){return this.sendOperationRequest({options:e},zs)}getChainEnds(e){return this.sendOperationRequest({options:e},bs)}}const Go=Ka.O(r,!1),Wo={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:La},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},Qo={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:Ya},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},Ko={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Xa},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},Lo={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:Za},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},Jo={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:Ya},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},Yo={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Ya},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},Xo={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Ya},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,_o],headerParameters:[Ao],serializer:Go},Zo={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:ei},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},es={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:ti},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},ts={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:ni},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko,Oo],headerParameters:[Ao],serializer:Go},ns={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:ci},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},rs={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:di},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},as={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:di},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},is={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:di},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,_o],headerParameters:[Ao],serializer:Go},os={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ui},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},ss={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:ui},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0},410:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,_o,Eo],headerParameters:[Ao],serializer:Go},ls={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ui},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko,Eo],headerParameters:[Ao],serializer:Go},cs={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:ti},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},ds={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:mi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io,Mo],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},us={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:Ni},400:{bodyMapper:Ja,isError:!0},403:{bodyMapper:Ja,isError:!0}},requestBody:Do,queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao,Ro],mediaType:"json",serializer:Go},ms={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ni},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},ps={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:vi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0},410:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,ko],headerParameters:[Ao],serializer:Go},hs={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:bi},400:{bodyMapper:Ja,isError:!0}},requestBody:Bo,queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao,Ro],mediaType:"json",serializer:Go},ys={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:xi},400:{bodyMapper:Ja,isError:!0},404:{isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},gs={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:qi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},fs={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:Ai},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},Ns={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Pi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},Cs={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:Ii},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io,$o,Vo,Fo],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},ws={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:ki},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo,Ho],headerParameters:[Ao],serializer:Go},Ss={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:_i},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,jo],headerParameters:[Ao],serializer:Go},vs={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Oi},400:{bodyMapper:Ja,isError:!0},404:{bodyMapper:Ja,isError:!0}},queryParameters:[Io],urlParameters:[Po,Eo],headerParameters:[Ao],serializer:Go},Ts={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:Ei}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},zs={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:Mi}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go},bs={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},queryParameters:[Io],urlParameters:[Po],headerParameters:[Ao],serializer:Go};function xs(e,t,n){As(e,t),t.set(e,n)}function qs(e,t){As(e,t),t.add(e)}function As(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ps(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}const Is=["balance","queryFee","fee","amount","nameFee","channelAmount","initiatorAmount","responderAmount","channelReserve","initiatorAmountFinal","responderAmountFinal","gasPrice","deposit"],ks=["time","gas","gasUsed","nameSalt","nonce","nextNonce","height","blockHeight","topBlockHeight","ttl","nameTtl","clientTtl","inbound","outbound","peerCount","pendingTransactionsCount","effectiveAtHeight","version","solutions","round"];var _s=new WeakSet,Os=new WeakSet,Es=new WeakSet;class Ms extends Uo{constructor(){super(...arguments),qs(this,Es),qs(this,Os),qs(this,_s)}async sendOperationRequest(e,t){const n=ot(e,(e=>{let[t,n]=e;return[t,Ps(this,Os,Ds).call(this,n)]}));return Ps(this,Es,Bs).call(this,await super.sendOperationRequest(n,t))}}function Rs(e,t){return Array.isArray(e)?e.map((e=>Ps(this,_s,Rs).call(this,e,t))):null!=e&&"object"===typeof e?ot(e,(e=>{let[n,r]=e;return null==r?[n,r]:Is.some((e=>e===n))?[n,t.bigInt(r)]:ks.some((e=>e===n))?[n,t.number(r)]:[n,Ps(this,_s,Rs).call(this,r,t)]})):e}function Ds(e){return Ps(this,_s,Rs).call(this,e,{bigInt:e=>e instanceof Xt.c?e.toFixed():e.toString(),number:e=>e.toString()})}function Bs(e){return Ps(this,_s,Rs).call(this,e,{bigInt:e=>BigInt(e),number:e=>+e})}var $s=new WeakMap;class Vs extends Ms{constructor(e){let{ignoreVersion:t=!1,retryCount:n=3,retryOverallDelay:r=800,...a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(e,{allowInsecureConnection:!0,additionalPolicies:[Fa(),Ha(),Wa(n,r),Ua((e=>` ${e.reason}`))],...a}),xs(this,$s,{writable:!0,value:void 0}),!t){const e=this.getStatus(),t=e.then((e=>{let{nodeVersion:t}=e;return t}),(e=>e));(0,b.c)(this,$s,e.then((e=>{let{networkId:t}=e;return t}),(e=>e))),this.pipeline.addPolicy(Ga("node","/v3/status",t,"6.2.0","7.0.0"))}this.intAsString=!0}async getNetworkId(){var e;null!==(e=(0,z.c)(this,$s))&&void 0!==e||(0,b.c)(this,$s,this.getStatus().then((e=>{let{networkId:t}=e;return t})));const t=await(0,z.c)(this,$s);if(t instanceof Error)throw t;return t}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:n,topBlockHeight:r}=await this.getStatus(),a=n.filter((e=>{let{effectiveAtHeight:t}=e;return r>=t})).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==an[a]){const e=a.toString(),t=Object.values(an).filter((e=>"number"===typeof e)).map((e=>+e)),n=Math.min(...t).toString(),r=(Math.max(...t)+1).toString();throw new U("consensus protocol",e,n,r)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:a}}}function Fs(e){var t;const n=xa(e);switch(n.tag){case ln.SignedTx:return Fs(za(n.encodedTx));case ln.GaMetaTx:return n.gaId;default:}const r=null===(t=Ta(n.tag,n.version).find((e=>{let[t]=e;return"nonce"===t})))||void 0===t?void 0:t[1];if(null==r)throw new E(`Transaction doesn't have nonce: ${ln[n.tag]}`);if(!("senderKey"in r))throw new W;const a=n[r.senderKey];return a.replace(/^ok_/,"ak_")}function Hs(e){let{innerTx:t,gasUsed:n,queryFee:r,isInitiator:a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const i=xa(e);if(i.tag===ln.SignedTx)throw new D("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let o=0n;return"fee"in i&&"freeloader"!==t&&(o+=BigInt(i.fee)),i.tag===ln.NameClaimTx&&(o+=BigInt(i.nameFee)),i.tag===ln.OracleQueryTx&&(o+=BigInt(i.queryFee)),i.tag===ln.OracleResponseTx&&(o-=BigInt(null!==r&&void 0!==r?r:0)),i.tag===ln.ChannelSettleTx&&(!0===a&&(o-=BigInt(i.initiatorAmountFinal)),!1===a&&(o-=BigInt(i.responderAmountFinal))),(i.tag===ln.SpendTx&&i.senderId!==i.recipientId||i.tag===ln.ContractCreateTx||i.tag===ln.ContractCallTx||i.tag===ln.ChannelDepositTx)&&"fee-payer"!==t&&(o+=BigInt(i.amount)),i.tag===ln.ContractCreateTx&&(o+=BigInt(i.deposit)),i.tag!==ln.ContractCreateTx&&i.tag!==ln.ContractCallTx&&i.tag!==ln.GaAttachTx&&i.tag!==ln.GaMetaTx||"freeloader"===t||(o+=BigInt(i.gasPrice)*BigInt(null!==n&&void 0!==n?n:i.gasLimit)),i.tag!==ln.GaMetaTx&&i.tag!==ln.PayingForTx||(o+=Hs(za(i.tx.encodedTx),i.tag===ln.PayingForTx?{innerTx:"fee-payer"}:{})),o}function js(e,t,n){const r=xa(e,ln.SignedTx);if(r.encodedTx.tag===ln.GaMetaTx)return Hs(za(r.encodedTx),n);const a=za(r.encodedTx),i=Fs(a),[o,s]=[!0,!1].map((e=>Ft(Da(a,t,e),r.signatures[0],i)));if(!o&&!s)throw new E("Can't verify signature");return Hs(za(r.encodedTx),{...o&&{innerTx:"freeloader"},...n})}async function Us(e,t){let{isMined:n,...r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=xa(e);const i=a.tag===ln.SignedTx,o=i&&!0===n&&qa(e);if(a.tag===ln.SignedTx&&(a=a.encodedTx),null==r.gasUsed&&!1!==o&&[ln.ContractCreateTx,ln.ContractCallTx,ln.GaAttachTx,ln.GaMetaTx].includes(a.tag)){const{callInfo:e,gaInfo:n}=await t.getTransactionInfoByHash(o),a=null!==e&&void 0!==e?e:n;if(null==a)throw new G(`callInfo and gaInfo is not available for transaction ${o}`);r.gasUsed=a.gasUsed}if(null==r.queryFee&&ln.OracleResponseTx===a.tag&&(r.queryFee=(await t.getOracleByPubkey(a.oracleId)).queryFee.toString()),null==r.isInitiator&&ln.ChannelSettleTx===a.tag&&!0!==n){const{initiatorId:e}=await t.getChannelByPubkey(a.channelId);r.isInitiator=a.fromId===e}return i?js(e,await t.getNetworkId(),r):Hs(e,r)}const{Buffer:Gs}=Xe,Ws=[];async function Qs(e,t,n){const r=Fs(za(e)),[a,{height:i},{consensusProtocolVersion:o,nodeNetworkId:s}]=await Promise.all([t.getAccountByPubkey(r).catch((e=>{if(!ut(e))throw e;return{id:r,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Ws.map((async r=>r(e,{node:t,account:a,height:i,consensusProtocolVersion:o,nodeNetworkId:s,parentTxTypes:n}))))).flat()}async function Ks(e,t){const n=new Vs(t.$host,{ignoreVersion:!0,pipeline:t.pipeline.clone(),additionalPolicies:[ja()]});return Qs(xa(e),n,[])}function Ls(e,t){let{_expectedMineRate:n=18e4,_microBlockCycle:r=3e3,_maxPollInterval:a=5e3}=t;const i={block:n,microblock:r}[e];return Math.min(i/3,a)}Ws.push(((e,t)=>{let{account:n,nodeNetworkId:r,parentTxTypes:a}=t;if(e.tag!==ln.SignedTx)return[];const{encodedTx:i,signatures:o}=e;if(null==(null!==i&&void 0!==i?i:o))return[];if(1!==o.length)return[];const s=Gs.from([r,...a.includes(ln.PayingForTx)?["inner_tx"]:[]].join("-")),l=It(za(i)),c=lt([s,l]),d=lt([s,Dt(l)]);return Ft(c,o[0],n.id)||Ft(d,o[0],n.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,t)=>{let n,{node:r,parentTxTypes:a}=t;return"encodedTx"in e&&(n=e.encodedTx),"tx"in e&&(n=e.tx),null==n?[]:Qs(n,r,[...a,e.tag])}),((e,t)=>{let{height:n}=t;return"ttl"in e?0===e.ttl||e.ttl>=n?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${n}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]}),(async(e,t)=>{let{account:n,parentTxTypes:r,node:a}=t;if(0!==r.length)return[];const i=await Us(za(e),a).catch((()=>0n));return i<=n.balance?[]:[{message:`Account balance ${n.balance} is not enough to execute the transaction that costs ${i}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),((e,t)=>{let n,{account:r}=t;return e.tag===ln.SignedTx&&"generalized"===r.kind&&0!==e.signatures.length&&(n="Generalized account can't be used to generate SignedTx with signatures"),e.tag===ln.GaMetaTx&&"basic"===r.kind&&(n="Basic account can't be used to generate GaMetaTx"),null==n?[]:[{message:n,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,t)=>{var n,r;let{consensusProtocolVersion:a}=t;const i=ln.Oracle===e.tag||ln.OracleRegisterTx===e.tag,o=ln.ContractCreateTx===e.tag||ln.GaAttachTx===e.tag,s=ln.ContractCallTx===e.tag||ln.GaMetaTx===e.tag,l=null!==(n=null!==(r=i?"oracle-call":null)&&void 0!==r?r:o?"contract-create":null)&&void 0!==n?n:s?"contract-call":null;if(null==l)return[];const c=gr[a][l];let d;if("abiVersion"in e&&(d={abiVersion:e.abiVersion}),"ctVersion"in e&&(d=e.ctVersion),null==d)throw new W;return!c.abiVersion.includes(d.abiVersion)||o&&!c.vmVersion.includes(d.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(d)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,t)=>{let{node:n}=t;if(ln.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:t}=await n.getContract(e.contractId);return t?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(a){var r;if(!(a instanceof rt.y)||null==(null===(r=a.response)||void 0===r?void 0:r.bodyAsText))throw a;return[{message:JSON.parse(a.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}),((e,t)=>{let{consensusProtocolVersion:n}=t;return ln.GaAttachTx===e.tag&&an.Ceres===n&&1!==e.nonce?[{message:`Account ${e.ownerId} can't become generalized because it is already used`,key:"AccountUsed",checkedKeys:["nonce"]}]:[]}));class Js extends E{constructor(e,t,n){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=n}}async function Ys(e){let{onNode:t}=e;return(await t.getCurrentKeyBlockHeight()).height}async function Xs(e,t){var n;let{blocks:r=5,interval:a,onNode:i,...o}=t;null!==(n=a)&&void 0!==n||(a=Ls("microblock",o));const s=await Ys({onNode:i})+r;do{const t=await i.getTransactionByHash(e);if(-1!==t.blockHeight)return t;await it(a)}while(await Ys({onNode:i})<s);throw new V(r,e)}async function Zs(e,t){var n;let r,{interval:a,onNode:i,...o}=t;null!==(n=a)&&void 0!==n||(a=Ls("block",o));do{null!=r&&await it(a),r=(await i.getCurrentKeyBlockHeight()).height}while(r<e);return r}async function el(e,t){let{confirm:n=3,onNode:r,...a}=t;const{blockHeight:i}=await r.getTransactionByHash(e),o=await Zs(i+n,{onNode:r,...a}),{blockHeight:s}=await r.getTransactionByHash(e);switch(s){case-1:throw new be(e);case i:return o;default:return el(e,{onNode:r,confirm:n,...a})}}async function tl(e,t){let{onNode:n,onAccount:r,verify:a=!0,waitMined:i=!0,confirm:o,innerTx:s,...l}=t;const c=await r.signTransaction(e,{...l,onNode:n,innerTx:s,networkId:await n.getNetworkId()});if(!0===s)return{hash:qa(c),rawTx:c};if(a){const e=await Ks(c,n);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new Js(t,e,c)}}try{let e;try{e=null!=r?`tx-${r.address}`:null}catch(d){e=null}const{txHash:t}=await n.postTransaction({tx:c},null!=e?{requestOptions:{customHeaders:{__queue:e}}}:{});if(i){const e=await Xs(t,{onNode:n,...l}),r={...e,hash:e.hash,rawTx:c};if(null!=o&&+o>0){const e="boolean"===typeof o?void 0:o;return{...r,confirmationHeight:await el(t,{onNode:n,confirm:e,...l})}}return r}return{hash:t,rawTx:c}}catch(d){throw mt(d),Object.assign(d,{rawTx:c,verifyTx:async()=>Ks(c,n)})}}async function nl(e,t){let{height:n,hash:r,onNode:a}=t;return null!=n?a.getAccountByPubkeyAndHeight(e,n):null!=r?a.getAccountByPubkeyAndHash(e,r):a.getAccountByPubkey(e)}async function rl(e,t){let{format:n=Vn.AETTOS,...r}=t;const a=e.startsWith("ok_")?kt(It(e),pt.AccountAddress):e,{balance:i}=await nl(a,r).catch((e=>{if(!ut(e))throw e;return{balance:0n}}));return Hn(i,{targetDenomination:n})}async function al(e){let{onNode:t}=e;return t.getCurrentGeneration()}async function il(e,t){let{onNode:n}=t;return"number"===typeof e?n.getGenerationByHeight(e):n.getGenerationByHash(e)}async function ol(e,t){let{onNode:n}=t;return(await n.getMicroBlockTransactionsByHash(e)).transactions}async function sl(e,t){let{onNode:n}=t;return"number"===typeof e?n.getKeyBlockByHeight(e):n.getKeyBlockByHash(e)}async function ll(e,t){let{onNode:n}=t;return n.getMicroBlockHeaderByHash(e)}const cl=new Map;async function dl(e,t){const n=cl.get(e);if(cl.delete(e),null==n)throw new G("Can't get dry-run request");let r;try{const e="number"===typeof n[0].top?(await sl(n[0].top,{onNode:t})).hash:n[0].top;r=await t.protectedDryRunTxs({top:e,txEvents:n[0].txEvents,txs:n.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(n.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:ra.amount})))})}catch(o){return void n.forEach((e=>{let{reject:t}=e;return t(o)}))}const{results:a,txEvents:i}=r;a.forEach(((e,t)=>{let{result:r,reason:a,...o}=e;const{resolve:s,reject:l,tx:c,accountAddress:d}=n[t];"ok"===r?s({...o,txEvents:i}):l(Object.assign(new Se(a),{tx:c,accountAddress:d}))}))}async function ul(e,t,n){var r;let{top:a,txEvents:i,combine:o,onNode:s}=n;const l=!0===o?[a,i].join():"immediate",c=null!==(r=cl.get(l))&&void 0!==r?r:[];return cl.set(l,c),new Promise(((n,r)=>{var d;c.push({tx:e,accountAddress:t,top:a,txEvents:i,resolve:n,reject:r}),!0===o?null!==(d=c.timeout)&&void 0!==d||(c.timeout=setTimeout((()=>{dl(l,s)}))):dl(l,s)}))}async function ml(e,t){let{onNode:n}=t;return n.getContractCode(e)}async function pl(e,t){let{onNode:n}=t;return n.getContract(e)}async function hl(e,t){let{onNode:n}=t;return n.getNameEntryByName(e)}async function yl(e,t,n){let{verify:r=!0,resolveByNode:a=!1,onNode:i}=n;if(bn(e)){if(r||a){const n=await i.getNameEntryByName(e),r=n.pointers.find((e=>e.key===t));if(null==r)throw new K(e,t);if(a)return r.id}return Sn(e)}try{return It(e),e}catch(o){throw new J(`Invalid name or address: ${e}`)}}async function gl(e,t){const n=await ba({...t,tag:ln.NameRevokeTx,nameId:e,accountId:t.onAccount.address});return tl(n,t)}async function fl(e,t,n){let{extendPointers:r,...a}=n;const i={...!0===r&&Object.fromEntries((await hl(e,a)).pointers.map((e=>{let{key:t,id:n}=e;return[t,n]}))),...t},o=Object.values(i).some((e=>Mt(e,pt.Bytearray))),s=(await a.onNode.getNodeInfo()).consensusProtocolVersion===an.Iris;if(o&&s)throw new H("Raw pointers are available only in Ceres, the current protocol is Iris");const l=await ba({...a,tag:ln.NameUpdateTx,version:o?2:1,nameId:e,accountId:a.onAccount.address,pointers:Object.entries(i).map((e=>{let[t,n]=e;return{key:t,id:n}}))});return tl(l,a)}async function Nl(e,t,n){const r=await ba({...n,tag:ln.NameTransferTx,nameId:e,accountId:n.onAccount.address,recipientId:t});return tl(r,n)}async function Cl(e,t){const n=await hl(e,t);return Object.freeze({...n,id:n.id,owner:n.owner,async update(n,r){return{...await fl(e,n,{...t,...r}),...await Cl(e,{...t,...r})}},async transfer(n,r){return{...await Nl(e,n,{...t,...r}),...await Cl(e,{...t,...r})}},async revoke(n){return gl(e,{...t,...n})},async extendTtl(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{...await fl(e,{},{...t,...r,nameTtl:n,extendPointers:!0}),...await Cl(e,{...t,...r})}}})}async function wl(e,t,n){const r=await ba({...n,tag:ln.NameClaimTx,accountId:n.onAccount.address,nameSalt:t,name:e}),a=await tl(r,n);if(!qn(e)){const t=null!=a.blockHeight&&a.blockHeight>0?await Cl(e,n):{};return Object.assign(a,t)}return a}async function Sl(e,t){const n=Rt(),r=vn(e,n),a=await ba({...t,tag:ln.NamePreclaimTx,accountId:t.onAccount.address,commitmentId:r});return Object.freeze({...await tl(a,t),salt:n,commitmentId:r,async claim(r){const{version:a,...i}=t;return wl(e,n,{...i,...r})}})}async function vl(e,t,n){return wl(e,0,{...n,nameFee:t})}async function Tl(e,t,n){return tl(await ba({...n,tag:ln.SpendTx,senderId:n.onAccount.address,recipientId:await yl(t,"account_pubkey",n),amount:e}),n)}async function zl(e,t,n){if(+e<0||+e>1)throw new R("fraction","a number between 0 and 1",e);const r=await yl(t,"account_pubkey",n),a=n.onAccount.address,i=new Xt.c(await rl.bind(n.onAccount)(a,n)),o=i.times(e).integerValue(Xt.c.ROUND_HALF_UP),{fee:s}=xa(await ba({...n,tag:ln.SpendTx,senderId:a,recipientId:r,amount:o}),ln.SpendTx),l=o.plus(s).gt(i)?i.minus(s):o;return tl(await ba({...n,tag:ln.SpendTx,senderId:a,recipientId:r,amount:l}),n)}async function bl(e,t){return tl(await ba({...t,tag:ln.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}function xl(e,t,n){var r;let{interval:a,onNode:i,...o}=n;null!==(r=a)&&void 0!==r||(a=Ls("microblock",o));const s=new Set,l=async()=>{var n;const r=(null!==(n=(await i.getOracleQueriesByPubkey(e)).oracleQueries)&&void 0!==n?n:[]).filter((e=>{let{id:t}=e;return!s.has(t)}));r.forEach((e=>{s.add(e.id),t(e)}))};let c=!1;return(async()=>{while(!c)await l().catch(console.error),await it(a)})(),()=>{c=!0}}async function ql(e,t,n){var r;let a,i,o,{interval:s,onNode:l,...c}=n;null!==(r=s)&&void 0!==r||(s=Ls("microblock",c));do{({response:o,ttl:i}=await l.getOracleQueryByPubkeyAndQueryId(e,t));const n=It(o);if(n.length>0)return n.toString();await it(s),a=await Ys({onNode:l})}while(i>=a);throw new $(a)}async function Al(e,t,n){const r=await n.onNode.getOracleQueryByPubkeyAndQueryId(e,t);return{...r,decodedQuery:It(r.query).toString(),decodedResponse:It(r.response).toString(),respond:async(e,r)=>kl(t,e,{...n,...r}),pollForResponse:async r=>ql(e,t,{...n,...r})}}async function Pl(e,t,n){const r=n.onAccount.address,a=await ba({...n,tag:ln.OracleQueryTx,oracleId:e,senderId:r,query:t}),{nonce:i}=xa(a,ln.OracleQueryTx),o=Nn(r,i,e);return{...await tl(a,n),...await Al(e,o,n)}}async function Il(e){const t=kt(It(e.onAccount.address),pt.OracleAddress),n=await ba({...e,tag:ln.OracleExtendTx,oracleId:t});return{...await tl(n,e),...await _l(t,e)}}async function kl(e,t,n){const r=kt(It(n.onAccount.address),pt.OracleAddress),a=await ba({...n,tag:ln.OracleResponseTx,oracleId:r,queryId:e,response:t});return{...await tl(a,n),...await _l(r,n)}}async function _l(e,t){return{...await t.onNode.getOracleByPubkey(e),queries:(await t.onNode.getOracleQueriesByPubkey(e)).oracleQueries,...ot({pollQueries:xl,postQuery:Pl,respondToQuery:kl,extendOracle:Il,getQuery:Al},(n=>{let[r,a]=n;return[r,function(){for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];const s=i[i.length-1];return null!=s&&"object"===typeof s&&s.constructor===Object?Object.assign(s,{...t,...s}):i.push(t),a(...["extendOracle","respondToQuery"].includes(r)?[]:[e],...i)}]}))}}async function Ol(e,t,n){const r=n.onAccount.address,a=await ba({...n,tag:ln.OracleRegisterTx,accountId:r,queryFormat:e,responseFormat:t});return{...await tl(a,n),...await _l(kt(It(r),pt.OracleAddress),n)}}function El(e,t,n){Rl(e,t),t.set(e,n)}function Ml(e,t){Rl(e,t),t.add(e)}function Rl(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Dl(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}const{Encoder:Bl}=Gt;var $l=new WeakSet,Vl=new WeakSet,Fl=new WeakSet,Hl=new WeakSet,jl=new WeakMap;class Ul{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new D("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new D("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,n){const{callInfo:r}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==r)throw new k(`callInfo is not available for transaction ${e}`);const a=r;return{...Dl(this,$l,Gl).call(this,a,t,void 0,n),result:a}}async _estimateGas(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{result:r}=await this.$call(e,t,{...n,callStatic:!0});if(null==r)throw new W;const{gasUsed:a}=r;return Math.floor(1.25*a)}async $deploy(e,t){var n,r;const{callStatic:a,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===a)return this.$call("init",e,{...i,callStatic:a});if(null!=this.$options.address)throw new te;if(null==i.onAccount)throw new D("Can't deploy without account");const o=i.onAccount.address;if(null==this.$options.bytecode)throw new D("Can't deploy without bytecode");const s=await ba({...i,tag:ln.ContractCreateTx,gasLimit:null!==(n=i.gasLimit)&&void 0!==n?n:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:o}),{hash:l,...c}=await Dl(this,Vl,Wl).call(this,s,"init",{...i,onAccount:i.onAccount});return this.$options.address=Aa(s),{...c,...null!=(null===(r=c.result)||void 0===r?void 0:r.log)&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:o,transaction:l,address:this.$options.address}}async $call(e,t){var n;let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{callStatic:a,top:i,...o}={...this.$options,...r},s=Dl(this,Fl,Ql).call(this,e),{address:l,name:c}=this.$options,d=null!=c?Sn(c):l,{onNode:u}=o;if(null==e)throw new oe;if("init"===e&&!0!==a)throw new re('"init" can be called only via dryRun');if("init"!==e&&null!=o.amount&&Number(o.amount)>0&&!s.payable)throw new ce(o.amount,e);let m;try{if(null==o.onAccount)throw new G("Use fallback account");m=o.onAccount.address}catch(y){const e=!0===a&&(y instanceof F&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof qe||y instanceof G&&"Use fallback account"===y.message);if(!e)throw y;m=ra.pub}const p=this._calldata.encode(this._name,e,t);if(!0===a){if(null==o.nonce){const e=null!=i&&{["number"===typeof i?"height":"hash"]:i},t=await nl(m,{...e,onNode:u}).catch((e=>{if(!ut(e))throw e;return{kind:"basic",nonce:0}}));o.nonce="generalized"===t.kind?0:t.nonce+1}const t={...o,onNode:u,callData:p};let n;if("init"===e){if(null==this.$options.bytecode)throw new D('Can\'t dry-run "init" without bytecode');n=await ba({...t,tag:ln.ContractCreateTx,code:this.$options.bytecode,ownerId:m})}else{if(null==d)throw new ae("Can't dry-run contract without address");n=await ba({...t,tag:ln.ContractCallTx,callerId:m,contractId:d})}const{callObj:r,...a}=await ul(n,m,{...o,top:i});if(null==r)throw new G(`callObj is not available for transaction ${n}`);const s=r;return{...a,...Dl(this,$l,Gl).call(this,s,e,n,o),tx:xa(n),result:s,rawTx:n,hash:qa(n),txData:void 0}}if(null!=i)throw new D("Can't handle `top` option in on-chain contract call");if(null==d)throw new ae("Can't call contract without address");const h=await ba({...o,tag:ln.ContractCallTx,gasLimit:null!==(n=o.gasLimit)&&void 0!==n?n:await this._estimateGas(e,t,o),callerId:m,contractId:d,callData:p});if(null==o.onAccount)throw new D("Can't call contract on chain without account");return Dl(this,Vl,Wl).call(this,h,e,{...o,onAccount:o.onAccount})}$decodeEvents(e){let{omitUnknown:t,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e.map((e=>{const r=e.topics.map((e=>BigInt(e)));let a;try{a=Dl(this,Hl,Kl).call(this,e.address,r[0],n)}catch(l){if(null!==t&&void 0!==t&&t&&l instanceof de)return null;throw l}const i=this._calldata.decodeEvent(a,e.data,r),[o,s]=Object.entries(i)[0];return{name:o,args:s,contract:{name:a,address:e.address}}})).filter((e=>null!=e))}static async initialize(e){let t,{onCompiler:n,onNode:r,bytecode:a,aci:i,address:o,sourceCodePath:s,sourceCode:l,fileSystem:c,validateBytecode:d,...u}=e;if(null==i&&null!=n){let e;var m;if(null!=s&&(e=await n.compile(s)),null!=l&&(e=await n.compileBySourceCode(l,c)),null!=e)i=e.aci,null!==(m=a)&&void 0!==m||(a=e.bytecode)}if(null==i)throw new ie;if(null!=o){o=await yl(o,"contract_pubkey",{resolveByNode:!0,onNode:r});const e=(await r.getNodeInfo()).consensusProtocolVersion===an.Iris;!e&&bn(o)&&(t=o)}if(null==o&&null==l&&null==s&&null==a)throw new ae("Can't create instance by ACI without address");if(null!=o){const e=await pl(o,{onNode:r});if(null==e.active)throw new ne(o)}if(!0===d){if(null==o)throw new ae("Can't validate bytecode without contract address");const e=(await ml(o,{onNode:r})).bytecode;let t=!1;if(null!=a)t=a===e;else if(null!=l){if(null==n)throw new D("Can't validate bytecode without compiler");t=await n.validateBySourceCode(e,l,c)}else if(null!=s){if(null==n)throw new D("Can't validate bytecode without compiler");t=await n.validate(e,s)}if(!t)throw new ee(null!=(null!==l&&void 0!==l?l:s)?"source code":"bytecode")}return new Ll({onCompiler:n,onNode:r,sourceCode:l,sourceCodePath:s,bytecode:a,aci:i,address:o,name:t,fileSystem:c,...u})}constructor(e){var t=this;let{aci:n,...r}=e;Ml(this,Hl),Ml(this,Fl),Ml(this,Vl),Ml(this,$l),El(this,jl,{writable:!0,value:void 0}),this._aci=n;const a=n[n.length-1];if(null==a.contract)throw new D(`The last 'aci' item should have 'contract' key, got ${Object.keys(a)} keys instead`);(0,b.c)(this,jl,a.contract),this._name=(0,z.c)(this,jl).name,this._calldata=new Bl(n),this.$options=r,Object.assign(this,Object.fromEntries((0,z.c)(this,jl).functions.map((e=>{let{name:n,arguments:r,stateful:a}=e;const i="init"!==n&&!a;return[n,async function(){for(var e=arguments.length,a=new Array(e),o=0;o<e;o++)a[o]=arguments[o];const s=a.length===r.length+1?a.pop():{};if("object"!==typeof s)throw new F(`Options should be an object: ${s}`);return"init"===n?t.$deploy(a,{callStatic:i,...s}):t.$call(n,a,{callStatic:i,...s})}]}))))}}function Gl(e,t,n,r){let a,{returnType:i,returnValue:o,log:s}=e;switch(i){case"ok":{const e=Dl(this,Fl,Ql).call(this,t);return{decodedResult:this._calldata.decode(this._name,e.name,o),decodedEvents:this.$decodeEvents(s,r)}}case"revert":a=this._calldata.decodeFateString(o);break;case"error":a=It(o).toString();break;default:throw new G(`Unknown return type: ${i}`)}throw new se(a,n)}async function Wl(e,t,n){const r=await tl(e,{...this.$options,...n});return{hash:r.hash,tx:xa(r.rawTx),txData:r,rawTx:r.rawTx,...null!=r.blockHeight&&await this.$getCallResultByTxHash(r.hash,t,n)}}function Ql(e){const t=(0,z.c)(this,jl).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new le(e)}function Kl(e,t,n){let{contractAddressToName:r}=n;const a={...this.$options.contractAddressToName,...r};if(null!=a[e])return a[e];const i=(e,t)=>JSON.stringify(e)===JSON.stringify(t),o=this._aci.map((e=>{let{contract:t}=e;return t})).filter((e=>null===e||void 0===e?void 0:e.event)),s=o.map((e=>[e.name,e.event.variant])).map((e=>{let[t,n]=e;return n.map((e=>[t,Object.keys(e)[0],Object.values(e)[0]]))})).flat().filter((e=>{let[,n]=e;return BigInt(`0x${Dt(n).toString("hex")}`)===t})).filter(((e,t,n)=>{let[,,r]=e;return!n.slice(0,t).some((e=>i(e[2],r)))}));switch(s.length){case 0:throw new de(t.toString(),e);case 1:return s[0][0];default:throw new ue(e,s)}}const Ll=Ul;var Jl=Ll;function Yl(e){if(!e.startsWith("oq_"))throw new R("oq","oracle query",e)}async function Xl(e,t,n){let{onAccount:r,omitAddress:a,isOracle:i,...o}=n;if(t.length>1)throw new R("ids","shorter than 2",t);const{nodeNetworkId:s,consensusProtocolVersion:l}=await o.onNode.getNodeInfo(),c={networkId:s,consensusProtocolVersion:l};if(0===t.length){if(!0===a)throw new R("omitAddress","equal false",a);return It(await r.signDelegationToContract(e,{...c,isOracle:i}))}const[d]=t;if(bn(d)){if(!0===a)throw new R("omitAddress","equal false",a);return It(await r.signNameDelegationToContract(e,d,c))}if(Yl(d),!0!==a)throw new R("omitAddress","equal true",a);return It(await r.signOracleQueryDelegationToContract(e,d,c))}const{Buffer:Zl}=Xe;async function ec(e,t,n){var r;let{onAccount:a,onCompiler:i,onNode:o,bytecode:s,aci:l,sourceCodePath:c,sourceCode:d,fileSystem:u,...m}=n;const p=a.address;if("generalized"===(await nl(p,{onNode:o})).kind)throw new D(`Account ${p} is already GA`);const h=await Jl.initialize({onAccount:a,onCompiler:i,onNode:o,bytecode:s,aci:l,sourceCodePath:c,sourceCode:d,fileSystem:u}),y=await ba({...m,tag:ln.GaAttachTx,onNode:o,code:await h.$compile(),gasLimit:null!==(r=m.gasLimit)&&void 0!==r?r:await h._estimateGas("init",t,m),ownerId:p,callData:h._calldata.encode(h._name,"init",t),authFun:Dt(e)}),g=Aa(y),{hash:f,rawTx:N}=await tl(y,{onNode:o,onAccount:a,onCompiler:i,...m});return Object.freeze({owner:p,transaction:f,rawTx:N,gaContractId:g})}async function tc(e,t){let{fee:n,gasPrice:r,onNode:a}=t;const{nodeNetworkId:i,consensusProtocolVersion:o}=await a.getNodeInfo();let s=Dt(lt([Zl.from(i),It(e)]));if(o===an.Ceres){if(null==n)throw new R("fee","provided (in Ceres)",n);if(null==r)throw new R("gasPrice","provided (in Ceres)",r);s=Dt(It(za({tag:ln.GaMetaTxAuthData,fee:n,gasPrice:r,txHash:kt(s,pt.TxHash)})))}return s}async function nc(e,t){let{onNode:n}=t;const r=xa(e,ln.SignedTx);if(r.encodedTx.tag!==ln.GaMetaTx)throw new R("transaction","to include GaMetaTx",ln[r.encodedTx.tag]);return tc(za(r.encodedTx.tx.encodedTx),{fee:r.encodedTx.fee,gasPrice:r.encodedTx.gasPrice,onNode:n})}function rc(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,function(n){const r=e();for(var a=arguments.length,i=new Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];const s=Reflect[t](r,...i);return"function"===typeof s&&"get"===t?s.bind(r):s}]))))}const{InvalidTxError:ac,...ic}=a,oc={...ic,...i,...o,...s,createDelegationSignature:Xl,...l};class sc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,Ie.c)(this,"_options",{}),Object.assign(this._options,e)}getContext(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{...this._options,onAccount:rc((()=>this._options.onAccount)),onNode:rc((()=>this._options.onNode)),onCompiler:rc((()=>this._options.onCompiler)),...e}}async buildTx(e){return ba({...this.getContext(),...e})}async initializeContract(e){return Jl.initialize(this.getContext(e))}}Object.assign(sc.prototype,ot(oc,(e=>{let[t,n]=e;return[t,function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];t.length=n.length;const a=t[t.length-1];return t[t.length-1]=this.getContext(a),n(...t)}]})));const lc=sc;var cc=lc;class dc extends cc{constructor(){let{nodes:e=[],...t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),(0,Ie.c)(this,"pool",new Map),e.forEach(((e,t)=>{let{name:n,instance:r}=e;return this.addNode(n,r,0===t)}))}get compilerApi(){if(null==this._options.onCompiler)throw new I("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(this.pool.has(e))throw new fe(e);this.pool.set(e,t),(n||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new Ne(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new Ne("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async e=>{let[t,n]=e;return{name:t,...await n.getNodeInfo()}})))}addresses(){return[]}_resolveAccount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this._options.onAccount;if("string"===typeof e)throw new j("Address in AccountResolver");if("object"===typeof e)return e;throw new F(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e){let{onAccount:t,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._resolveAccount(t).sign(e,n)}async signTransaction(e){let{onAccount:t,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:r,...n})}async signMessage(e){let{onAccount:t,...n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this._resolveAccount(t).signMessage(e,n)}async signTypedData(e,t){let{onAccount:n,...r}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this._resolveAccount(n).signTypedData(e,t,r)}async signDelegationToContract(e){var t,n;let{onAccount:r,...a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null!==(t=a.networkId)&&void 0!==t||(a.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(n=a.consensusProtocolVersion)&&void 0!==n||(a.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(r).signDelegationToContract(e,a)}async signNameDelegationToContract(e,t){var n,r;let{onAccount:a,...i}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return null!==(n=i.networkId)&&void 0!==n||(i.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(r=i.consensusProtocolVersion)&&void 0!==r||(i.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(a).signNameDelegationToContract(e,t,i)}async signAllNamesDelegationToContract(e){var t,n;let{onAccount:r,...a}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null!==(t=a.networkId)&&void 0!==t||(a.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(n=a.consensusProtocolVersion)&&void 0!==n||(a.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(r).signAllNamesDelegationToContract(e,a)}async signOracleQueryDelegationToContract(e,t){var n,r;let{onAccount:a,...i}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return null!==(n=i.networkId)&&void 0!==n||(i.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),null!==(r=i.consensusProtocolVersion)&&void 0!==r||(i.consensusProtocolVersion=null!==this.selectedNodeName?(await this.api.getNodeInfo()).consensusProtocolVersion:void 0),this._resolveAccount(a).signOracleQueryDelegationToContract(e,t,i)}async signDelegation(e){var t;let{onAccount:n,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null!==(t=r.networkId)&&void 0!==t||(r.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(n).signDelegation(e,r)}getContext(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{...this._options,onNode:rc((()=>this.api)),onCompiler:rc((()=>this.compilerApi)),...e,onAccount:null!=e.onAccount?this._resolveAccount(e.onAccount):rc((()=>this._resolveAccount()))}}}class uc extends dc{constructor(){let{accounts:e,...t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),(0,Ie.c)(this,"accounts",{}),null===e||void 0===e||e.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.selectedAddress;if("string"===typeof e){const t=e;if(It(t),null==this.accounts[t])throw new Q(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e){let{select:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{address:n}=e;this.accounts[n]=e,!0===t&&this.selectAccount(n)}removeAccount(e){if(null==this.accounts[e])throw new Q(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(It(e),null==this.accounts[e])throw new Q(e);this.selectedAddress=e}}function mc(e,t){hc(e,t),t.add(e)}function pc(e,t,n){hc(e,t),t.set(e,n)}function hc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function yc(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}var gc=new WeakMap,fc=new WeakMap,Nc=new WeakMap,Cc=new WeakSet,wc=new WeakSet,Sc=new WeakSet,vc=new WeakSet;class Tc{constructor(e,t,n){mc(this,vc),mc(this,Sc),mc(this,wc),mc(this,Cc),pc(this,gc,{writable:!0,value:new Map}),pc(this,fc,{writable:!0,value:0}),pc(this,Nc,{writable:!0,value:void 0}),this.connection=e,(0,b.c)(this,Nc,n),e.connect(yc(this,Cc,zc).bind(this),t)}async request(e,t){return yc(this,wc,bc).call(this,(0,b.c)(this,fc,(0,z.c)(this,fc)+1),e,t),new Promise(((e,t)=>{(0,z.c)(this,gc).set((0,z.c)(this,fc),{resolve:e,reject:t})}))}notify(e,t){yc(this,wc,bc).call(this,void 0,e,t)}}async function zc(e,t){if("2.0"!==(null===e||void 0===e?void 0:e.jsonrpc))throw new Y(JSON.stringify(e));if("result"in e||"error"in e)return void yc(this,vc,qc).call(this,e);const n=e;let r,a;try{if(!(n.method in(0,z.c)(this,Nc)))throw new Ge;const e=n.method;r=await(0,z.c)(this,Nc)[e](n.params,t)}catch(i){mt(i),a=i}if(null!=n.id&&yc(this,Sc,xc).call(this,n.id,n.method,r,null==a||a instanceof De?a:new Ue),null!=a&&!(a instanceof De))throw a}function bc(e,t,n){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=n?{params:n}:{}})}function xc(e,t,n,r){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=r?{error:r.toJSON()}:{result:n}})}function qc(e){let{id:t,error:n,result:r}=e;const a=(0,z.c)(this,gc).get(t);if(null==a)throw new X(t);null!=n?a.reject(De.deserialize(n)):a.resolve(r),(0,z.c)(this,gc).delete(t)}const Ac=1;var Pc=n(32320);const Ic=Pc({storeAsString:!0}),kc=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return ot(e,(e=>{let[t,n]=e;return[t,kc(n)]}));if(Array.isArray(e))return e.map((e=>kc(e)));if("string"===typeof e&&new Xt.c(e).toString(10)===e){const t=new Xt.c(e);return t.toJSON=()=>t.toString(10),t}return e};var _c={stringify:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Ic.stringify(kc(t[0]),...t.slice(1))},parse:Ic.parse};const{Buffer:Oc}=Xe;class Ec extends uc{constructor(e){let{name:t,id:n,type:r,onConnection:a,onSubscription:i,onDisconnect:o,onAskAccounts:s,...l}=e;super(l),(0,Ie.c)(this,"_clients",new Map),this.onConnection=a,this.onSubscription=i,this.onDisconnect=o,this.onAskAccounts=s,this.name=t,this.id=n,this._type=r}_getAccountsForClient(e){let{addressSubscription:t}=e;const{current:n,connected:r}=this.getAccounts();return{current:t.has("current")||t.has("connected")?n:{},connected:t.has("connected")?r:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(Ee.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(Ee.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new Z(e);return t}_isRpcClientConnected(e){return Me.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=Me.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=(0,$a.c)();let n;const r={id:t,status:Me.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new Tc(e,(()=>{this._clients.delete(t),this.onDisconnect(t,n)}),{[Ee.closeConnection]:e=>{n=e,this._disconnectRpcClient(t)},[Ee.connect]:async(e,n)=>{let{name:a,version:i,icons:o,connectNode:s}=e;if(i!==Ac)throw new Ve;return await this.onConnection(t,{name:a,icons:o,connectNode:s},n),r.status=Me.CONNECTED,r.connectNode=s,{...await this.getWalletInfo(),...s&&this._getNode()}},[Ee.subscribeAddress]:async(e,n)=>{let{type:a,value:i}=e;if(!this._isRpcClientConnected(t))throw new He;switch(a){case Oe.subscribe:await this.onSubscription(t,{type:a,value:i},n),r.addressSubscription.add(i);break;case Oe.unsubscribe:r.addressSubscription.delete(i);break;default:throw new G(`Unknown subscription type: ${a}`)}return{subscription:Array.from(r.addressSubscription),address:this._getAccountsForClient(r)}},[Ee.address]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new He;return await this.onAskAccounts(t,e,n),this.addresses()},[Ee.sign]:async(e,n)=>{let{tx:r,onAccount:a=this.address,returnSigned:i,innerTx:o}=e;if(!this._isRpcClientConnected(t))throw new He;if(!this.addresses().includes(a))throw new je(a);const s={onAccount:a,aeppOrigin:n,aeppRpcClientId:t,innerTx:o};if(i||!0===o)return{signedTransaction:await this.signTransaction(r,s)};try{return _c.parse(_c.stringify({transactionHash:await this.sendTransaction(r,{...s,verify:!1})}))}catch(l){const e=await Ks(r,this.api);if(e.length>0)throw new Be(e);throw l}},[Ee.signMessage]:async(e,n)=>{let{message:r,onAccount:a=this.address}=e;if(!this._isRpcClientConnected(t))throw new He;if(!this.addresses().includes(a))throw new je(a);const i={onAccount:a,aeppOrigin:n,aeppRpcClientId:t};return{signature:Oc.from(await this.signMessage(r,i)).toString("hex")}},[Ee.signTypedData]:async(e,n)=>{let{domain:r,aci:a,data:i,onAccount:o=this.address}=e;if(!this._isRpcClientConnected(t))throw new He;if(!this.addresses().includes(o))throw new je(o);const s={...r,onAccount:o,aeppOrigin:n,aeppRpcClientId:t};return{signature:await this.signTypedData(i,a,s)}},[Ee.signDelegationToContract]:async(e,n)=>{var r,a,i,o;let{contractAddress:s,name:l,oracleQueryId:c,allNames:d,onAccount:u=this.address,isOracle:m}=e;if(!this._isRpcClientConnected(t))throw new He;if(!this.addresses().includes(u))throw new je(u);null!==(r=m)&&void 0!==r||(m=!1);const p={onAccount:u,aeppOrigin:n,aeppRpcClientId:t},h=await(null!==(a=null!==(i=null!==(o=null==l?null:this.signNameDelegationToContract(s,l,p))&&void 0!==o?o:null==c?null:this.signOracleQueryDelegationToContract(s,c,p))&&void 0!==i?i:!0!==d?null:this.signAllNamesDelegationToContract(s,p))&&void 0!==a?a:this.signDelegationToContract(s,{...p,isOracle:m}));return{signature:h}},[Ee.signDelegation]:async(e,n)=>{let{delegation:r,onAccount:a=this.address}=e;if(!this._isRpcClientConnected(t))throw new He;if(!this.addresses().includes(a))throw new je(a);const i={onAccount:a,aeppOrigin:n,aeppRpcClientId:t},o=await this.signDelegation(r,i);return{signature:o}}})};return this._clients.set(t,r),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(Ee.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:window.location.origin,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}const Mc={type:{name:"Composite",className:"Contract",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},Rc={type:{name:"Composite",className:"CompileOpts",modelProperties:{fileSystem:{serializedName:"file_system",type:{name:"Dictionary",value:{type:{name:"any"}}}},srcFile:{serializedName:"src_file",type:{name:"String"}}}}},Dc={type:{name:"Composite",className:"CompilerError",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},pos:{serializedName:"pos",type:{name:"Composite",className:"ErrorPos"}},message:{serializedName:"message",required:!0,type:{name:"String"}},context:{serializedName:"context",type:{name:"String"}}}}},Bc={type:{name:"Composite",className:"ErrorPos",modelProperties:{file:{serializedName:"file",type:{name:"String"}},line:{serializedName:"line",required:!0,type:{name:"Number"}},col:{serializedName:"col",required:!0,type:{name:"Number"}}}}},$c={type:{name:"Composite",className:"CompileResult",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},aci:{serializedName:"aci",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}},warnings:{serializedName:"warnings",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}}}}},Vc={type:{name:"Composite",className:"SophiaCallResultInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Fc={type:{name:"Composite",className:"BytecodeCallResultInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}},callResult:{serializedName:"call-result",required:!0,type:{name:"String"}},callValue:{serializedName:"call-value",required:!0,type:{name:"String"}}}}},Hc={type:{name:"Composite",className:"DecodedCallresult",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},jc={type:{name:"Composite",className:"FunctionCallInput",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Uc={type:{name:"Composite",className:"Calldata",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}}}}},Gc={type:{name:"Composite",className:"DecodeCalldataBytecode",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Wc={type:{name:"Composite",className:"DecodedCalldata",modelProperties:{function:{serializedName:"function",required:!0,type:{name:"String"}},arguments:{serializedName:"arguments",required:!0,type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},Qc={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}}}}},Kc={type:{name:"Composite",className:"DecodeCalldataSource",modelProperties:{source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}},calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},function:{serializedName:"function",required:!0,type:{name:"String"}}}}},Lc={type:{name:"Composite",className:"ByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},Jc={type:{name:"Composite",className:"FateAssembler",modelProperties:{fateAssembler:{serializedName:"fate-assembler",required:!0,type:{name:"String"}}}}},Yc={type:{name:"Composite",className:"ValidateByteCodeInput",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}},source:{serializedName:"source",required:!0,type:{name:"String"}},options:{serializedName:"options",type:{name:"Composite",className:"CompileOpts"}}}}},Xc={type:{name:"Composite",className:"CompilerVersion",modelProperties:{version:{serializedName:"version",required:!0,type:{name:"String"}}}}},Zc={type:{name:"Composite",className:"ApiVersion",modelProperties:{apiVersion:{serializedName:"api-version",required:!0,type:{name:"String"}}}}},ed={type:{name:"Composite",className:"SophiaBinaryData",modelProperties:{sophiaType:{serializedName:"sophia-type",required:!0,type:{name:"String"}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},td={type:{name:"Composite",className:"SophiaJsonData",modelProperties:{data:{serializedName:"data",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},nd={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},rd={parameterPath:"body",mapper:Mc},ad={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},id={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},od={parameterPath:"body",mapper:Vc},sd={parameterPath:"body",mapper:Fc},ld={parameterPath:"body",mapper:jc},cd={parameterPath:"body",mapper:Gc},dd={parameterPath:"body",mapper:Kc},ud={parameterPath:"body",mapper:Lc},md={parameterPath:"body",mapper:Yc};class pd extends Qa.w{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const a={requestContentType:"application/json; charset=utf-8"},i="azsdk-js-compiler/1.0.0-beta.1",o=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`,s={...a,...t,userAgentOptions:{userAgentPrefix:o},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(s),this.$host=e}generateACI(e,t){return this.sendOperationRequest({body:e,options:t},yd)}compileContract(e,t){return this.sendOperationRequest({body:e,options:t},gd)}decodeCallResult(e,t){return this.sendOperationRequest({body:e,options:t},fd)}decodeCallResultBytecode(e,t){return this.sendOperationRequest({body:e,options:t},Nd)}encodeCalldata(e,t){return this.sendOperationRequest({body:e,options:t},Cd)}decodeCalldataBytecode(e,t){return this.sendOperationRequest({body:e,options:t},wd)}decodeCalldataSource(e,t){return this.sendOperationRequest({body:e,options:t},Sd)}getFateAssemblerCode(e,t){return this.sendOperationRequest({body:e,options:t},vd)}validateByteCode(e,t){return this.sendOperationRequest({body:e,options:t},Td)}getCompilerVersion(e,t){return this.sendOperationRequest({body:e,options:t},zd)}version(e){return this.sendOperationRequest({options:e},bd)}apiVersion(e){return this.sendOperationRequest({options:e},xd)}api(e){return this.sendOperationRequest({options:e},qd)}}const hd=Ka.O(c,!1),yd={path:"/aci",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:rd,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},gd={path:"/compile",httpMethod:"POST",responses:{200:{bodyMapper:$c},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:rd,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},fd={path:"/decode-call-result",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"any"}}},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:od,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},Nd={path:"/decode-call-result/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Hc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:sd,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},Cd={path:"/encode-calldata",httpMethod:"POST",responses:{200:{bodyMapper:Uc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:ld,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},wd={path:"/decode-calldata/bytecode",httpMethod:"POST",responses:{200:{bodyMapper:Wc},400:{bodyMapper:Qc,isError:!0}},requestBody:cd,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},Sd={path:"/decode-calldata/source",httpMethod:"POST",responses:{200:{bodyMapper:Wc},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:dd,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},vd={path:"/fate-assembler",httpMethod:"POST",responses:{200:{bodyMapper:Jc},400:{bodyMapper:Qc,isError:!0}},requestBody:ud,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},Td={path:"/validate-byte-code",httpMethod:"POST",responses:{200:{},400:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"CompilerError"}}}},isError:!0}},requestBody:md,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},zd={path:"/compiler-version",httpMethod:"POST",responses:{200:{bodyMapper:Xc},400:{bodyMapper:Qc,isError:!0}},requestBody:ud,urlParameters:[id],headerParameters:[nd,ad],mediaType:"json",serializer:hd},bd={path:"/version",httpMethod:"GET",responses:{200:{bodyMapper:Xc},500:{bodyMapper:Qc,isError:!0}},urlParameters:[id],headerParameters:[ad],serializer:hd},xd={path:"/api-version",httpMethod:"GET",responses:{200:{bodyMapper:Zc},500:{bodyMapper:Qc,isError:!0}},urlParameters:[id],headerParameters:[ad],serializer:hd},qd={path:"/api",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Dictionary",value:{type:{name:"any"}}}}},400:{bodyMapper:Qc,isError:!0}},urlParameters:[id],headerParameters:[ad],serializer:hd};class Ad{}class Pd extends Ad{constructor(e){let{ignoreVersion:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(super(),this.api=new pd(e,{allowInsecureConnection:!0,additionalPolicies:[Ua((e=>{let t="";return"reason"in e&&(t+=` ${e.reason}${null!=e.parameter?` in ${e.parameter}`:""}${null!=e.info?` (${JSON.stringify(e.info)})`:""}`),Array.isArray(e)&&(t+=`\n${e.map((e=>`${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${null!=e.context?` (${e.context})`:""}`)).join("\n")}`),t}))]}),!0!==t){const e=this.api.apiVersion().then((e=>{let{apiVersion:t}=e;return t}),(e=>e));this.api.pipeline.addPolicy(Ga("compiler","/api-version",e,"7.3.0","9.0.0"))}}async compileBySourceCode(e,t){try{var n;const r=await this.api.compileContract({code:e,options:{fileSystem:t}});null!==(n=r.warnings)&&void 0!==n||(r.warnings=[]);const a=r.warnings.map((e=>{let{type:t,...n}=e;return n})),i={...r,warnings:a};return i}catch(r){if(r instanceof rt.y&&400===r.statusCode)throw new I(r.message);throw r}}async compile(e){throw new j("File system access, use CompilerHttpNode instead")}async generateAciBySourceCode(e,t){try{return await this.api.generateACI({code:e,options:{fileSystem:t}})}catch(n){if(n instanceof rt.y&&400===n.statusCode)throw new I(n.message);throw n}}async generateAci(e){throw new j("File system access, use CompilerHttpNode instead")}async validateBySourceCode(e,t,n){try{return await this.api.validateByteCode({bytecode:e,source:t,options:{fileSystem:n}}),!0}catch{return!1}}async validate(e,t){throw new j("File system access, use CompilerHttpNode instead")}async version(){return(await this.api.version()).version}}var Id=n(82388);function kd(e,t,n,r,a,i){return(0,u.Wz)(),(0,u.An)("div",{class:(0,m.WN)({error:e.error})},(0,m.WA)(e.text),3)}var _d={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},Od=n(18152);const Ed=(0,Od.c)(_d,[["render",kd]]);var Md=Ed,Rd={components:{Value:Md},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const n=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,r=new Ye({target:n});this.clientId=this.aeSdk.addRpcClient(r),this.aeSdk.shareWalletInfo(this.clientId);const a=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(a);const e=this.aeSdk._getClient(this.clientId);e.status===Me.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===Me.CONNECTED&&e.rpc.notify(Ee.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){this.nodeName=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e)).find((e=>e!==this.nodeName)),this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(n,r,a)=>{if(!confirm([`Client ${e[n].name} with id ${n} at ${a} want to ${t}`,Md.methods.valueToString(r)].join("\n")))throw new $e};class n extends Ba{async signTransaction(e,{aeppRpcClientId:n,aeppOrigin:r,...a}={}){if(null!=n){const i={...a,unpackedTx:xa(e)};i.onCompiler&&(i.onCompiler="<Compiler>"),i.onNode&&(i.onNode="<Node>"),t(`sign transaction ${e}`)(n,i,r)}return super.signTransaction(e,a)}async signMessage(e,{aeppRpcClientId:n,aeppOrigin:r,...a}={}){return null!=n&&t(`sign message ${e}`)(n,a,r),super.signMessage(e,a)}async signTypedData(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const o=(new Id.TypeResolver).resolveType(n),s=(new Id.ContractByteArrayEncoder).decodeWithType(e,o),l={...i,aci:n,decodedData:s};t(`sign typed data ${e}`)(r,l,a)}return super.signTypedData(e,n,i)}async signDelegationToContract(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,contractAddress:e};t("sign delegation to contract")(n,i,r)}return super.signDelegationToContract(e,a)}async signNameDelegationToContract(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const o={...i,contractAddress:e,name:n};t("sign delegation of name to contract")(r,o,a)}return super.signNameDelegationToContract(e,n,i)}async signAllNamesDelegationToContract(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,contractAddress:e};t("sign delegation of all names to contract")(n,i,r)}return super.signAllNamesDelegationToContract(e,a)}async signOracleQueryDelegationToContract(e,n,{aeppRpcClientId:r,aeppOrigin:a,...i}){if(null!=r){const o={...i,contractAddress:e,oracleQueryId:n};t("sign delegation of oracle query to contract")(r,o,a)}return super.signOracleQueryDelegationToContract(e,n,i)}async signDelegation(e,{aeppRpcClientId:n,aeppOrigin:r,...a}){if(null!=n){const i={...a,...Ea(e)};t("sign delegation")(n,i,r)}return super.signDelegation(e,a)}static generate(){return new n($t().secretKey)}}this.aeSdk=new Ec({id:window.origin,type:_e.window,nodes:[{name:"ae_uat",instance:new Vs("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new Vs("https://mainnet.aeternity.io")}],accounts:[new n("9ebd7beda0c79af72a42ece3821a56eff16359b6df376cf049aee995565f022f840c974b97164776454ba119d84edc4d6058a8dec92b6edc578ab2d30b4c4200"),n.generate()],onCompiler:new Pd("https://v7.compiler.aepps.com"),name:"Wallet Iframe",onConnection:(t,n,r)=>{if(!confirm(`Client ${n.name} with id ${t} at ${r} want to connect`))throw new Fe;e[t]=n,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const Dd=(0,Od.c)(Rd,[["render",T],["__scopeId","data-v-0fa4fbfb"]]);var Bd=Dd;(0,d.W0)(Bd).mount("#app")},51872:function(){}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.m=e,function(){var e=[];n.O=function(t,r,a,i){if(!r){var o=1/0;for(d=0;d<e.length;d++){r=e[d][0],a=e[d][1],i=e[d][2];for(var s=!0,l=0;l<r.length;l++)(!1&i||o>=i)&&Object.keys(n.O).every((function(e){return n.O[e](r[l])}))?r.splice(l--,1):(s=!1,i<o&&(o=i));if(s){e.splice(d--,1);var c=a();void 0!==c&&(t=c)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[r,a,i]}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var a,i,o=r[0],s=r[1],l=r[2],c=0;if(o.some((function(t){return 0!==e[t]}))){for(a in s)n.o(s,a)&&(n.m[a]=s[a]);if(l)var d=l(n)}for(t&&t(r);c<o.length;c++)i=o[c],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(d)},r=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[999],(function(){return n(96088)}));r=n.O(r)})();
//# sourceMappingURL=app.a7818134.js.map