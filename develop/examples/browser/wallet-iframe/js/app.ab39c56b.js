(function(){var e={61399:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{_getPollInterval:function(){return jn},awaitHeight:function(){return Qn},getAccount:function(){return Xn},getBalance:function(){return Yn},getContract:function(){return cr},getContractByteCode:function(){return or},getCurrentGeneration:function(){return Zn},getGeneration:function(){return er},getHeight:function(){return Ln},getKeyBlock:function(){return nr},getMicroBlockHeader:function(){return rr},getMicroBlockTransactions:function(){return tr},getName:function(){return lr},poll:function(){return Kn},resolveName:function(){return ur},txDryRun:function(){return sr},waitForTxConfirm:function(){return Jn}});var i={};n.r(i),n.d(i,{Account:function(){return Gi},AuctionEntry:function(){return ea},ByteCode:function(){return ra},Channel:function(){return ta},ChannelCloseMutualTx:function(){return Da},ChannelCloseSoloTx:function(){return Fa},ChannelCreateTx:function(){return Ha},ChannelDepositTx:function(){return Va},ChannelForceProgressTx:function(){return Ga},ChannelSetDelegatesTx:function(){return Ua},ChannelSettleTx:function(){return ja},ChannelSlashTx:function(){return Wa},ChannelSnapshotSoloTx:function(){return La},ChannelWithdrawTx:function(){return Ka},CheckTxInPoolResponse:function(){return Qa},CommitmentId:function(){return Ja},ContractCallObject:function(){return ha},ContractCallTx:function(){return Xa},ContractCreateTx:function(){return Ya},ContractObject:function(){return na},CountResponse:function(){return ba},CreateContractUnsignedTx:function(){return Ms},Currency:function(){return aa},Delegates:function(){return Qi},DryRunAccount:function(){return ca},DryRunCallContext:function(){return ma},DryRunCallReq:function(){return ua},DryRunInput:function(){return oa},DryRunInputItem:function(){return la},DryRunResult:function(){return pa},DryRunResults:function(){return da},EncodedTx:function(){return Ba},ErrorModel:function(){return Ui},Event:function(){return ya},GAAttachTx:function(){return es},GAMetaTx:function(){return ts},GAObject:function(){return $a},GasPricesItem:function(){return qa},Generation:function(){return fa},HCContractPubkeys:function(){return xa},HashResponse:function(){return Ia},Header:function(){return Na},HeightResponse:function(){return wa},Image:function(){return sa},KeyBlock:function(){return ga},MicroBlockHeader:function(){return Ca},NameClaimTx:function(){return ns},NameEntry:function(){return za},NameHash:function(){return rs},NamePointer:function(){return Zi},NamePreclaimTx:function(){return is},NameRevokeTx:function(){return as},NameTransferTx:function(){return ss},NameUpdateTx:function(){return os},NextNonceResponse:function(){return ji},OffChainCallContract:function(){return Is},OffChainDeposit:function(){return ws},OffChainNewContract:function(){return Cs},OffChainTransfer:function(){return bs},OffChainUpdate:function(){return Ji},OffChainWithdrawal:function(){return zs},OracleExtendTx:function(){return ls},OracleQueries:function(){return Ta},OracleQuery:function(){return Sa},OracleQueryTx:function(){return us},OracleRegisterTx:function(){return ms},OracleRespondTx:function(){return ds},PayingForTx:function(){return ps},PeerConnections:function(){return Pa},PeerCount:function(){return hs},PeerCountAvailable:function(){return fs},PeerCountConnected:function(){return ys},PeerDetails:function(){return cs},PeerPubKey:function(){return Aa},Peers:function(){return gs},PinningTx:function(){return va},PoI:function(){return ia},PostTxResponse:function(){return Oa},Protocol:function(){return ka},PubKey:function(){return Ns},RegisteredOracle:function(){return Ma},RelativeTTL:function(){return Xi},SignedTx:function(){return Li},SignedTxs:function(){return Wi},SpendTx:function(){return vs},Status:function(){return _a},SyncStatus:function(){return Ea},TokenSupply:function(){return xs},Ttl:function(){return Yi},Tx:function(){return Ki},TxInfoObject:function(){return Ra},UnsignedTx:function(){return Za},discriminators:function(){return Ts}});var a={};n.r(a),n.d(a,{payForTransaction:function(){return Zo},spend:function(){return Xo},transferFunds:function(){return Yo}});var s={};n.r(s),n.d(s,{buildAuthTxHash:function(){return fc},buildAuthTxHashByGaMetaTx:function(){return gc},createGeneralizedAccount:function(){return yc}});var o=n(53751),c=n(20641),l=n(90033);const u={class:"group"},m=["src"];function d(e,t,n,r,i,a){const s=(0,c.g2)("Value");return(0,c.uX)(),(0,c.CE)(c.FK,null,[t[12]||(t[12]=(0,c.Lk)("input",{id:"toggle-aepp",type:"checkbox"},null,-1)),t[13]||(t[13]=(0,c.Lk)("h2",null,[(0,c.eW)(" Wallet Iframe "),(0,c.Lk)("label",{for:"toggle-aepp"})],-1)),(0,c.Lk)("div",u,[(0,c.Lk)("div",null,[t[7]||(t[7]=(0,c.Lk)("div",null,"Aepp URL",-1)),(0,c.Lk)("form",{novalidate:"",onSubmit:t[2]||(t[2]=(0,o.D$)(((...e)=>a.navigate&&a.navigate(...e)),["prevent"]))},[(0,c.bo)((0,c.Lk)("input",{type:"url","onUpdate:modelValue":t[0]||(t[0]=t=>e.nextAeppUrl=t),onFocus:t[1]||(t[1]=e=>e.target.select())},null,544),[[o.Jo,e.nextAeppUrl]])],32)]),(0,c.Lk)("div",null,[t[8]||(t[8]=(0,c.Lk)("div",null,"Address",-1)),(0,c.Lk)("div",null,(0,l.v_)(e.address),1)]),(0,c.Lk)("div",null,[t[9]||(t[9]=(0,c.Lk)("div",null,"Node",-1)),(0,c.Lk)("div",null,(0,l.v_)(e.nodeName),1)]),(0,c.Lk)("div",null,[t[10]||(t[10]=(0,c.Lk)("div",null,"Balance",-1)),(0,c.bF)(s,{value:e.balancePromise},null,8,["value"])]),(0,c.Lk)("div",null,[t[11]||(t[11]=(0,c.Lk)("div",null,"RPC client",-1)),(0,c.Lk)("div",null,"status: "+(0,l.v_)(e.clientStatus??"no client")+", id: "+(0,l.v_)(e.clientId??"not defined"),1)]),(0,c.Lk)("button",{onClick:t[3]||(t[3]=(...e)=>a.switchAccount&&a.switchAccount(...e))},"Switch Account"),(0,c.Lk)("button",{onClick:t[4]||(t[4]=(...e)=>a.switchNode&&a.switchNode(...e))},"Switch Node"),"CONNECTED"===e.clientStatus?((0,c.uX)(),(0,c.CE)("button",{key:0,onClick:t[5]||(t[5]=(...e)=>a.disconnect&&a.disconnect(...e))},"Disconnect")):((0,c.uX)(),(0,c.CE)("button",{key:1,onClick:t[6]||(t[6]=()=>(e.stopSharingWalletInfo??a.shareWalletInfo)())},(0,l.v_)(e.stopSharingWalletInfo?"Stop sharing":"Share wallet info"),1))]),e.runningInFrame?(0,c.Q3)("",!0):((0,c.uX)(),(0,c.CE)("iframe",{key:0,ref:"aepp",src:e.aeppUrl},null,8,m))],64)}n(18111),n(20116),n(61701);class p extends Error{constructor(e){super(e),this.name="BaseError"}}class h extends p{constructor(e){super(e),this.name="AccountError"}}class y extends p{constructor(e){super(e),this.name="AensError"}}class f extends p{constructor(e){super(e),this.name="AeppError"}}class g extends p{constructor(e){super(e),this.name="CompilerError"}}class N extends p{constructor(e){super(e),this.name="ContractError"}}class v extends p{constructor(e){super(e),this.name="CryptographyError"}}class x extends p{constructor(e){super(e),this.name="NodeError"}}class I extends p{constructor(e){super(e),this.name="TransactionError"}}class w extends p{constructor(e){super(e),this.name="WalletError"}}class C extends p{constructor(e,t,n){super(`${e} should be ${t}, got ${n} instead`),this.name="ArgumentError"}}class b extends v{constructor(e){super(e),this.name="IllegalArgumentError"}}class z extends p{constructor(){super("Byte serialization not supported"),this.name="NoSerializerFoundError"}}class M extends p{constructor(e,t){super(`Giving up after ${e} blocks mined, transaction hash: ${t}`),this.name="TxTimedOutError"}}class T extends p{constructor(e){super(e),this.name="TypeError"}}class S extends p{constructor(e){super(e),this.name="NotImplementedError"}}class A extends p{constructor(e,t,n,r){super(`Unsupported ${e} version ${t}. Supported: >= ${n}`+(null==r?"":` < ${r}`)),this.name="UnsupportedVersionError"}}class q extends p{constructor(e){super(e),this.name="InternalError"}}class _ extends q{constructor(e="Expected to not happen, required for TS"){super(e),this.name="UnexpectedTsError"}}class k extends h{constructor(e){super(`Account for ${e} not available`),this.name="UnavailableAccountError"}}class P extends y{constructor(e,t){super(`Name ${e} don't have pointers for ${t}`),this.name="AensPointerContextError"}}class E extends y{constructor(e,t){super(`the provided fee ${e.toString()} is not enough to execute the claim, required: ${t.toString()}`),this.name="InsufficientNameFeeError"}}class B extends y{constructor(e){super(e),this.name="InvalidAensNameError"}}class O extends f{constructor(e){super(`Received invalid message: ${e}`),this.name="InvalidRpcMessageError"}}class R extends f{constructor(e){super(`Can't find callback for this messageId ${e}`),this.name="MissingCallbackError"}}class $ extends f{constructor(e){super(`RpcClient with id ${e} do not exist`),this.name="UnknownRpcClientError"}}class D extends N{constructor(e,t=""){super(`Contract ${e} do not correspond to the bytecode deployed on the chain`+t),this.name="BytecodeMismatchError"}}class F extends N{constructor(){super("Contract already deployed"),this.name="DuplicateContractError"}}class H extends N{constructor(e){super(`Contract with address ${e} not active`),this.name="InactiveContractError"}}class V extends N{constructor(e){super(e),this.name="InvalidMethodInvocationError"}}class G extends N{constructor(e){super(e),this.name="MissingContractAddressError"}}class U extends N{constructor(){super("Either ACI or sourceCode or sourceCodePath is required"),this.name="MissingContractDefError"}}class j extends N{constructor(){super("Function name is required"),this.name="MissingFunctionNameError"}}class W extends N{constructor(e,t){super("Invocation failed"+(null==e?"":`: "${e}"`)),this.name="NodeInvocationError",this.transaction=t}}class L extends N{constructor(e){super(`Function ${e} doesn't exist in contract`),this.name="NoSuchContractFunctionError"}}class K extends N{constructor(e,t){super(`You try to pay "${e}" to function "${t}" which is not payable. Only payable function can accept coins`),this.name="NotPayableFunctionError"}}class Q extends N{constructor(e,t){super(`Can't find definition of ${e} event emitted by ${t} (use omitUnknown option to ignore events like this)`),this.name="MissingEventDefinitionError"}}class J extends N{constructor(e,t){super(`Found multiple definitions of "${t[0][1]}" event with different types emitted by ${e} in ${t.map((([e])=>`"${e}"`)).join(", ")} contracts (use contractAddressToName option to specify contract name corresponding to address)`),this.name="AmbiguousEventDefinitionError"}}class X extends v{constructor(){super("Invalid checksum"),this.name="InvalidChecksumError"}}class Y extends v{constructor(){super("Node hash is not equal to provided one"),this.name="MerkleTreeHashMismatchError"}}class Z extends v{constructor(e){super(e),this.name="MissingNodeInTreeError"}}class ee extends v{constructor(e){super(`Unknown node length: ${e}`),this.name="UnknownNodeLengthError"}}class te extends v{constructor(e){super(`Unknown path nibble: ${e}`),this.name="UnknownPathNibbleError"}}class ne extends x{constructor(e){super(`Node with name ${e} already exist`),this.name="DuplicateNodeError"}}class re extends x{constructor(e){super(e),this.name="NodeNotFoundError"}}class ie extends I{constructor(e){super(e),this.name="DecodeError"}}class ae extends I{constructor(e){super(e),this.name="PayloadLengthError"}}class se extends I{constructor(e){super(e),this.name="DryRunError"}}class oe extends I{constructor(e){super(`Prefix for id-tag ${e} not found.`),this.name="PrefixNotFoundError"}}class ce extends I{constructor(e,t){super(`Transaction schema not implemented for tag ${e} version ${t}`),this.name="SchemaNotFoundError"}}class le extends I{constructor(e){super(`Id tag for prefix ${e} not found.`),this.name="DecodeError"}}class ue extends I{constructor(e){super(`Transaction ${e} is removed from chain`),this.name="TxNotInChainError"}}class me extends w{constructor(e){super(e),this.name="AlreadyConnectedError"}}class de extends w{constructor(e){super(e),this.name="NoWalletConnectedError"}}class pe extends w{constructor(e){super(e),this.name="RpcConnectionError"}}class he{constructor({debug:e=!1}){this.debug=e}connect(e,t){if(this.isConnected())throw new me("You already connected")}disconnect(){if(!this.isConnected())throw new de("You dont have connection. Please connect before")}receiveMessage(e){this.debug&&console.log("Receive message:",e)}sendMessage(e){this.debug&&console.log("Send message:",e)}}n(43838);var ye=n(1814);let fe=function(e){return e["to_waellet"]="to_waellet",e["to_aepp"]="to_aepp",e}({}),ge=function(e){return e["window"]="window",e["extension"]="extension",e}({}),Ne=function(e){return e["subscribe"]="subscribe",e["unsubscribe"]="unsubscribe",e}({}),ve=function(e){return e["readyToConnect"]="connection.announcePresence",e["updateAddress"]="address.update",e["address"]="address.get",e["connect"]="connection.open",e["unsafeSign"]="data.unsafeSign",e["sign"]="transaction.sign",e["signMessage"]="message.sign",e["signTypedData"]="typedData.sign",e["signDelegation"]="delegation.sign",e["subscribeAddress"]="address.subscribe",e["updateNetwork"]="networkId.update",e["closeConnection"]="connection.close",e}({}),xe=function(e){return e["CONNECTED"]="CONNECTED",e["DISCONNECTED"]="DISCONNECTED",e["WAITING_FOR_CONNECTION_REQUEST"]="WAITING_FOR_CONNECTION_REQUEST",e}({});const Ie=[];class we extends p{toJSON(){return{code:this.code,message:this.message,data:this.data}}static deserialize(e){const t=Ie.find((t=>t.code===e.code));if(null==t)throw new q(`Can't find RpcError with code: ${e.code}`);return new t(e.data)}}class Ce extends we{constructor(e){super("Invalid transaction"),(0,ye.A)(this,"code",2),this.data=e,this.name="RpcInvalidTransactionError"}}(0,ye.A)(Ce,"code",2),Ie.push(Ce);class be extends we{constructor(e){super("Operation rejected by user"),(0,ye.A)(this,"code",4),this.data=e,this.name="RpcRejectedByUserError"}}(0,ye.A)(be,"code",4),Ie.push(be);class ze extends we{constructor(){super("Unsupported Protocol Version"),(0,ye.A)(this,"code",5),this.name="RpcUnsupportedProtocolError"}}(0,ye.A)(ze,"code",5),Ie.push(ze);class Me extends we{constructor(e){super("Wallet deny your connection request"),(0,ye.A)(this,"code",9),this.data=e,this.name="RpcConnectionDenyError"}}(0,ye.A)(Me,"code",9),Ie.push(Me);class Te extends we{constructor(){super("You are not connected to the wallet"),(0,ye.A)(this,"code",10),this.name="RpcNotAuthorizeError"}}(0,ye.A)(Te,"code",10),Ie.push(Te);class Se extends we{constructor(e){super(`You are not subscribed for account ${e}`),(0,ye.A)(this,"code",11),this.data=e,this.name="RpcPermissionDenyError"}}(0,ye.A)(Se,"code",11),Ie.push(Se);class Ae extends we{constructor(){super("The peer failed to execute your request due to unknown error"),(0,ye.A)(this,"code",12),this.name="RpcInternalError"}}(0,ye.A)(Ae,"code",12),Ie.push(Ae);class qe extends we{constructor(e){super(`Wallet can't find a network by id "${e}"`),(0,ye.A)(this,"code",13),this.data=e,this.name="RpcNoNetworkById"}}(0,ye.A)(qe,"code",13),Ie.push(qe);class _e extends we{constructor(){super("Method not found"),(0,ye.A)(this,"code",-32601),this.name="RpcMethodNotFoundError"}}function ke(e,t,n){Pe(e,t),t.set(e,n)}function Pe(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Ee(e,t){return e.get(Oe(e,t))}function Be(e,t,n){return e.set(Oe(e,t),n),n}function Oe(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}(0,ye.A)(_e,"code",-32601),Ie.push(_e);var Re=new WeakMap,$e=new WeakMap,De=new WeakMap;class Fe extends he{constructor({target:e,self:t=window,origin:n,sendDirection:r,receiveDirection:i=fe.to_aepp,...a}={}){super(a),ke(this,Re,void 0),ke(this,$e,void 0),ke(this,De,void 0),Be($e,this,e),Be(De,this,t),this.origin=n,this.sendDirection=r,this.receiveDirection=i}isConnected(){return null!=this.listener}connect(e,t){super.connect(e,t),this.listener=t=>{var n;if("object"!==typeof t.data||"2.0"!==(null!==(n=t.data.jsonrpc)&&void 0!==n?n:t.data.data?.jsonrpc))return;if(null!=this.origin&&this.origin!==t.origin)return;if(null!=Ee($e,this)&&Ee($e,this)!==t.source)return;this.receiveMessage(t);let{data:r}=t;if(null!=r.type){if(t.data.type!==this.receiveDirection)return;r=r.data}e(r,t.origin,t.source)},Ee(De,this).addEventListener("message",this.listener),Be(Re,this,t)}disconnect(){if(super.disconnect(),null==this.listener||null==Ee(Re,this))throw new q("Expected to not happen, required for TS");Ee(De,this).removeEventListener("message",this.listener),delete this.listener,Ee(Re,this).call(this),Be(Re,this,void 0)}sendMessage(e){var t;if(null==Ee($e,this))throw new pe("Can't send messages without target");const n=null!=this.sendDirection?{type:this.sendDirection,data:e}:e;super.sendMessage(n),Ee($e,this).postMessage(n,null!==(t=this.origin)&&void 0!==t?t:"*")}}var He=n(81429),Ve=n(50925);class Ge{}var Ue=n(12330),je=n(35756);const We=async e=>new Promise((t=>{setTimeout(t,e)})),Le=(e,t)=>Object.fromEntries(Object.entries(e).map(t)),Ke=(()=>{try{return He.Buffer.concat([Uint8Array.from([])]),!1}catch(e){return!0}})(),Qe=Ke?(e,t)=>He.Buffer.concat(e.map((e=>He.Buffer.from(e))),t):He.Buffer.concat;function Je(e,t){return e in t}function Xe(e,t){return t.includes(e)}function Ye(e){return e instanceof je.pj&&404===e.statusCode&&e.message.includes("Account not found")}function Ze(e){if(!(e instanceof Error))throw e}let et=function(e){return e["KeyBlockHash"]="kh",e["MicroBlockHash"]="mh",e["BlockPofHash"]="bf",e["BlockTxHash"]="bx",e["BlockStateHash"]="bs",e["Channel"]="ch",e["ContractAddress"]="ct",e["ContractBytearray"]="cb",e["ContractStoreKey"]="ck",e["ContractStoreValue"]="cv",e["Transaction"]="tx",e["TxHash"]="th",e["OracleAddress"]="ok",e["OracleQuery"]="ov",e["OracleQueryId"]="oq",e["OracleResponse"]="or",e["AccountAddress"]="ak",e["AccountSecretKey"]="sk",e["Signature"]="sg",e["Commitment"]="cm",e["PeerPubkey"]="pp",e["Name"]="nm",e["State"]="st",e["Poi"]="pi",e["StateTrees"]="ss",e["CallStateTree"]="cs",e["Bytearray"]="ba",e}({});var tt=n(54858),nt=n(39685);function rt(e){return(new nt).update(e).digest()}const it=[et.ContractBytearray,et.ContractStoreKey,et.ContractStoreValue,et.Transaction,et.OracleQuery,et.OracleResponse,et.State,et.Poi,et.StateTrees,et.CallStateTree,et.Bytearray],at=[et.KeyBlockHash,et.MicroBlockHash,et.BlockPofHash,et.BlockTxHash,et.BlockStateHash,et.Channel,et.ContractAddress,et.TxHash,et.OracleAddress,et.OracleQueryId,et.AccountAddress,et.AccountSecretKey,et.Signature,et.Commitment,et.PeerPubkey,et.Name],st={[et.KeyBlockHash]:32,[et.MicroBlockHash]:32,[et.BlockPofHash]:32,[et.BlockTxHash]:32,[et.BlockStateHash]:32,[et.Channel]:32,[et.ContractAddress]:32,[et.TxHash]:32,[et.OracleAddress]:32,[et.OracleQueryId]:32,[et.AccountAddress]:32,[et.AccountSecretKey]:32,[et.Signature]:64,[et.Commitment]:32,[et.PeerPubkey]:32,[et.State]:32};function ot(e,t){if(!Je(t,st))return;const n=st[t];if(null!=n&&e.length!==n)throw new ae(`Payload should be ${n} bytes, got ${e.length} instead`)}const ct=e=>rt(rt(e)).slice(0,4),lt=e=>Qe([e,ct(e)]);function ut(e){const t=e.slice(0,-4);if(!ct(t).equals(e.slice(-4)))throw new X;return t}const mt={encode:e=>lt(e).toString("base64"),decode:e=>ut(He.Buffer.from(e,"base64"))},dt={encode:e=>tt.A.encode(lt(e)),decode:e=>ut(He.Buffer.from(tt.A.decode(e)))},pt=e=>{const t=it.find((t=>t===e));if(null!=t)return[t,mt];const n=at.find((t=>t===e));if(null!=n)return[n,dt];throw new C("prefix",`one of ${[...at,...it].join(", ")}`,e)};function ht(e){const[t,n,r]=e.split("_");if(null==n)throw new ie(`Encoded string missing payload: ${e}`);if(null!=r)throw new ie(`Encoded string have extra parts: ${e}`);const[i,a]=pt(t),s=a.decode(n);return ot(s,i),s}function yt(e,t){const[,n]=pt(t);return ot(e,t),`${t}_${n.encode(e)}`}function ft(e,...t){0===t.length&&(t=[et.AccountAddress]);try{ht(e);const n=e.split("_")[0];if(!Xe(n,t))throw new C("Encoded string type",t.length>1?`one of ${t.join(", ")}`:t[0],n);return!0}catch(n){return!1}}function gt(e){return He.Buffer.from((0,Ue.blake2b)(e,void 0,32))}function Nt(e,t,n){return Ve.sign.detached.verify(e,t,ht(n))}function vt(e){return e<253?He.Buffer.from([e]):Qe(e<=65535?[He.Buffer.from([253]),He.Buffer.from(new Uint16Array([e]).buffer)]:e<=4294967295?[He.Buffer.from([254]),He.Buffer.from(new Uint32Array([e]).buffer)]:[He.Buffer.from([255]),He.Buffer.from(new BigUint64Array([BigInt(e)]).buffer)])}const xt=He.Buffer.from("aeternity Signed Message:\n","utf8"),It=vt(xt.length);function wt(e){const t=He.Buffer.from(e,"utf8");return gt(Qe([It,xt,vt(t.length),t]))}var Ct=n(67962),bt=n(45195);function zt(e){var t;return gt(null!==(t=bt(e))&&void 0!==t?t:"")}function Mt(e){const t={record:[{name:"name",type:{option:["string"]}},{name:"version",type:{option:["int"]}},{name:"networkId",type:{option:["string"]}},{name:"contractAddress",type:{option:["contract_pubkey"]}}]},n=(new Ct.TypeResolver).resolveType(t,{}),r=(new Ct.ContractByteArrayEncoder).encodeWithType(e,n);return gt(ht(r))}function Tt(e,t,n){return gt(Qe([It,new Uint8Array([0]),Mt(n),zt(t),gt(ht(e))]))}var St=n(46062);const At={pub:"ak_11111111111111111111111111111111273Yts",amount:100000000000000000000000000000000000n},qt=5e4,_t=1e9,kt=1e14,Pt=31,Et=Le({31:3,30:5,29:8,28:13,27:21,26:34,25:55,24:89,23:144,22:233,21:377,20:610,19:987,18:1597,17:2584,16:4181,15:6765,14:10946,13:17711,12:28657,11:46368,10:75025,9:121393,8:196418,7:317811,6:514229,5:832040,4:1346269,3:2178309,2:3524578,1:5702887},(([e,t])=>[e,new St.g(t).times(kt)]));let Bt=function(e){return e[e["Ceres"]=6]="Ceres",e}({}),Ot=function(e){return e[e["NoVm"]=0]="NoVm",e[e["Sophia"]=1]="Sophia",e[e["SophiaImprovementsMinerva"]=3]="SophiaImprovementsMinerva",e[e["SophiaImprovementsFortuna"]=4]="SophiaImprovementsFortuna",e[e["Fate"]=5]="Fate",e[e["SophiaImprovementsLima"]=6]="SophiaImprovementsLima",e[e["Fate2"]=7]="Fate2",e[e["Fate3"]=8]="Fate3",e}({}),Rt=function(e){return e[e["NoAbi"]=0]="NoAbi",e[e["Sophia"]=1]="Sophia",e[e["Fate"]=3]="Fate",e}({}),$t=function(e){return e[e["SignedTx"]=11]="SignedTx",e[e["SpendTx"]=12]="SpendTx",e[e["OracleRegisterTx"]=22]="OracleRegisterTx",e[e["OracleQueryTx"]=23]="OracleQueryTx",e[e["OracleResponseTx"]=24]="OracleResponseTx",e[e["OracleRespondTx"]=24]="OracleRespondTx",e[e["OracleExtendTx"]=25]="OracleExtendTx",e[e["NameClaimTx"]=32]="NameClaimTx",e[e["NamePreclaimTx"]=33]="NamePreclaimTx",e[e["NameUpdateTx"]=34]="NameUpdateTx",e[e["NameRevokeTx"]=35]="NameRevokeTx",e[e["NameTransferTx"]=36]="NameTransferTx",e[e["ContractCreateTx"]=42]="ContractCreateTx",e[e["ContractCallTx"]=43]="ContractCallTx",e[e["ChannelCreateTx"]=50]="ChannelCreateTx",e[e["ChannelDepositTx"]=51]="ChannelDepositTx",e[e["ChannelWithdrawTx"]=52]="ChannelWithdrawTx",e[e["ChannelForceProgressTx"]=521]="ChannelForceProgressTx",e[e["ChannelCloseMutualTx"]=53]="ChannelCloseMutualTx",e[e["ChannelCloseSoloTx"]=54]="ChannelCloseSoloTx",e[e["ChannelSlashTx"]=55]="ChannelSlashTx",e[e["ChannelSettleTx"]=56]="ChannelSettleTx",e[e["ChannelOffChainTx"]=57]="ChannelOffChainTx",e[e["ChannelSnapshotSoloTx"]=59]="ChannelSnapshotSoloTx",e[e["GaAttachTx"]=80]="GaAttachTx",e[e["GaMetaTx"]=81]="GaMetaTx",e[e["PayingForTx"]=82]="PayingForTx",e}({});const Dt={[Bt.Ceres]:{"contract-create":{vmVersion:[Ot.Fate3],abiVersion:[Rt.Fate]},"contract-call":{vmVersion:[],abiVersion:[Rt.Fate]},"oracle-call":{vmVersion:[],abiVersion:[Rt.NoAbi,Rt.Fate]}}};function Ft(e,t){var n;const r=Dt[e][t];return{vmVersion:null!==(n=r.vmVersion[0])&&void 0!==n?n:Ot.Fate2,abiVersion:r.abiVersion[0]}}var Ht={serialize(e,t,{consensusProtocolVersion:n=Bt.Ceres}){var r;return null!==(r=e)&&void 0!==r||(e=Ft(n,"contract-create")),He.Buffer.from([e.vmVersion,0,e.abiVersion])},async prepare(e,t,n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Bt).length&&null!=n.onNode?Ft((await n.onNode.getNodeInfo()).consensusProtocolVersion,"contract-create"):void 0},deserialize(e){const[t,,n]=e;return{vmVersion:+t,abiVersion:+n}}},Vt={_getProtocolDetails(e,t){const n=$t.ContractCallTx===t||$t.GaMetaTx===t?"contract-call":"oracle-call";return Ft(e,n).abiVersion},serialize(e,{tag:t},{consensusProtocolVersion:n=Bt.Ceres}){const r=null!==e&&void 0!==e?e:this._getProtocolDetails(n,t);return He.Buffer.from([r])},async prepare(e,{tag:t},n){return null!=e?e:null==n.consensusProtocolVersion&&2!==Object.keys(Bt).length&&null!=n.onNode?this._getProtocolDetails((await n.onNode.getNodeInfo()).consensusProtocolVersion,t):void 0},deserialize(e){return e[0]}};function Gt(e,t=!1){if(null==e)return He.Buffer.from([]);if(Number.isInteger(e)||St.g.isBigNumber(e)||t){if(St.g.isBigNumber(e)||(e=new St.g(e)),!e.isInteger())throw new T(`Unexpected not integer value: ${e.toFixed()}`);let t=e.toString(16);return t.length%2===1&&(t=`0${t}`),He.Buffer.from(t,"hex")}if("string"===typeof e)return He.Buffer.from(e);throw new z}const Ut=[et.AccountAddress,et.Name,et.Commitment,et.OracleAddress,et.ContractAddress,et.Channel];function jt(...e){return{serialize(t){const n=t.slice(0,2);if(!Xe(n,Ut))throw new le(n);if(!Xe(n,e))throw new C("Address encoding",e.join(", "),n);const r=Ut.indexOf(n)+1;return He.Buffer.from([...Gt(r),...ht(t)])},deserialize(t){const n=He.Buffer.from(t).readUIntBE(0,1),r=Ut[n-1];if(null==r)throw new oe(n);if(!Xe(r,e))throw new C("Address encoding",e.join(", "),r);return yt(t.subarray(1),r)}}}function Wt(e){return{serialize(t,n){return t.map((t=>e.serialize(t,n)))},deserialize(t,n){return t.map((t=>e.deserialize(t,n)))}}}function Lt(e,t){const n=He.Buffer.from([...ht(e),...Gt(t)]),r=gt(n);return yt(r,et.ContractAddress)}const Kt=".chain";function Qt(e){const[t,n,...r]=e.split(".");if(0!==r.length)throw new C("aens name","including only one dot",e);if(n!==Kt.slice(1))throw new C("aens name",`suffixed with ${Kt}`,e);if(/\p{Emoji_Presentation}/u.test(t))throw new C("aens name","not containing emoji",e);if("-"===t[2]&&"-"===t[3])throw new C("aens name",'without "-" char in both the third and fourth positions',e);if("-"===t[0])throw new C("aens name",'starting with no "-" char',e);if("-"===t.at(-1))throw new C("aens name",'ending with no "-" char',e);let i;try{const r=new URL(`http://${t}.${n}`);if(r.username+r.password+r.port+r.search+r.hash!==""||"/"!==r.pathname)throw new C("aens name","valid",e);i=r.host}catch(a){if(a instanceof TypeError&&a.message.includes("Invalid URL"))throw new C("aens name","valid",e);throw a}if(!/^[a-z0-9.-]+$/i.test(i))throw new C("aens name","without illegal chars",e);if(i.length>63+Kt.length)throw new C("aens name","not too long",e);return i}function Jt(e){return yt(gt(Qt(e)),et.Name)}function Xt(e=He.Buffer.from([])){return new St.g(He.Buffer.from(e).toString("hex"),16).toString(10)}function Yt(e){Qt(e)}function Zt(e){try{return Yt(e),!0}catch(t){return!1}}et.AccountAddress,et.OracleAddress,et.ContractAddress,et.Channel;function en(e){const t=Qt(e).length-Kt.length;return Et[Math.min(t,Pt)]}var tn={serialize(e){if(Number(e)<0)throw new C("value","greater or equal to 0",e);return Gt(e,!0)},deserialize(e){return Xt(e)}};const nn=e=>"bigint"===typeof e||["number","object","string"].includes(typeof e)&&(!isNaN(e)||Number.isInteger(e)||St.g.isBigNumber(e));let rn=function(e){return e["AE"]="ae",e["MILI_AE"]="miliAE",e["MICRO_AE"]="microAE",e["NANO_AE"]="nanoAE",e["PICO_AE"]="picoAE",e["FEMTO_AE"]="femtoAE",e["AETTOS"]="aettos",e}({});const an={[rn.AE]:0,[rn.MILI_AE]:-3,[rn.MICRO_AE]:-6,[rn.NANO_AE]:-9,[rn.PICO_AE]:-12,[rn.FEMTO_AE]:-15,[rn.AETTOS]:-18},sn=(e,{denomination:t=rn.AETTOS,targetDenomination:n=rn.AETTOS})=>{if(!nn(e))throw new C("value","a number",e);return new St.g("bigint"===typeof e?e.toString():e).shiftedBy(an[t]-an[n]).toFixed()};var on={...tn,serializeAettos(e,t,n){return null!==e&&void 0!==e?e:"0"},serialize(e,t,{denomination:n=rn.AETTOS,...r}){return tn.serialize(this.serializeAettos(null!=e?sn(e,{denomination:n}):e,t,r))}};function cn(e,t){return{serialize(e){if(null==e){if(!0===t)return He.Buffer.from([]);throw new C("Encoded data","provided",e)}return ht(e)},deserialize(t){return yt(t,e)}}}function ln(e){return{serialize(t,{packEntry:n}){return ArrayBuffer.isView(t)?He.Buffer.from(t):"string"===typeof t&&t.startsWith("tx_")?ht(t):ht(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackEntry:n}){return n(yt(t,et.Bytearray),e)}}}n(22489);function un(e){const t=Object.values(e).filter((e=>"number"===typeof e));return{serialize(e){if("number"!==typeof e)throw new C("value","to be a number",e);if(e>255)throw new C("value","to be less than 256",e);if(!Xe(e,t))throw new C("value","to be a value of Enum",e);return He.Buffer.from([e])},deserialize(e){if(1!==e.length)throw new C("buffer","to have single element",e.length);const n=e[0];if(!Xe(n,t))throw new C("value","to be a value of Enum",n);return n}}}const mn=new WeakMap;async function dn(e){const t=mn.get(e);if(null!=t&&t.time>Date.now()-2e4)return t.gasPrice;const{minGasPrice:n,utilization:r}=(await e.getRecentGasPrices())[0];let i=r<70?0n:BigInt(new St.g(n.toString()).times(1.01).integerValue().toFixed());const a=100000n*BigInt(_t);return i>a&&(console.warn(`Estimated gas price ${i} exceeds the maximum safe value for unknown reason. It will be limited to ${a}. To overcome this restriction provide \`gasPrice\`/\`fee\` in options.`),i=a),mn.set(e,{gasPrice:i,time:Date.now()}),i}var pn={...on,async prepare(e,t,{onNode:n,denomination:r}){if(null!=e)return e;if(null==n)throw new C("onNode","provided (or provide `gasPrice` instead)",n);const i=await dn(n);return 0n!==i?sn(i,{targetDenomination:r}):void 0},serializeAettos(e=_t.toString()){if(+e<_t)throw new b(`Gas price ${e.toString()} must be bigger than ${_t}`);return e}};const hn=15e3,yn=20,fn=3,gn=e=>{var t;const n={[$t.ChannelForceProgressTx]:30,[$t.ChannelOffChainTx]:0,[$t.ContractCreateTx]:5,[$t.ContractCallTx]:12,[$t.GaAttachTx]:5,[$t.GaMetaTx]:5,[$t.PayingForTx]:.2},r=null!==(t=n[e])&&void 0!==t?t:1;return r*hn},Nn=(e,t,{relativeTtl:n,innerTxSize:r})=>{switch(e){case $t.OracleRegisterTx:case $t.OracleExtendTx:case $t.OracleQueryTx:case $t.OracleRespondTx:return t*yn+Math.ceil(32e3*n/Math.floor(525600/fn));case $t.GaMetaTx:case $t.PayingForTx:return(t-r)*yn;default:return t*yn}};function vn(e){const t={[$t.OracleRegisterTx]:"oracleTtlValue",[$t.OracleExtendTx]:"oracleTtlValue",[$t.OracleQueryTx]:"queryTtlValue",[$t.OracleRespondTx]:"responseTtlValue"},{tag:n}=e;return Je(n,t)?e[t[n]]:1}function xn(e,t,n){const{length:r}=ht(e),i=t(e);let a=0;return i.tag!==$t.GaMetaTx&&i.tag!==$t.PayingForTx||(a=ht(n(i.tx.encodedTx)).length),gn(i.tag)+Nn(i.tag,r,{relativeTtl:vn(i),innerTxSize:a})}function In(e,t,n){let r,i=new St.g(0);do{r=i,i=new St.g(_t).times(xn(e(i),t,n))}while(!i.eq(r));return i}const wn="_gas-price:";var Cn={...on,async prepare(e,t,{onNode:n}){if(null!=e)return e;if(null==n)throw new C("onNode","provided (or provide `fee` instead)",n);const r=await dn(n);return 0n!==r?wn+r:void 0},serializeAettos(e,{rebuildTx:t,unpackTx:n,buildTx:r,_computingMinFee:i},{_canIncreaseFee:a}){if(null!=i)return i.toFixed();const s=In((e=>t({_computingMinFee:e})),n,r),o=!0===e?.startsWith(wn)?s.dividedBy(_t).times(e.replace(wn,"")):new St.g(null!==e&&void 0!==e?e:s);if(s.gt(o)){if(!0===a)return s.toFixed();throw new b(`Fee ${o.toString()} must be bigger than ${s}`)}return o.toFixed()},serialize(e,t,n){return"string"===typeof e&&e.startsWith(wn)?tn.serialize(this.serializeAettos(e,t,n)):on.serialize.call(this,e,t,n)}},bn={serialize(e){return tn.serialize(e)},deserialize(e){return+tn.deserialize(e)}};function zn(e,t,n,r){return e-+xn(t(e),n,r)}var Mn={...bn,serialize(e,{tag:t,rebuildTx:n,unpackTx:r,buildTx:i,_computingGasLimit:a},{gasMax:s=6e6}){if(null!=a)return bn.serialize(a);const o=t===$t.GaMetaTx?qt:zn(s,(e=>n({_computingGasLimit:e,_canIncreaseFee:!0})),r,i),c=null!==e&&void 0!==e?e:o;if(c>o)throw new b(`Gas limit ${c} must be less or equal to ${o}`);return bn.serialize(c)}},Tn={serialize(e){return He.Buffer.from(e)},deserialize(e){return e.toString()}},Sn={serialize(e){return Tn.serialize(e)},deserialize(e){return Tn.deserialize(e)}},An={...on,serializeAettos(e,t){const n=en(t.name),r=new St.g(null!==e&&void 0!==e?e:n);if(n.gt(r))throw new E(r,n);return r.toFixed()},serialize(e,t,n){return on.serialize.call(this,e,t,n)}};const qn=jt(et.Name);var _n={...qn,serialize(e){return qn.serialize(Zt(e)?Jt(e):e)}};function kn(e){return{...bn,serialize(e,{tag:t}){if($t.GaAttachTx===t&&1!==e)throw new C("nonce","equal 1 if GaAttachTx",e);return bn.serialize(e)},async prepare(t,n,r){if(null!=t)return t;const{onNode:i,strategy:a}=r,s=r[e],o="provided (or provide `nonce` instead)";if(null==i)throw new C("onNode",o,i);if(null==s)throw new C("senderId",o,s);return(await i.getAccountNextNonce(s.replace(/^ok_/,"ak_"),{strategy:a}).catch((e=>{if(!Ye(e))throw e;return{nextNonce:1}}))).nextNonce},senderKey:e}}const Pn=He.Buffer.from([1]),En=He.Buffer.from([2]),Bn=1024,On=jt(...Ut);var Rn=e=>({serialize(t){if(t.length>32)throw new b(`Expected 32 pointers or less, got ${t.length} instead`);return t.map((({key:t,id:n})=>{let r;if(ft(n,...Ut)&&(r=[...e?[Pn]:[],On.serialize(n)]),ft(n,et.Bytearray)){const e=ht(n);if(e.length>Bn)throw new C("Raw pointer",`shorter than ${Bn+1} bytes`,`${e.length} bytes`);r=[En,e]}if(null==r)throw new ie(`Unknown AENS pointer value: ${n}`);return[Gt(t),He.Buffer.concat(r)]}))},deserialize(t){return t.map((([t,n])=>{if(!e)return{key:t.toString(),id:On.deserialize(n)};const r=n.subarray(0,1),i=n.subarray(1);let a;if(r.equals(Pn)&&(a=On.deserialize(i)),r.equals(En)&&(a=yt(i,et.Bytearray)),null==a)throw new ie(`Unknown AENS pointer tag: ${r}`);return{key:t.toString(),id:a}}))}}),$n={...on,async prepare(e,t,n){if(null!=e)return e;const{onNode:r,oracleId:i}=n,a="provided (or provide `queryFee` instead)";if(null==r)throw new C("onNode",a,r);if(null==i)throw new C("oracleId",a,i);return(await r.getOracleByPubkey(i)).queryFee.toString()}},Dn={serialize(e){return He.Buffer.from(e)},deserialize(e){return e}};function Fn(e,t){return{serialize(n){if((!0!==t||null!=n)&&n!==e)throw new C("ShortUIntConst",e,n);return bn.serialize(e)},deserialize(t){const n=bn.deserialize(t);if(n!==e)throw new C("ShortUIntConst",e,n);return e},constValue:e,constValueOptional:!0===t}}var Hn={serialize(e){return Gt(e)},deserialize(e){return e.toString()}};function Vn(e){return{serialize(t,{buildTx:n}){return ArrayBuffer.isView(t)?He.Buffer.from(t):"string"===typeof t&&t.startsWith("tx_")?ht(t):ht(n({...t,...null!=e&&{tag:e}}))},deserialize(t,{unpackTx:n}){return n(yt(t,et.Transaction),e)}}}n(7588),n(83646),n(89752),n(43729),n(94952),n(36407),n(49500),n(22198);function Gn(e){return new Proxy({},Object.fromEntries(["apply","construct","defineProperty","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","set","setPrototypeOf","get","has"].map((t=>[t,(n,...r)=>{const i=e();if(null==i)throw new C("wrapped value","defined",i);if("get"===t&&"_wrappedValue"===r[0])return i;const a=Reflect[t](i,...r);return"function"===typeof a&&"get"===t?a.bind(i):a}]))))}function Un(e){var t;return null!==(t=e._wrappedValue)&&void 0!==t?t:e}async function jn(e,{_expectedMineRate:t,_microBlockCycle:n,onNode:r}){var i,a;const s=async(t,n,i,a)=>t!==e?null:null!=n?n:"ae_dev"===await(r?.getNetworkId())?i:a,o=null!==(i=null!==(a=await s("key-block",t,0,18e4))&&void 0!==a?a:await s("micro-block",n,0,3e3))&&void 0!==i?i:(()=>{throw new q(`Unknown type: ${e}`)})();return Math.floor(o/3)}const Wn=new WeakMap;async function Ln({cached:e=!1,...t}){const n=Un(t.onNode);if(e){const e=Wn.get(n);if(null!=e&&e.time>Date.now()-await jn("key-block",t))return e.height}const{height:r}=await n.getCurrentKeyBlockHeight();return Wn.set(n,{height:r,time:Date.now()}),r}async function Kn(e,{blocks:t=5,interval:n,...r}){var i;let a;null!==(i=n)&&void 0!==i||(n=await jn("micro-block",r));do{const i=await r.onNode.getTransactionByHash(e);if(-1!==i.blockHeight)return i;null==a&&(a=0!==i.tx.ttl?-1:await Ln({...r,cached:!0})+t),await We(n)}while(-1===a||await Ln({...r,cached:!0})<a);throw new M(t,e)}async function Qn(e,{interval:t,...n}){var r;let i;null!==(r=t)&&void 0!==r||(t=Math.min(await jn("key-block",n),5e3));do{null!=i&&await We(t),i=await Ln(n)}while(i<e);return i}async function Jn(e,{confirm:t=3,onNode:n,...r}){const{blockHeight:i}=await n.getTransactionByHash(e),a=await Qn(i+t,{onNode:n,...r}),{blockHeight:s}=await n.getTransactionByHash(e);switch(s){case-1:throw new ue(e);case i:return a;default:return Jn(e,{onNode:n,confirm:t,...r})}}async function Xn(e,{height:t,hash:n,onNode:r}){return null!=t?r.getAccountByPubkeyAndHeight(e,t):null!=n?r.getAccountByPubkeyAndHash(e,n):r.getAccountByPubkey(e)}async function Yn(e,{format:t=rn.AETTOS,...n}){const r=e.startsWith("ok_")?yt(ht(e),et.AccountAddress):e,{balance:i}=await Xn(r,n).catch((e=>{if(!Ye(e))throw e;return{balance:0n}}));return sn(i,{targetDenomination:t})}async function Zn({onNode:e}){return e.getCurrentGeneration()}async function er(e,{onNode:t}){return"number"===typeof e?t.getGenerationByHeight(e):t.getGenerationByHash(e)}async function tr(e,{onNode:t}){return(await t.getMicroBlockTransactionsByHash(e)).transactions}async function nr(e,{onNode:t}){return"number"===typeof e?t.getKeyBlockByHeight(e):t.getKeyBlockByHash(e)}async function rr(e,{onNode:t}){return t.getMicroBlockHeaderByHash(e)}const ir=new Map;async function ar(e,t){const n=ir.get(e);if(ir.delete(e),null==n)throw new q("Can't get dry-run request");let r;try{const e="number"===typeof n[0].top?(await nr(n[0].top,{onNode:t})).hash:n[0].top;r=await t.protectedDryRunTxs({top:e,txEvents:n[0].txEvents,txs:n.map((e=>({tx:e.tx}))),accounts:Array.from(new Set(n.map((e=>e.accountAddress)))).map((e=>({pubKey:e,amount:At.amount})))})}catch(s){return void n.forEach((({reject:e})=>e(s)))}const{results:i,txEvents:a}=r;i.forEach((({result:e,reason:t,...r},i)=>{const{resolve:s,reject:o,tx:c,accountAddress:l}=n[i];"ok"===e?s({...r,txEvents:a}):o(Object.assign(new se(t),{tx:c,accountAddress:l}))}))}async function sr(e,t,{top:n,txEvents:r,combine:i,onNode:a}){var s;const o=!0===i?[n,r].join():"immediate",c=null!==(s=ir.get(o))&&void 0!==s?s:[];return ir.set(o,c),new Promise(((s,l)=>{var u;c.push({tx:e,accountAddress:t,top:n,txEvents:r,resolve:s,reject:l}),!0===i?null!==(u=c.timeout)&&void 0!==u||(c.timeout=setTimeout((()=>{ar(o,a)}))):ar(o,a)}))}async function or(e,{onNode:t}){return t.getContractCode(e)}async function cr(e,{onNode:t}){return t.getContract(e)}async function lr(e,{onNode:t}){return t.getNameEntryByName(e)}async function ur(e,t,{verify:n=!0,resolveByNode:r=!1,onNode:i}){if(Zt(e)){if(n||r){const n=await i.getNameEntryByName(e),a=n.pointers.find((e=>e.key===t));if(null==a)throw new P(e,t);if(r)return a.id}return Jt(e)}try{return ht(e),e}catch(a){throw new B(`Invalid name or address: ${e}`)}}var mr={...bn,serialize(e){return bn.serialize(null!==e&&void 0!==e?e:0)},async prepare(e,t,{onNode:n,absoluteTtl:r,_isInternalBuild:i,...a}){if(!0!==r&&0!==e&&(null!=e||!0===i)){var s;if(null==n)throw new C("onNode","provided",n);e=(null!==(s=e)&&void 0!==s?s:3)+await Ln({...a,onNode:n,cached:!0})}return e}};function dr(e,t){return{...t,serialize(n,r){return t.serialize(null!==n&&void 0!==n?n:e,r)}}}function pr(e,t){return{...t,serialize(n,r,i){return t.serialize(e(n),r,i)}}}let hr=function(e){return e[e["Ok"]=0]="Ok",e[e["Error"]=1]="Error",e[e["Revert"]=2]="Revert",e}({}),yr=function(e){return e[e["Account"]=10]="Account",e[e["Oracle"]=20]="Oracle",e[e["Name"]=30]="Name",e[e["Contract"]=40]="Contract",e[e["ContractCall"]=41]="ContractCall",e[e["ChannelOffChainUpdateTransfer"]=570]="ChannelOffChainUpdateTransfer",e[e["ChannelOffChainUpdateDeposit"]=571]="ChannelOffChainUpdateDeposit",e[e["ChannelOffChainUpdateWithdraw"]=572]="ChannelOffChainUpdateWithdraw",e[e["ChannelOffChainUpdateCreateContract"]=573]="ChannelOffChainUpdateCreateContract",e[e["ChannelOffChainUpdateCallContract"]=574]="ChannelOffChainUpdateCallContract",e[e["Channel"]=58]="Channel",e[e["TreesPoi"]=60]="TreesPoi",e[e["StateTrees"]=62]="StateTrees",e[e["Mtree"]=63]="Mtree",e[e["MtreeValue"]=64]="MtreeValue",e[e["ContractsMtree"]=621]="ContractsMtree",e[e["CallsMtree"]=622]="CallsMtree",e[e["ChannelsMtree"]=623]="ChannelsMtree",e[e["NameserviceMtree"]=624]="NameserviceMtree",e[e["OraclesMtree"]=625]="OraclesMtree",e[e["AccountsMtree"]=626]="AccountsMtree",e[e["GaMetaTxAuthData"]=810]="GaMetaTxAuthData",e}({}),fr=function(e){return e[e["delta"]=0]="delta",e[e["block"]=1]="block",e}({});const gr=Vn(),Nr=Vn($t.SignedTx),vr=ln(yr.TreesPoi),xr=dr(3600,bn),Ir=pr((e=>{var t;const n=18e4;if(null!==(t=e)&&void 0!==t||(e=n),e>=1&&e<=n)return e;throw new C("nameTtl",`a number between 1 and ${n} blocks`,e)}),bn),wr=[{tag:Fn($t.SignedTx),version:Fn(1,!0),signatures:Wt(Dn),encodedTx:gr},{tag:Fn($t.SpendTx),version:Fn(1,!0),senderId:jt(et.AccountAddress),recipientId:jt(et.AccountAddress,et.ContractAddress,et.Name),amount:on,fee:Cn,ttl:mr,nonce:kn("senderId"),payload:cn(et.Bytearray,!0)},{tag:Fn($t.NamePreclaimTx),version:Fn(1,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),commitmentId:jt(et.Commitment),fee:Cn,ttl:mr},{tag:Fn($t.NameClaimTx),version:Fn(2,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),name:Sn,nameSalt:dr(0,tn),nameFee:An,fee:Cn,ttl:mr},{tag:Fn($t.NameUpdateTx),version:Fn(1,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),nameId:_n,nameTtl:Ir,pointers:Rn(!1),clientTtl:xr,fee:Cn,ttl:mr},{tag:Fn($t.NameUpdateTx),version:Fn(2),accountId:jt(et.AccountAddress),nonce:kn("accountId"),nameId:_n,nameTtl:Ir,pointers:Rn(!0),clientTtl:xr,fee:Cn,ttl:mr},{tag:Fn($t.NameTransferTx),version:Fn(1,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),nameId:_n,recipientId:jt(et.AccountAddress,et.Name),fee:Cn,ttl:mr},{tag:Fn($t.NameRevokeTx),version:Fn(1,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),nameId:_n,fee:Cn,ttl:mr},{tag:Fn($t.ContractCreateTx),version:Fn(1,!0),ownerId:jt(et.AccountAddress),nonce:kn("ownerId"),code:cn(et.ContractBytearray),ctVersion:Ht,fee:Cn,ttl:mr,deposit:pr(((e=0)=>{if(0===+e)return e;throw new C("deposit","equal 0 (because is not refundable)",e)}),on),amount:on,gasLimit:Mn,gasPrice:pn,callData:cn(et.ContractBytearray)},{tag:Fn($t.ContractCallTx),version:Fn(1,!0),callerId:jt(et.AccountAddress),nonce:kn("callerId"),contractId:jt(et.ContractAddress,et.Name),abiVersion:Vt,fee:Cn,ttl:mr,amount:on,gasLimit:Mn,gasPrice:pn,callData:cn(et.ContractBytearray)},{tag:Fn($t.OracleRegisterTx),version:Fn(1,!0),accountId:jt(et.AccountAddress),nonce:kn("accountId"),queryFormat:Hn,responseFormat:Hn,queryFee:on,oracleTtlType:dr(fr.delta,un(fr)),oracleTtlValue:dr(500,bn),fee:Cn,ttl:mr,abiVersion:Vt},{tag:Fn($t.OracleExtendTx),version:Fn(1,!0),oracleId:jt(et.OracleAddress,et.Name),nonce:kn("oracleId"),oracleTtlType:dr(fr.delta,un(fr)),oracleTtlValue:dr(500,bn),fee:Cn,ttl:mr},{tag:Fn($t.OracleQueryTx),version:Fn(1,!0),senderId:jt(et.AccountAddress),nonce:kn("senderId"),oracleId:jt(et.OracleAddress,et.Name),query:Hn,queryFee:$n,queryTtlType:dr(fr.delta,un(fr)),queryTtlValue:dr(10,bn),responseTtlType:dr(fr.delta,un(fr)),responseTtlValue:dr(10,bn),fee:Cn,ttl:mr},{tag:Fn($t.OracleRespondTx),version:Fn(1,!0),oracleId:jt(et.OracleAddress),nonce:kn("oracleId"),queryId:cn(et.OracleQueryId),response:Hn,responseTtlType:dr(fr.delta,un(fr)),responseTtlValue:dr(10,bn),fee:Cn,ttl:mr},{tag:Fn($t.ChannelCreateTx),version:Fn(2,!0),initiator:jt(et.AccountAddress),initiatorAmount:tn,responder:jt(et.AccountAddress),responderAmount:tn,channelReserve:tn,lockPeriod:tn,ttl:mr,fee:Cn,initiatorDelegateIds:Wt(jt(...Ut)),responderDelegateIds:Wt(jt(...Ut)),stateHash:cn(et.State),nonce:kn("initiator")},{tag:Fn($t.ChannelCloseMutualTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),initiatorAmountFinal:tn,responderAmountFinal:tn,ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.ChannelCloseSoloTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),payload:cn(et.Transaction),poi:vr,ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.ChannelSlashTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),payload:cn(et.Transaction),poi:vr,ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.ChannelDepositTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),amount:tn,ttl:mr,fee:Cn,stateHash:cn(et.State),round:bn,nonce:kn("fromId")},{tag:Fn($t.ChannelWithdrawTx),version:Fn(1,!0),channelId:jt(et.Channel),toId:jt(et.AccountAddress),amount:tn,ttl:mr,fee:Cn,stateHash:cn(et.State),round:bn,nonce:kn("fromId")},{tag:Fn($t.ChannelSettleTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),initiatorAmountFinal:tn,responderAmountFinal:tn,ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.ChannelForceProgressTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),payload:cn(et.Transaction),round:bn,update:cn(et.ContractBytearray),stateHash:cn(et.State),offChainTrees:cn(et.StateTrees),ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.ChannelOffChainTx),version:Fn(2,!0),channelId:jt(et.Channel),round:bn,stateHash:cn(et.State)},{tag:Fn($t.ChannelSnapshotSoloTx),version:Fn(1,!0),channelId:jt(et.Channel),fromId:jt(et.AccountAddress),payload:cn(et.Transaction),ttl:mr,fee:Cn,nonce:kn("fromId")},{tag:Fn($t.GaAttachTx),version:Fn(1,!0),ownerId:jt(et.AccountAddress),nonce:kn("ownerId"),code:cn(et.ContractBytearray),authFun:Dn,ctVersion:Ht,fee:Cn,ttl:mr,gasLimit:Mn,gasPrice:pn,callData:cn(et.ContractBytearray)},{tag:Fn($t.GaMetaTx),version:Fn(2,!0),gaId:jt(et.AccountAddress),authData:cn(et.ContractBytearray),abiVersion:Vt,fee:Cn,gasLimit:Mn,gasPrice:pn,tx:Nr},{tag:Fn($t.PayingForTx),version:Fn(1,!0),payerId:jt(et.AccountAddress),nonce:kn("payerId"),fee:Cn,tx:Nr}];var Cr=n(18212);function br(e,t,n,r){const i=e.filter((e=>e.tag.constValue===n));if(0===i.length)throw new ce(`${t[n]} (${n})`,0);if(null==r){const e=i.find((e=>e.version.constValueOptional));if(null==e)throw new q(`Can't find default schema of ${t[n]} (${n})`);r=e.version.constValue}const a=i.find((e=>e.version.constValue===r));if(null==a)throw new ce(`${t[n]} (${n})`,r);return Object.entries(a)}function zr(e,t,n,r,i){const a=br(e,t,n.tag,n.version),s=a.map((([e,t])=>t.serialize(n[e],{...n,...r},n)));return yt((0,Cr.encode)(s),i)}function Mr(e,t,n,r,i){const a=(0,Cr.decode)(ht(n)),s=+Xt(a[0]),o=+Xt(a[1]),c=br(e,t,s,o);if(null!=r&&r!==s)throw new ie(`Expected ${t[r]} tag, got ${t[s]} instead`);if(a.length!==c.length)throw new C("RLP length",c.length,a.length);return Object.fromEntries(c.map((([e,t],n)=>[e,t.deserialize(a[n],i)])))}var Tr,Sr={serialize(e){return He.Buffer.from([e?1:0])},deserialize(e){return 1===e[0]}};function Ar(e,t){return{serialize(e,{packEntry:n}){return ht(n({tag:yr.Mtree,values:Object.entries(e).map((([e,r])=>({tag:yr.MtreeValue,key:ht(e),value:ht(n({...r,tag:t}))})))}))},deserialize(n,{unpackEntry:r}){const{values:i}=r(yt(n,et.Bytearray),yr.Mtree);return Object.fromEntries(i.filter((({key:t})=>e!==et.ContractAddress||32===t.length)).map((({key:n,value:i})=>[yt(n,e),r(yt(i,et.Bytearray),t)])))},recursiveType:!0}}function qr(e,t){kr(e,t),t.add(e)}function _r(e,t,n){kr(e,t),t.set(e,n)}function kr(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Pr(e,t,n){return e.set(Br(e,t),n),n}function Er(e,t){return e.get(Br(e,t))}function Br(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Or=function(e){return e[e["Branch"]=0]="Branch",e[e["Extension"]=1]="Extension",e[e["Leaf"]=2]="Leaf",e}(Or||{}),Rr=new WeakMap,$r=new WeakMap,Dr=new WeakMap,Fr=new WeakMap,Hr=new WeakMap,Vr=new WeakMap,Gr=new WeakSet;class Ur{get isComplete(){return Er($r,this)}constructor(e,t,n,r){if(qr(this,Gr),_r(this,Rr,void 0),_r(this,$r,!0),_r(this,Dr,void 0),_r(this,Fr,void 0),_r(this,Hr,void 0),_r(this,Vr,void 0),Pr(Fr,this,t),Pr(Hr,this,n),Pr(Vr,this,r),Pr(Rr,this,e[0].toString("hex")),Pr(Dr,this,Object.fromEntries(e[1].map((e=>[e[0].toString("hex"),e[1]])))),null!=Er(Dr,this)[Er(Rr,this)])Object.entries(Er(Dr,this)).forEach((([e,t])=>{if(jr.call(Ur,t)!==e)throw new Y;const{type:n}=Wr.call(Ur,t);switch(n){case Or.Branch:t.slice(0,16).filter((e=>e.length)).forEach((e=>{null==Er(Dr,this)[e.toString("hex")]&&Pr($r,this,!1)}));break;case Or.Extension:if(null==Er(Dr,this)[t[1].toString("hex")])throw new Z("Can't find a node by hash in extension node");break;case Or.Leaf:break;default:throw new q(`Unknown MPTree node type: ${n}`)}}));else{if(0!==Object.keys(Er(Dr,this)).length)throw new Z("Can't find a node by root hash");Pr($r,this,!1)}}isEqual(e){return Er(Rr,this)===Er(Rr,e)}serialize(){return[He.Buffer.from(Er(Rr,this),"hex"),Object.entries(Er(Dr,this)).map((([e,t])=>[He.Buffer.from(e,"hex"),t]))]}get(e){const t=Br(Gr,this,Lr).call(this,ht(e).toString("hex"));return null==t?t:Er(Vr,this).call(this,yt(t,et.Bytearray),Er(Hr,this))}toObject(){return Object.fromEntries(Br(Gr,this,Kr).call(this).filter((([e])=>Er(Fr,this)!==et.ContractAddress||66!==e.length)).map((([e,t])=>[yt(He.Buffer.from(e,"hex"),Er(Fr,this)),Er(Vr,this).call(this,yt(t,et.Bytearray),Er(Hr,this))])))}}function jr(e){return He.Buffer.from(gt((0,Cr.encode)(e))).toString("hex")}function Wr(e){switch(e.length){case 17:return{type:Or.Branch,...0!==e[16].length&&{value:e[16]}};case 2:{const t=e[0][0]>>4;if(t>3)throw new te(t);const n=t<=1?Or.Extension:Or.Leaf,r=[0,2].includes(t)?2:1;return{type:n,...n===Or.Leaf&&{value:e[1]},path:e[0].toString("hex").slice(r)}}default:throw new ee(e.length)}}function Lr(e){let t=Er(Rr,this),n=e;while(1){const e=Er(Dr,this)[t];if(null==e){if(!this.isComplete)return;throw new q("Can't find node in complete tree")}const{type:r,value:i,path:a}=Wr.call(Tr,e);switch(r){case Or.Branch:if(0===n.length)return i;t=e[+`0x${n[0]}`].toString("hex"),n=n.substring(1);break;case Or.Extension:if(n.substring(0,a?.length)!==a)return;t=e[1].toString("hex"),n=n.substring(a.length);break;case Or.Leaf:if(a!==n)return;return i;default:throw new q(`Unknown MPTree node type: ${r}`)}}}function Kr(){const e=[],t=(n,r)=>{const i=Er(Dr,this)[n];if(null==i){if(!this.isComplete)return;throw new q("Can't find node in complete tree")}const{type:a,value:s,path:o}=Wr.call(Tr,i);switch(a){case Or.Branch:i.slice(0,16).map(((e,t)=>[e,t])).filter((([e])=>e.length)).forEach((([e,n])=>t(e.toString("hex"),r+n.toString(16)))),null!=s&&e.push([r,s]);break;case Or.Extension:t(i[1].toString("hex"),r+o);break;case Or.Leaf:if(null==s)throw new _;e.push([r+o,s]);break;default:throw new q(`Unknown MPTree node type: ${a}`)}};return t(Er(Rr,this),""),e}function Qr(e,t){return{serialize(e){return e.serialize()},deserialize(n,{unpackEntry:r}){return new Ur(n,e,t,r)}}}function Jr(e){return{serialize(t,{packEntry:n}){return ht(n({tag:e,payload:t}))},deserialize(t,{unpackEntry:n}){return n(yt(t,et.Bytearray),e).payload},recursiveType:!0}}Tr=Ur;const Xr=Wt(ln(yr.MtreeValue)),Yr=Ar(et.ContractAddress,yr.Contract),Zr=Ar(et.AccountAddress,yr.Account),ei=Ar(et.Bytearray,yr.ContractCall),ti=Ar(et.Channel,yr.Channel),ni=Ar(et.Name,yr.Name),ri=Ar(et.OracleAddress,yr.Oracle),ii=[{tag:Fn(yr.Account),version:Fn(1),nonce:bn,balance:tn},{tag:Fn(yr.Account),version:Fn(2,!0),flags:tn,nonce:bn,balance:tn,gaContract:jt(et.ContractAddress,et.Name),gaAuthFun:cn(et.ContractBytearray)},{tag:Fn(yr.Name),version:Fn(1,!0),accountId:jt(et.AccountAddress),nameTtl:bn,status:Dn,clientTtl:bn,pointers:Rn},{tag:Fn(yr.Contract),version:Fn(1,!0),owner:jt(et.AccountAddress),ctVersion:Ht,code:cn(et.ContractBytearray),log:cn(et.ContractBytearray),active:Sr,referers:Wt(jt(et.AccountAddress)),deposit:on},{tag:Fn(yr.ContractCall),version:Fn(2,!0),callerId:jt(et.AccountAddress),callerNonce:bn,height:bn,contractId:jt(et.ContractAddress),gasPrice:tn,gasUsed:bn,returnValue:cn(et.ContractBytearray),returnType:un(hr),log:Wt(Dn)},{tag:Fn(yr.Oracle),version:Fn(1,!0),accountId:jt(et.AccountAddress),queryFormat:Hn,responseFormat:Hn,queryFee:on,oracleTtlValue:bn,abiVersion:Vt},{tag:Fn(yr.Channel),version:Fn(3,!0),initiator:jt(et.AccountAddress),responder:jt(et.AccountAddress),channelAmount:tn,initiatorAmount:tn,responderAmount:tn,channelReserve:tn,initiatorDelegateIds:Wt(jt(...Ut)),responderDelegateIds:Wt(jt(...Ut)),stateHash:cn(et.State),round:bn,soloRound:tn,lockPeriod:tn,lockedUntil:tn,initiatorAuth:cn(et.ContractBytearray),responderAuth:cn(et.ContractBytearray)},{tag:Fn(yr.ChannelOffChainUpdateTransfer),version:Fn(1,!0),from:jt(et.AccountAddress),to:jt(et.AccountAddress),amount:tn},{tag:Fn(yr.ChannelOffChainUpdateDeposit),version:Fn(1,!0),from:jt(et.AccountAddress),amount:tn},{tag:Fn(yr.ChannelOffChainUpdateWithdraw),version:Fn(1,!0),from:jt(et.AccountAddress),amount:tn},{tag:Fn(yr.ChannelOffChainUpdateCreateContract),version:Fn(1,!0),owner:jt(et.AccountAddress),ctVersion:Ht,code:cn(et.ContractBytearray),deposit:tn,callData:cn(et.ContractBytearray)},{tag:Fn(yr.ChannelOffChainUpdateCallContract),version:Fn(1,!0),caller:jt(et.AccountAddress),contract:jt(et.ContractAddress),abiVersion:Vt,amount:tn,callData:cn(et.ContractBytearray),callStack:Dn,gasPrice:pn,gasLimit:Mn},{tag:Fn(yr.TreesPoi),version:Fn(1,!0),accounts:Wt(Qr(et.AccountAddress,yr.Account)),calls:Wt(Qr(et.Bytearray,yr.ContractCall)),channels:Wt(Qr(et.Channel,yr.Channel)),contracts:Wt(Qr(et.ContractAddress,yr.Contract)),ns:Wt(Qr(et.Name,yr.Name)),oracles:Wt(Qr(et.OracleAddress,yr.Oracle))},{tag:Fn(yr.StateTrees),version:Fn(0,!0),contracts:Jr(yr.ContractsMtree),calls:Jr(yr.CallsMtree),channels:Jr(yr.ChannelsMtree),ns:Jr(yr.NameserviceMtree),oracles:Jr(yr.OraclesMtree),accounts:Jr(yr.AccountsMtree)},{tag:Fn(yr.Mtree),version:Fn(1,!0),values:Xr},{tag:Fn(yr.MtreeValue),version:Fn(1,!0),key:Dn,value:Dn},{tag:Fn(yr.ContractsMtree),version:Fn(1,!0),payload:Yr},{tag:Fn(yr.CallsMtree),version:Fn(1,!0),payload:ei},{tag:Fn(yr.ChannelsMtree),version:Fn(1,!0),payload:ti},{tag:Fn(yr.NameserviceMtree),version:Fn(1,!0),payload:ni},{tag:Fn(yr.OraclesMtree),version:Fn(1,!0),payload:ri},{tag:Fn(yr.AccountsMtree),version:Fn(1,!0),payload:Zr},{tag:Fn(yr.GaMetaTxAuthData),version:Fn(1,!0),fee:on,gasPrice:pn,txHash:cn(et.TxHash)}],ai=[[yr.CallsMtree,et.CallStateTree],[yr.StateTrees,et.StateTrees],[yr.TreesPoi,et.Poi]];function si(e){var t;const n=null!==(t=ai.find((([t])=>t===e.tag))?.[1])&&void 0!==t?t:et.Bytearray;return zr(ii,yr,e,{packEntry:si},n)}function oi(e,t){var n;return null!==(n=t)&&void 0!==n||(t=ai.find((([,t])=>e.startsWith(t)))?.[0]),Mr(ii,yr,e,t,{unpackEntry:oi})}function ci(e,t){return br(wr,$t,e,t)}function li(e){return zr(wr,$t,e,{unpackTx:mi,buildTx:li,rebuildTx:t=>li({...e,...t}),packEntry:si},et.Transaction)}async function ui(e){return await Promise.all(ci(e.tag,e.version).map((async([t,n])=>{null!=n.prepare&&(e[t]=await n.prepare(e[t],e,e))}))),li(e)}function mi(e,t){return Mr(wr,$t,e,t,{unpackTx:mi,unpackEntry:oi})}function di(e){const t="string"===typeof e&&e.startsWith("tx_")?ht(e):e;return yt(gt(t),et.TxHash)}function pi(e){let t=mi(e);if($t.SignedTx===t.tag&&(t=t.encodedTx),$t.ContractCreateTx!==t.tag&&$t.GaAttachTx!==t.tag)throw new C("contractTx","a contractCreateTx or gaAttach",t.tag);return Lt(t.ownerId,t.nonce)}function hi(e,t,n){yi(e,t),t.set(e,n)}function yi(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function fi(e,t){return e.get(Ni(e,t))}function gi(e,t,n){return e.set(Ni(e,t),n),n}function Ni(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}function vi(e,t,n){const r=[t];n&&r.push("inner_tx");const i=ht(e);return Qe([He.Buffer.from(r.join("-")),gt(i)])}var xi=new WeakMap;class Ii extends Ge{constructor(e){super(),hi(this,xi,void 0),this.secretKey=e;const t=Ve.sign.keyPair.fromSeed(ht(e));gi(xi,this,t.secretKey),this.address=yt(t.publicKey,et.AccountAddress)}static generate(){const e=yt(Ve.randomBytes(32),et.AccountSecretKey);return new Ii(e)}async sign(e,t){return this.unsafeSign(e,t)}async unsafeSign(e,t){return Ve.sign.detached(He.Buffer.from(e),fi(xi,this))}async signTransaction(e,{innerTx:t,networkId:n,...r}={}){if(null==n)throw new C("networkId","provided",n);const i=ht(e),a=vi(e,n,!0===t),s=[await this.unsafeSign(a,r)];return li({tag:$t.SignedTx,encodedTx:i,signatures:s})}async signMessage(e,t){return this.unsafeSign(wt(e),t)}async signTypedData(e,t,{name:n,version:r,networkId:i,contractAddress:a,...s}={}){const o=Tt(e,t,{name:n,version:r,networkId:i,contractAddress:a}),c=await this.unsafeSign(o,s);return yt(c,et.Signature)}async signDelegation(e,{networkId:t}={}){if(null==t)throw new C("networkId","provided",t);const n=Qe([It,new Uint8Array([1]),He.Buffer.from(t),ht(e)]),r=await this.unsafeSign(n);return yt(r,et.Signature)}}let wi=function(e){return e[e["AensWildcard"]=1]="AensWildcard",e[e["AensName"]=2]="AensName",e[e["AensPreclaim"]=3]="AensPreclaim",e[e["Oracle"]=4]="Oracle",e[e["OracleResponse"]=5]="OracleResponse",e}({});const Ci=jt(et.OracleAddress),bi={serialize(e){return Ci.serialize(yt(ht(e),et.OracleAddress))},deserialize(e){return yt(ht(Ci.deserialize(e)),et.OracleQueryId)}},zi=jt(et.ContractAddress),Mi=[{tag:Fn(wi.AensWildcard),version:Fn(1,!0),accountAddress:jt(et.AccountAddress),contractAddress:zi},{tag:Fn(wi.AensName),version:Fn(1,!0),accountAddress:jt(et.AccountAddress),nameId:_n,contractAddress:zi},{tag:Fn(wi.AensPreclaim),version:Fn(1,!0),accountAddress:jt(et.AccountAddress),contractAddress:zi},{tag:Fn(wi.Oracle),version:Fn(1,!0),accountAddress:jt(et.AccountAddress),contractAddress:zi},{tag:Fn(wi.OracleResponse),version:Fn(1,!0),queryId:bi,contractAddress:zi}];function Ti(e,t){return Mr(Mi,wi,e,t,{})}n(18237);var Si=n(28784);function Ai(e,t){const n=e=>e.split(/[-+]/)[0].split(".").map((e=>+e)),r=n(e),i=n(t),a=Math.max(...r,...i)+1,s=e=>e.reverse().reduce(((e,t,n)=>e+t*a**n),0);return s(r)-s(i)}function qi(e,t,n){return Ai(e,t)>=0&&(null==n||Ai(e,n)<0)}const _i="_sdk-big-int-",ki=(...e)=>{const t=(0,Si.rl)(...e),{serialize:n,deserialize:r}=t;return Object.assign(t,{serialize(...[e,t,r,i]){if("BigInt"!==e.type.name||null==t)return n.call(this,e,t,r,i);var a;if("bigint"!==typeof t)throw null!==(a=r)&&void 0!==a||(r=e.serializedName),new Error(`${r} with value ${t} must be of type bigint.`);return t.toString()},deserialize(...[e,t,n,i]){if("BigInt"!==e.type.name||null==t){"string"===typeof t&&t.startsWith(_i)&&(console.warn(`AeSdk internal error: BigInt value ${t} handled incorrectly`),t=+t.replace(_i,""));const a=r.call(this,e,t,n,i);return a instanceof Date?new Date(+a/1e3):a}if("number"===typeof t&&t>Number.MAX_SAFE_INTEGER)throw new q(`Number ${t} is not accurate to be converted to BigInt`);return BigInt(t.toString().replace(_i,""))}})},Pi=Number.MAX_SAFE_INTEGER.toString().length,Ei=new RegExp(String.raw`("\w+":\s*)(\d{${Pi},})(\s*[,}])`,"m"),Bi=new RegExp(String.raw`([[,]\s*)(\d{${Pi},})\b`,"m"),Oi={name:"parse-big-int",async sendRequest(e,t){const n=await t(e);return null==n.bodyAsText||(n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(Ei,"g"),(e=>{const t=e.match(Ei);if(null==t)throw new _;const[,n,r,i]=t;return[n,+r>Number.MAX_SAFE_INTEGER?`"${_i}${r}"`:r,i].join("")})),n.bodyAsText=n.bodyAsText.replaceAll(new RegExp(Bi,"g"),(e=>{const t=e.match(Bi);if(null==t)throw new _;const[,n,r]=t;return`${n}"${_i}${r}"`}))),n}},Ri=()=>{const e=new Map;return{policy:{name:"request-queues",async sendRequest(t,n){var r;const i=t.headers.get("__queue");t.headers.delete("__queue");const a=async()=>n(t);if(null==i)return a();const s=(null!==(r=e.get(i))&&void 0!==r?r:Promise.resolve()).then(a);return e.set(i,s.catch((()=>{}))),s}},position:"perCall"}},$i=()=>{const e=new Map;return{policy:{name:"combine-get-requests",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);e.set(i,a);try{return await a}finally{e.delete(i)}}},position:"perCall"}},Di=()=>{const e=new Map;return{policy:{name:"aggressive-cache-get-responses",async sendRequest(t,n){var r;if("GET"!==t.method)return n(t);const i=JSON.stringify([t.url,t.body]),a=null!==(r=e.get(i))&&void 0!==r?r:n(t);return e.set(i,a),a}},position:"perCall"}},Fi=e=>({policy:{name:"error-formatter",async sendRequest(t,n){try{return await n(t)}catch(r){if(!(r instanceof je.pj)||null==r.request||r.message.startsWith("Error "))throw r;const t=`${new URL(r.request.url).pathname.slice(1)} error`;if(null==r.response?.bodyAsText)throw""===r.message&&(r.message=`${t}: ${r.code}`),r;const n=r.response.parsedBody;r.message=t;const i=null==n?` ${r.response.status} status code`:e(n);throw""!==i&&(r.message+=`:${i}`),r}}},position:"perCall"}),Hi=(e,t,n,r,i)=>({policy:{name:"version-check",async sendRequest(a,s){if(a.headers.has("__version-check"))return a.headers.delete("__version-check"),s(a);const o={requestOptions:{customHeaders:{"__version-check":"true"}}},c=[await t(o),n,r];if(!qi(...c)){const t=new A(e,...c);if(!i)throw t;console.warn(t.message)}return s(a)}},position:"perCall"}),Vi=(e,t)=>({policy:{name:"retry-on-failure",async sendRequest(n,r){var i;const a=null!==(i=n.headers.get("__retry-code"))&&void 0!==i?i:NaN;n.headers.delete("__retry-code");const s=[200,400,403,410,500].filter((e=>e!==+a)),o=new Array(e).fill(0).map(((t,n)=>((n+1)/e)**2)),c=o.reduce(((e,t)=>e+t),0),l=o.map((e=>Math.floor(e/c*t)));let u=new je.pj("Not expected to be thrown");for(let t=0;t<=e;t+=1){if(0!==t){await We(l[t-1]);const e=new URL(n.url);e.searchParams.set("__sdk-retry",t.toString()),n.url=e.toString()}try{return await r(n)}catch(d){var m;if(!(d instanceof je.pj))throw d;if(s.includes(null!==(m=d.response?.status)&&void 0!==m?m:0))throw d;u=d}}throw u}},position:"perCall"}),Gi={type:{name:"Composite",className:"Account",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},balance:{constraints:{InclusiveMinimum:0},serializedName:"balance",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},payable:{serializedName:"payable",type:{name:"Boolean"}},kind:{serializedName:"kind",type:{name:"Enum",allowedValues:["basic","generalized"]}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{serializedName:"auth_fun",type:{name:"String"}}}}},Ui={type:{name:"Composite",className:"ErrorModel",modelProperties:{reason:{serializedName:"reason",required:!0,type:{name:"String"}},errorCode:{serializedName:"error_code",type:{name:"String"}}}}},ji={type:{name:"Composite",className:"NextNonceResponse",modelProperties:{nextNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"next_nonce",required:!0,type:{name:"Number"}}}}},Wi={type:{name:"Composite",className:"SignedTxs",modelProperties:{transactions:{serializedName:"transactions",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedTx"}}}}}}},Li={type:{name:"Composite",className:"SignedTx",modelProperties:{tx:{serializedName:"tx",type:{name:"Composite",className:"Tx"}},blockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:-1},serializedName:"block_height",required:!0,type:{name:"Number"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},hash:{serializedName:"hash",required:!0,type:{name:"String"}},encodedTx:{serializedName:"encoded_tx",type:{name:"String"}},signatures:{serializedName:"signatures",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ki={type:{name:"Composite",className:"Tx",modelProperties:{recipientId:{serializedName:"recipient_id",type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",type:{name:"String"}},initiatorId:{serializedName:"initiator_id",type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",type:{name:"BigInt"}},responderId:{serializedName:"responder_id",type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",type:{name:"Number"}},stateHash:{serializedName:"state_hash",type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},channelId:{serializedName:"channel_id",type:{name:"String"}},fromId:{serializedName:"from_id",type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",type:{name:"Number"}},toId:{serializedName:"to_id",type:{name:"String"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",type:{name:"BigInt"}},poi:{serializedName:"poi",type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",type:{name:"Sequence",element:{type:{name:"String"}}}},queryFormat:{serializedName:"query_format",type:{name:"String"}},responseFormat:{serializedName:"response_format",type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},accountId:{serializedName:"account_id",type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",type:{name:"String"}},query:{serializedName:"query",type:{name:"String"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},queryId:{serializedName:"query_id",type:{name:"String"}},response:{serializedName:"response",type:{name:"String"}},commitmentId:{serializedName:"commitment_id",type:{name:"String"}},name:{serializedName:"name",type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},nameId:{serializedName:"name_id",type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",type:{name:"Number"}},pointers:{serializedName:"pointers",type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",type:{name:"Number"}},ownerId:{serializedName:"owner_id",type:{name:"String"}},code:{serializedName:"code",type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",type:{name:"BigInt"}},callData:{serializedName:"call_data",type:{name:"String"}},callerId:{serializedName:"caller_id",type:{name:"String"}},contractId:{serializedName:"contract_id",type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",type:{name:"String"}},gaId:{serializedName:"ga_id",type:{name:"String"}},authData:{serializedName:"auth_data",type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}},payerId:{serializedName:"payer_id",type:{name:"String"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["SpendTx","ChannelCreateTx","ChannelDepositTx","ChannelWithdrawTx","ChannelForceProgressTx","ChannelCloseMutualTx","ChannelCloseSoloTx","ChannelSlashTx","ChannelSettleTx","ChannelSnapshotSoloTx","ChannelSetDelegatesTx","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","NamePreclaimTx","NameClaimTx","NameUpdateTx","NameTransferTx","NameRevokeTx","ContractCreateTx","ContractCallTx","GAAttachTx","GAMetaTx","PayingForTx"]}}}}},Qi={type:{name:"Composite",className:"Delegates",modelProperties:{initiator:{serializedName:"initiator",type:{name:"Sequence",element:{type:{name:"String"}}}},responder:{serializedName:"responder",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ji={type:{name:"Composite",className:"OffChainUpdate",uberParent:"OffChainUpdate",polymorphicDiscriminator:{serializedName:"op",clientName:"op"},modelProperties:{op:{serializedName:"op",required:!0,type:{name:"String"}}}}},Xi={type:{name:"Composite",className:"RelativeTTL",modelProperties:{type:{defaultValue:"delta",isConstant:!0,serializedName:"type",type:{name:"String"}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},Yi={type:{name:"Composite",className:"Ttl",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"Enum",allowedValues:["delta","block"]}},value:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"value",required:!0,type:{name:"Number"}}}}},Zi={type:{name:"Composite",className:"NamePointer",modelProperties:{key:{serializedName:"key",required:!0,type:{name:"String"}},encodedKey:{serializedName:"encoded_key",type:{name:"String"}},id:{serializedName:"id",required:!0,type:{name:"String"}}}}},ea={type:{name:"Composite",className:"AuctionEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},startedAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"started_at",required:!0,type:{name:"Number"}},endsAt:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ends_at",required:!0,type:{name:"Number"}},highestBidder:{serializedName:"highest_bidder",required:!0,type:{name:"String"}},highestBid:{constraints:{InclusiveMinimum:0},serializedName:"highest_bid",required:!0,type:{name:"BigInt"}}}}},ta={type:{name:"Composite",className:"Channel",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},channelAmount:{constraints:{InclusiveMinimum:0},serializedName:"channel_amount",required:!0,type:{name:"BigInt"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},soloRound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solo_round",required:!0,type:{name:"Number"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},lockedUntil:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"locked_until",required:!0,type:{name:"Number"}}}}},na={type:{name:"Composite",className:"ContractObject",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},active:{serializedName:"active",required:!0,type:{name:"Boolean"}},referrerIds:{serializedName:"referrer_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},deposit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}}}}},ra={type:{name:"Composite",className:"ByteCode",modelProperties:{bytecode:{serializedName:"bytecode",required:!0,type:{name:"String"}}}}},ia={type:{name:"Composite",className:"PoI",modelProperties:{poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},aa={type:{name:"Composite",className:"Currency",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},symbol:{serializedName:"symbol",required:!0,type:{name:"String"}},subunit:{serializedName:"subunit",required:!0,type:{name:"String"}},subunitsPerUnit:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"subunits_per_unit",required:!0,type:{name:"BigInt"}},fiatConverstionUrl:{serializedName:"fiat_converstion_url",type:{name:"String"}},fiatConversionUrl:{serializedName:"fiat_conversion_url",type:{name:"String"}},logo:{serializedName:"logo",type:{name:"Composite",className:"Image"}},primaryColour:{serializedName:"primary_colour",required:!0,type:{name:"String"}},secondaryColour:{serializedName:"secondary_colour",required:!0,type:{name:"String"}},networkName:{serializedName:"network_name",required:!0,type:{name:"String"}}}}},sa={type:{name:"Composite",className:"Image",modelProperties:{type:{serializedName:"type",type:{name:"String"}},data:{serializedName:"data",type:{name:"String"}}}}},oa={type:{name:"Composite",className:"DryRunInput",modelProperties:{top:{serializedName:"top",type:{name:"String"}},accounts:{serializedName:"accounts",type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunAccount"}}}},txs:{serializedName:"txs",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunInputItem"}}}},txEvents:{defaultValue:!1,serializedName:"tx_events",type:{name:"Boolean"}}}}},ca={type:{name:"Composite",className:"DryRunAccount",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},la={type:{name:"Composite",className:"DryRunInputItem",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},callReq:{serializedName:"call_req",type:{name:"Composite",className:"DryRunCallReq"}}}}},ua={type:{name:"Composite",className:"DryRunCallReq",modelProperties:{calldata:{serializedName:"calldata",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",type:{name:"BigInt"}},gas:{constraints:{InclusiveMinimum:0},serializedName:"gas",type:{name:"Number"}},caller:{serializedName:"caller",type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}},context:{serializedName:"context",type:{name:"Composite",className:"DryRunCallContext"}}}}},ma={type:{name:"Composite",className:"DryRunCallContext",modelProperties:{tx:{serializedName:"tx",type:{name:"String"}},txHash:{serializedName:"tx_hash",type:{name:"String"}},stateful:{serializedName:"stateful",type:{name:"Boolean"}}}}},da={type:{name:"Composite",className:"DryRunResults",modelProperties:{results:{serializedName:"results",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"DryRunResult"}}}},txEvents:{serializedName:"tx_events",type:{name:"Sequence",element:{type:{name:"Dictionary",value:{type:{name:"any"}}}}}}}}},pa={type:{name:"Composite",className:"DryRunResult",modelProperties:{type:{serializedName:"type",required:!0,type:{name:"String"}},result:{serializedName:"result",required:!0,type:{name:"String"}},reason:{serializedName:"reason",type:{name:"String"}},callObj:{serializedName:"call_obj",type:{name:"Composite",className:"ContractCallObject"}}}}},ha={type:{name:"Composite",className:"ContractCallObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},callerNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"caller_nonce",required:!0,type:{name:"Number"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},log:{serializedName:"log",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Event"}}}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error","revert"]}}}}},ya={type:{name:"Composite",className:"Event",modelProperties:{address:{serializedName:"address",required:!0,type:{name:"String"}},topics:{serializedName:"topics",required:!0,type:{name:"Sequence",element:{constraints:{InclusiveMinimum:0},type:{name:"BigInt"}}}},data:{serializedName:"data",required:!0,type:{name:"String"}}}}},fa={type:{name:"Composite",className:"Generation",modelProperties:{keyBlock:{serializedName:"key_block",type:{name:"Composite",className:"KeyBlock"}},microBlocks:{serializedName:"micro_blocks",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},ga={type:{name:"Composite",className:"KeyBlock",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",required:!0,type:{name:"String"}},beneficiary:{serializedName:"beneficiary",required:!0,type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",required:!0,type:{name:"String"}}}}},Na={type:{name:"Composite",className:"Header",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},miner:{serializedName:"miner",type:{name:"String"}},beneficiary:{serializedName:"beneficiary",type:{name:"String"}},target:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"target",type:{name:"Number"}},pow:{constraints:{MinItems:42,MaxItems:42},serializedName:"pow",type:{name:"Sequence",element:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},type:{name:"Number"}}}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},info:{serializedName:"info",type:{name:"String"}},pofHash:{serializedName:"pof_hash",type:{name:"String"}},txsHash:{serializedName:"txs_hash",type:{name:"String"}},signature:{serializedName:"signature",type:{name:"String"}}}}},va={type:{name:"Composite",className:"PinningTx",modelProperties:{epoch:{serializedName:"epoch",required:!0,type:{name:"Number"}},height:{serializedName:"height",required:!0,type:{name:"Number"}},blockHash:{serializedName:"block_hash",required:!0,type:{name:"String"}},parentPayload:{serializedName:"parent_payload",required:!0,type:{name:"String"}},lastLeader:{serializedName:"last_leader",required:!0,type:{name:"String"}},parentType:{serializedName:"parent_type",required:!0,type:{name:"String"}},parentNetworkId:{serializedName:"parent_network_id",required:!0,type:{name:"String"}}}}},xa={type:{name:"Composite",className:"HCContractPubkeys",modelProperties:{staking:{serializedName:"staking",required:!0,type:{name:"String"}},election:{serializedName:"election",type:{name:"String"}},rewards:{serializedName:"rewards",type:{name:"String"}}}}},Ia={type:{name:"Composite",className:"HashResponse",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}}}}},wa={type:{name:"Composite",className:"HeightResponse",modelProperties:{height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}}}},Ca={type:{name:"Composite",className:"MicroBlockHeader",modelProperties:{hash:{serializedName:"hash",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},pofHash:{serializedName:"pof_hash",required:!0,type:{name:"String"}},prevHash:{serializedName:"prev_hash",required:!0,type:{name:"String"}},prevKeyHash:{serializedName:"prev_key_hash",required:!0,type:{name:"String"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},txsHash:{serializedName:"txs_hash",required:!0,type:{name:"String"}},signature:{serializedName:"signature",required:!0,type:{name:"String"}},time:{serializedName:"time",required:!0,type:{name:"UnixTime"}},version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}}}}},ba={type:{name:"Composite",className:"CountResponse",modelProperties:{count:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"count",required:!0,type:{name:"Number"}}}}},za={type:{name:"Composite",className:"NameEntry",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},owner:{serializedName:"owner",type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}}}}},Ma={type:{name:"Composite",className:"RegisteredOracle",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}}}}},Ta={type:{name:"Composite",className:"OracleQueries",modelProperties:{oracleQueries:{serializedName:"oracle_queries",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"OracleQuery"}}}}}}},Sa={type:{name:"Composite",className:"OracleQuery",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},senderNonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"sender_nonce",required:!0,type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",required:!0,type:{name:"Number"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"Ttl"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}}}}},Aa={type:{name:"Composite",className:"PeerPubKey",modelProperties:{pubkey:{serializedName:"pubkey",required:!0,type:{name:"String"}}}}},qa={type:{name:"Composite",className:"GasPricesItem",modelProperties:{minGasPrice:{constraints:{InclusiveMinimum:0},serializedName:"min_gas_price",required:!0,type:{name:"BigInt"}},utilization:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"utilization",required:!0,type:{name:"Number"}},minutes:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"minutes",required:!0,type:{name:"Number"}}}}},_a={type:{name:"Composite",className:"Status",modelProperties:{genesisKeyBlockHash:{serializedName:"genesis_key_block_hash",required:!0,type:{name:"String"}},solutions:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"solutions",required:!0,type:{name:"Number"}},difficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"difficulty",required:!0,type:{name:"Number"}},hashrate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"hashrate",required:!0,type:{name:"Number"}},syncing:{serializedName:"syncing",required:!0,type:{name:"Boolean"}},syncProgress:{constraints:{InclusiveMaximum:100,InclusiveMinimum:0},serializedName:"sync_progress",type:{name:"Number"}},uptime:{serializedName:"uptime",required:!0,type:{name:"String"}},listening:{serializedName:"listening",required:!0,type:{name:"Boolean"}},protocols:{serializedName:"protocols",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Protocol"}}}},nodeVersion:{serializedName:"node_version",required:!0,type:{name:"String"}},nodeRevision:{serializedName:"node_revision",required:!0,type:{name:"String"}},peerCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"peer_count",required:!0,type:{name:"Number"}},peerConnections:{serializedName:"peer_connections",type:{name:"Composite",className:"PeerConnections"}},pendingTransactionsCount:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"pending_transactions_count",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",required:!0,type:{name:"String"}},peerPubkey:{serializedName:"peer_pubkey",required:!0,type:{name:"String"}},topKeyBlockHash:{serializedName:"top_key_block_hash",required:!0,type:{name:"String"}},topBlockHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_block_height",required:!0,type:{name:"Number"}}}}},ka={type:{name:"Composite",className:"Protocol",modelProperties:{version:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"version",required:!0,type:{name:"Number"}},effectiveAtHeight:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"effective_at_height",required:!0,type:{name:"Number"}}}}},Pa={type:{name:"Composite",className:"PeerConnections",modelProperties:{inbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"inbound",required:!0,type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"outbound",required:!0,type:{name:"Number"}}}}},Ea={type:{name:"Composite",className:"SyncStatus",modelProperties:{progress:{serializedName:"progress",required:!0,type:{name:"Number"}},target:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"target",required:!0,type:{name:"Number"}},speed:{serializedName:"speed",required:!0,type:{name:"Number"}},estimate:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"estimate",required:!0,type:{name:"Number"}}}}},Ba={type:{name:"Composite",className:"EncodedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},Oa={type:{name:"Composite",className:"PostTxResponse",modelProperties:{txHash:{serializedName:"tx_hash",required:!0,type:{name:"String"}}}}},Ra={type:{name:"Composite",className:"TxInfoObject",modelProperties:{callInfo:{serializedName:"call_info",type:{name:"Composite",className:"ContractCallObject"}},gaInfo:{serializedName:"ga_info",type:{name:"Composite",className:"GAObject"}},txInfo:{serializedName:"tx_info",type:{name:"String"}}}}},$a={type:{name:"Composite",className:"GAObject",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},height:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},gasUsed:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas_used",required:!0,type:{name:"Number"}},returnValue:{serializedName:"return_value",required:!0,type:{name:"String"}},returnType:{serializedName:"return_type",required:!0,type:{name:"Enum",allowedValues:["ok","error"]}},innerObject:{serializedName:"inner_object",type:{name:"Composite",className:"TxInfoObject"}}}}},Da={type:{name:"Composite",className:"ChannelCloseMutualTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},Fa={type:{name:"Composite",className:"ChannelCloseSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},Ha={type:{name:"Composite",className:"ChannelCreateTx",modelProperties:{initiatorId:{serializedName:"initiator_id",required:!0,type:{name:"String"}},initiatorAmount:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount",required:!0,type:{name:"BigInt"}},responderId:{serializedName:"responder_id",required:!0,type:{name:"String"}},responderAmount:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount",required:!0,type:{name:"BigInt"}},channelReserve:{constraints:{InclusiveMinimum:0},serializedName:"channel_reserve",required:!0,type:{name:"BigInt"}},lockPeriod:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"lock_period",required:!0,type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},delegateIds:{serializedName:"delegate_ids",type:{name:"Composite",className:"Delegates"}}}}},Va={type:{name:"Composite",className:"ChannelDepositTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},Ga={type:{name:"Composite",className:"ChannelForceProgressTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},update:{serializedName:"update",type:{name:"Composite",className:"OffChainUpdate"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},offchainTrees:{serializedName:"offchain_trees",type:{name:"String"}}}}},Ua={type:{name:"Composite",className:"ChannelSetDelegatesTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorDelegateIds:{serializedName:"initiator_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},responderDelegateIds:{serializedName:"responder_delegate_ids",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ja={type:{name:"Composite",className:"ChannelSettleTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},initiatorAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"initiator_amount_final",required:!0,type:{name:"BigInt"}},responderAmountFinal:{constraints:{InclusiveMinimum:0},serializedName:"responder_amount_final",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}}}}},Wa={type:{name:"Composite",className:"ChannelSlashTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},poi:{serializedName:"poi",required:!0,type:{name:"String"}}}}},La={type:{name:"Composite",className:"ChannelSnapshotSoloTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},fromId:{serializedName:"from_id",required:!0,type:{name:"String"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},Ka={type:{name:"Composite",className:"ChannelWithdrawTx",modelProperties:{channelId:{serializedName:"channel_id",required:!0,type:{name:"String"}},toId:{serializedName:"to_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",required:!0,type:{name:"Number"}},stateHash:{serializedName:"state_hash",required:!0,type:{name:"String"}},round:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"round",required:!0,type:{name:"Number"}}}}},Qa={type:{name:"Composite",className:"CheckTxInPoolResponse",modelProperties:{status:{serializedName:"status",required:!0,type:{name:"String"}}}}},Ja={type:{name:"Composite",className:"CommitmentId",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}}}}},Xa={type:{name:"Composite",className:"ContractCallTx",modelProperties:{callerId:{serializedName:"caller_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Ya={type:{name:"Composite",className:"ContractCreateTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},Za={type:{name:"Composite",className:"UnsignedTx",modelProperties:{tx:{serializedName:"tx",required:!0,type:{name:"String"}}}}},es={type:{name:"Composite",className:"GAAttachTx",modelProperties:{ownerId:{serializedName:"owner_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},code:{serializedName:"code",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}},authFun:{constraints:{Pattern:new RegExp("^(0x|0X)?[a-fA-F0-9]+$")},serializedName:"auth_fun",required:!0,type:{name:"String"}}}}},ts={type:{name:"Composite",className:"GAMetaTx",modelProperties:{gaId:{serializedName:"ga_id",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},authData:{serializedName:"auth_data",required:!0,type:{name:"String"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},ns={type:{name:"Composite",className:"NameClaimTx",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},nameSalt:{constraints:{InclusiveMinimum:0},serializedName:"name_salt",required:!0,type:{name:"Number"}},nameFee:{constraints:{InclusiveMinimum:0},serializedName:"name_fee",type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},rs={type:{name:"Composite",className:"NameHash",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}}}}},is={type:{name:"Composite",className:"NamePreclaimTx",modelProperties:{commitmentId:{serializedName:"commitment_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},as={type:{name:"Composite",className:"NameRevokeTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ss={type:{name:"Composite",className:"NameTransferTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},os={type:{name:"Composite",className:"NameUpdateTx",modelProperties:{nameId:{serializedName:"name_id",required:!0,type:{name:"String"}},nameTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"name_ttl",required:!0,type:{name:"Number"}},pointers:{serializedName:"pointers",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"NamePointer"}}}},clientTtl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"client_ttl",required:!0,type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},cs={type:{name:"Composite",className:"PeerDetails",modelProperties:{host:{serializedName:"host",required:!0,type:{name:"String"}},port:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"port",required:!0,type:{name:"Number"}},firstSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"first_seen",required:!0,type:{name:"Number"}},lastSeen:{constraints:{InclusiveMaximum:4294967295,InclusiveMinimum:0},serializedName:"last_seen",required:!0,type:{name:"Number"}},genesisHash:{serializedName:"genesis_hash",required:!0,type:{name:"String"}},topHash:{serializedName:"top_hash",required:!0,type:{name:"String"}},topDifficulty:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"top_difficulty",required:!0,type:{name:"Number"}},networkId:{serializedName:"network_id",type:{name:"String"}},nodeVersion:{serializedName:"node_version",type:{name:"String"}},nodeRevision:{serializedName:"node_revision",type:{name:"String"}},nodeVendor:{serializedName:"node_vendor",type:{name:"String"}},nodeOs:{serializedName:"node_os",type:{name:"String"}}}}},ls={type:{name:"Composite",className:"OracleExtendTx",modelProperties:{fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"RelativeTTL"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}}}}},us={type:{name:"Composite",className:"OracleQueryTx",modelProperties:{oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},query:{serializedName:"query",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},queryTtl:{serializedName:"query_ttl",type:{name:"Composite",className:"Ttl"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ms={type:{name:"Composite",className:"OracleRegisterTx",modelProperties:{queryFormat:{serializedName:"query_format",required:!0,type:{name:"String"}},responseFormat:{serializedName:"response_format",required:!0,type:{name:"String"}},queryFee:{constraints:{InclusiveMinimum:0},serializedName:"query_fee",required:!0,type:{name:"BigInt"}},oracleTtl:{serializedName:"oracle_ttl",type:{name:"Composite",className:"Ttl"}},accountId:{serializedName:"account_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",type:{name:"Number"}}}}},ds={type:{name:"Composite",className:"OracleRespondTx",modelProperties:{queryId:{serializedName:"query_id",required:!0,type:{name:"String"}},response:{serializedName:"response",required:!0,type:{name:"String"}},responseTtl:{serializedName:"response_ttl",type:{name:"Composite",className:"RelativeTTL"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},oracleId:{serializedName:"oracle_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}}}}},ps={type:{name:"Composite",className:"PayingForTx",modelProperties:{payerId:{serializedName:"payer_id",required:!0,type:{name:"String"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},tx:{serializedName:"tx",type:{name:"Composite",className:"SignedTx"}}}}},hs={type:{name:"Composite",className:"PeerCount",modelProperties:{connected:{serializedName:"connected",type:{name:"Composite",className:"PeerCountConnected"}},available:{serializedName:"available",type:{name:"Composite",className:"PeerCountAvailable"}},blocked:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"blocked",required:!0,type:{name:"Number"}}}}},ys={type:{name:"Composite",className:"PeerCountConnected",modelProperties:{inbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"inbound",type:{name:"Number"}},outbound:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"outbound",type:{name:"Number"}}}}},fs={type:{name:"Composite",className:"PeerCountAvailable",modelProperties:{verified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"verified",type:{name:"Number"}},unverified:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"unverified",type:{name:"Number"}}}}},gs={type:{name:"Composite",className:"Peers",modelProperties:{peers:{serializedName:"peers",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},blocked:{serializedName:"blocked",required:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Ns={type:{name:"Composite",className:"PubKey",modelProperties:{pubKey:{serializedName:"pub_key",required:!0,type:{name:"String"}}}}},vs={type:{name:"Composite",className:"SpendTx",modelProperties:{recipientId:{serializedName:"recipient_id",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},fee:{constraints:{InclusiveMinimum:0},serializedName:"fee",required:!0,type:{name:"BigInt"}},ttl:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"ttl",type:{name:"Number"}},senderId:{serializedName:"sender_id",required:!0,type:{name:"String"}},nonce:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"nonce",type:{name:"Number"}},payload:{serializedName:"payload",required:!0,type:{name:"String"}}}}},xs={type:{name:"Composite",className:"TokenSupply",modelProperties:{accounts:{constraints:{InclusiveMinimum:0},serializedName:"accounts",type:{name:"Number"}},contracts:{constraints:{InclusiveMinimum:0},serializedName:"contracts",type:{name:"Number"}},contractOracles:{constraints:{InclusiveMinimum:0},serializedName:"contract_oracles",type:{name:"Number"}},locked:{constraints:{InclusiveMinimum:0},serializedName:"locked",type:{name:"Number"}},oracles:{constraints:{InclusiveMinimum:0},serializedName:"oracles",type:{name:"Number"}},oracleQueries:{constraints:{InclusiveMinimum:0},serializedName:"oracle_queries",type:{name:"Number"}},pendingRewards:{constraints:{InclusiveMinimum:0},serializedName:"pending_rewards",type:{name:"Number"}},total:{constraints:{InclusiveMinimum:0},serializedName:"total",type:{name:"Number"}}}}},Is={serializedName:"OffChainCallContract",type:{name:"Composite",className:"OffChainCallContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Ji.type.polymorphicDiscriminator,modelProperties:{...Ji.type.modelProperties,caller:{serializedName:"caller",required:!0,type:{name:"String"}},contract:{serializedName:"contract",required:!0,type:{name:"String"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}},gas:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"gas",required:!0,type:{name:"Number"}},gasPrice:{constraints:{InclusiveMinimum:0},serializedName:"gas_price",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},ws={serializedName:"OffChainDeposit",type:{name:"Composite",className:"OffChainDeposit",uberParent:"OffChainUpdate",polymorphicDiscriminator:Ji.type.polymorphicDiscriminator,modelProperties:{...Ji.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Cs={serializedName:"OffChainNewContract",type:{name:"Composite",className:"OffChainNewContract",uberParent:"OffChainUpdate",polymorphicDiscriminator:Ji.type.polymorphicDiscriminator,modelProperties:{...Ji.type.modelProperties,owner:{serializedName:"owner",required:!0,type:{name:"String"}},vmVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"vm_version",required:!0,type:{name:"Number"}},abiVersion:{constraints:{InclusiveMaximum:65535,InclusiveMinimum:0},serializedName:"abi_version",required:!0,type:{name:"Number"}},code:{serializedName:"code",type:{name:"Composite",className:"ByteCode"}},deposit:{constraints:{InclusiveMinimum:0},serializedName:"deposit",required:!0,type:{name:"BigInt"}},callData:{serializedName:"call_data",required:!0,type:{name:"String"}}}}},bs={serializedName:"OffChainTransfer",type:{name:"Composite",className:"OffChainTransfer",uberParent:"OffChainUpdate",polymorphicDiscriminator:Ji.type.polymorphicDiscriminator,modelProperties:{...Ji.type.modelProperties,from:{serializedName:"from",required:!0,type:{name:"String"}},to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},zs={serializedName:"OffChainWithdrawal",type:{name:"Composite",className:"OffChainWithdrawal",uberParent:"OffChainUpdate",polymorphicDiscriminator:Ji.type.polymorphicDiscriminator,modelProperties:{...Ji.type.modelProperties,to:{serializedName:"to",required:!0,type:{name:"String"}},amount:{constraints:{InclusiveMinimum:0},serializedName:"amount",required:!0,type:{name:"BigInt"}}}}},Ms={type:{name:"Composite",className:"CreateContractUnsignedTx",modelProperties:{...Za.type.modelProperties,contractId:{serializedName:"contract_id",required:!0,type:{name:"String"}}}}};let Ts={OffChainUpdate:Ji,"OffChainUpdate.OffChainCallContract":Is,"OffChainUpdate.OffChainDeposit":ws,"OffChainUpdate.OffChainNewContract":Cs,"OffChainUpdate.OffChainTransfer":bs,"OffChainUpdate.OffChainWithdrawal":zs};const Ss={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},As={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},qs={parameterPath:"pubkey",mapper:{serializedName:"pubkey",required:!0,type:{name:"String"}}},_s={parameterPath:"hash",mapper:{serializedName:"hash",required:!0,type:{name:"String"}}},ks={parameterPath:"height",mapper:{constraints:{InclusiveMaximum:0x10000000000000000,InclusiveMinimum:0},serializedName:"height",required:!0,type:{name:"Number"}}},Ps={parameterPath:["options","strategy"],mapper:{defaultValue:"max",serializedName:"strategy",type:{name:"Enum",allowedValues:["max","continuity"]}}},Es={parameterPath:"name",mapper:{serializedName:"name",required:!0,type:{name:"String"}}},Bs={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Os={parameterPath:"body",mapper:oa},Rs={parameterPath:"index",mapper:{constraints:{InclusiveMinimum:1},serializedName:"index",required:!0,type:{name:"Number"}}},$s={parameterPath:"nameHash",mapper:{serializedName:"name_hash",required:!0,type:{name:"String"}}},Ds={parameterPath:["options","from"],mapper:{serializedName:"from",type:{name:"String"}}},Fs={parameterPath:["options","limit"],mapper:{defaultValue:20,constraints:{InclusiveMaximum:1e3,InclusiveMinimum:1},serializedName:"limit",type:{name:"Number"}}},Hs={parameterPath:["options","type"],mapper:{defaultValue:"all",serializedName:"type",type:{name:"Enum",allowedValues:["open","closed","all"]}}},Vs={parameterPath:"queryId",mapper:{serializedName:"query-id",required:!0,type:{name:"String"}}},Gs={parameterPath:"body",mapper:Ba};class Us extends Si.Nl{constructor(e,t){var n,r;if(void 0===e)throw new Error("'$host' cannot be null");t||(t={});const i={requestContentType:"application/json; charset=utf-8"},a="azsdk-js-node/1.0.0-beta.1",s=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${a}`:`${a}`,o={...i,...t,userAgentOptions:{userAgentPrefix:s},endpoint:null!==(n=null!==(r=t.endpoint)&&void 0!==r?r:t.baseUri)&&void 0!==n?n:"{$host}"};super(o),this.$host=e}getAccountByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ws)}getAccountByPubkeyAndHash(e,t,n){return this.sendOperationRequest({pubkey:e,hash:t,options:n},Ls)}getAccountByPubkeyAndHeight(e,t,n){return this.sendOperationRequest({pubkey:e,height:t,options:n},Ks)}getAccountNextNonce(e,t){return this.sendOperationRequest({pubkey:e,options:t},Qs)}getPendingAccountTransactionsByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Js)}getAuctionEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},Xs)}getChannelByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Ys)}getContract(e,t){return this.sendOperationRequest({pubkey:e,options:t},Zs)}getContractCode(e,t){return this.sendOperationRequest({pubkey:e,options:t},eo)}getContractPoI(e,t){return this.sendOperationRequest({pubkey:e,options:t},to)}getCurrency(e){return this.sendOperationRequest({options:e},no)}protectedDryRunTxs(e,t){return this.sendOperationRequest({body:e,options:t},ro)}getCurrentGeneration(e){return this.sendOperationRequest({options:e},io)}getGenerationByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ao)}getGenerationByHeight(e,t){return this.sendOperationRequest({height:e,options:t},so)}getTopHeader(e){return this.sendOperationRequest({options:e},oo)}getPinningTx(e){return this.sendOperationRequest({options:e},co)}getHyperchainContractPubkeys(e){return this.sendOperationRequest({options:e},lo)}getCurrentKeyBlock(e){return this.sendOperationRequest({options:e},uo)}getCurrentKeyBlockHash(e){return this.sendOperationRequest({options:e},mo)}getCurrentKeyBlockHeight(e){return this.sendOperationRequest({options:e},po)}getKeyBlockByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ho)}getKeyBlockByHeight(e,t){return this.sendOperationRequest({height:e,options:t},yo)}getPendingKeyBlock(e){return this.sendOperationRequest({options:e},fo)}getMicroBlockHeaderByHash(e,t){return this.sendOperationRequest({hash:e,options:t},go)}getMicroBlockTransactionsByHash(e,t){return this.sendOperationRequest({hash:e,options:t},No)}getMicroBlockTransactionsCountByHash(e,t){return this.sendOperationRequest({hash:e,options:t},vo)}getMicroBlockTransactionByHashAndIndex(e,t,n){return this.sendOperationRequest({hash:e,index:t,options:n},xo)}getNameEntryByName(e,t){return this.sendOperationRequest({name:e,options:t},Io)}getNameEntryByNameHash(e,t){return this.sendOperationRequest({nameHash:e,options:t},wo)}getOracleByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},Co)}getOracleQueriesByPubkey(e,t){return this.sendOperationRequest({pubkey:e,options:t},bo)}getOracleQueryByPubkeyAndQueryId(e,t,n){return this.sendOperationRequest({pubkey:e,queryId:t,options:n},zo)}getPeerPubkey(e){return this.sendOperationRequest({options:e},Mo)}getRecentGasPrices(e){return this.sendOperationRequest({options:e},To)}getStatus(e){return this.sendOperationRequest({options:e},So)}getChainEnds(e){return this.sendOperationRequest({options:e},Ao)}getSyncStatus(e){return this.sendOperationRequest({options:e},qo)}postTransaction(e,t){return this.sendOperationRequest({body:e,options:t},_o)}getTransactionByHash(e,t){return this.sendOperationRequest({hash:e,options:t},ko)}getTransactionInfoByHash(e,t){return this.sendOperationRequest({hash:e,options:t},Po)}}const js=ki(i,!1),Ws={path:"/v3/accounts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Gi},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},Ls={path:"/v3/accounts/{pubkey}/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Gi},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs,_s],headerParameters:[Ss],serializer:js},Ks={path:"/v3/accounts/{pubkey}/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:Gi},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0},410:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs,ks],headerParameters:[Ss],serializer:js},Qs={path:"/v3/accounts/{pubkey}/next-nonce",httpMethod:"GET",responses:{200:{bodyMapper:ji},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},queryParameters:[Ps],urlParameters:[As,qs],headerParameters:[Ss],serializer:js},Js={path:"/v3/accounts/{pubkey}/transactions/pending",httpMethod:"GET",responses:{200:{bodyMapper:Wi},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},Xs={path:"/v3/auctions/{name}",httpMethod:"GET",responses:{200:{bodyMapper:ea},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,Es],headerParameters:[Ss],serializer:js},Ys={path:"/v3/channels/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:ta},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},Zs={path:"/v3/contracts/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:na},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},eo={path:"/v3/contracts/{pubkey}/code",httpMethod:"GET",responses:{200:{bodyMapper:ra},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},to={path:"/v3/contracts/{pubkey}/poi",httpMethod:"GET",responses:{200:{bodyMapper:ia},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},no={path:"/v3/currency",httpMethod:"GET",responses:{200:{bodyMapper:aa}},urlParameters:[As],headerParameters:[Ss],serializer:js},ro={path:"/v3/dry-run",httpMethod:"POST",responses:{200:{bodyMapper:da},400:{bodyMapper:Ui,isError:!0},403:{bodyMapper:Ui,isError:!0}},requestBody:Os,urlParameters:[As],headerParameters:[Ss,Bs],mediaType:"json",serializer:js},io={path:"/v3/generations/current",httpMethod:"GET",responses:{200:{bodyMapper:fa},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},ao={path:"/v3/generations/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:fa},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},so={path:"/v3/generations/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:fa},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,ks],headerParameters:[Ss],serializer:js},oo={path:"/v3/headers/top",httpMethod:"GET",responses:{200:{bodyMapper:Na},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},co={path:"/v3/hyperchain/pin-tx",httpMethod:"GET",responses:{200:{bodyMapper:va},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},lo={path:"/v3/hyperchain/contracts",httpMethod:"GET",responses:{200:{bodyMapper:xa},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},uo={path:"/v3/key-blocks/current",httpMethod:"GET",responses:{200:{bodyMapper:ga},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},mo={path:"/v3/key-blocks/current/hash",httpMethod:"GET",responses:{200:{bodyMapper:Ia},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},po={path:"/v3/key-blocks/current/height",httpMethod:"GET",responses:{200:{bodyMapper:wa},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},ho={path:"/v3/key-blocks/hash/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:ga},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},yo={path:"/v3/key-blocks/height/{height}",httpMethod:"GET",responses:{200:{bodyMapper:ga},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,ks],headerParameters:[Ss],serializer:js},fo={path:"/v3/key-blocks/pending",httpMethod:"GET",responses:{200:{bodyMapper:ga},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},go={path:"/v3/micro-blocks/hash/{hash}/header",httpMethod:"GET",responses:{200:{bodyMapper:Ca},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},No={path:"/v3/micro-blocks/hash/{hash}/transactions",httpMethod:"GET",responses:{200:{bodyMapper:Wi},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},vo={path:"/v3/micro-blocks/hash/{hash}/transactions/count",httpMethod:"GET",responses:{200:{bodyMapper:ba},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},xo={path:"/v3/micro-blocks/hash/{hash}/transactions/index/{index}",httpMethod:"GET",responses:{200:{bodyMapper:Li},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s,Rs],headerParameters:[Ss],serializer:js},Io={path:"/v3/names/{name}",httpMethod:"GET",responses:{200:{bodyMapper:za},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,Es],headerParameters:[Ss],serializer:js},wo={path:"/v3/names/hash/{name_hash}",httpMethod:"GET",responses:{200:{bodyMapper:za},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,$s],headerParameters:[Ss],serializer:js},Co={path:"/v3/oracles/{pubkey}",httpMethod:"GET",responses:{200:{bodyMapper:Ma},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs],headerParameters:[Ss],serializer:js},bo={path:"/v3/oracles/{pubkey}/queries",httpMethod:"GET",responses:{200:{bodyMapper:Ta},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},queryParameters:[Ds,Fs,Hs],urlParameters:[As,qs],headerParameters:[Ss],serializer:js},zo={path:"/v3/oracles/{pubkey}/queries/{query-id}",httpMethod:"GET",responses:{200:{bodyMapper:Sa},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,qs,Vs],headerParameters:[Ss],serializer:js},Mo={path:"/v3/peers/pubkey",httpMethod:"GET",responses:{200:{bodyMapper:Aa}},urlParameters:[As],headerParameters:[Ss],serializer:js},To={path:"/v3/recent-gas-prices",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"GasPricesItem"}}}}},400:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},So={path:"/v3/status",httpMethod:"GET",responses:{200:{bodyMapper:_a}},urlParameters:[As],headerParameters:[Ss],serializer:js},Ao={path:"/v3/status/chain-ends",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"String"}}}}}},urlParameters:[As],headerParameters:[Ss],serializer:js},qo={path:"/v3/sync-status",httpMethod:"GET",responses:{200:{bodyMapper:Ea},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As],headerParameters:[Ss],serializer:js},_o={path:"/v3/transactions",httpMethod:"POST",responses:{200:{bodyMapper:Oa},400:{bodyMapper:Ui,isError:!0}},requestBody:Gs,urlParameters:[As],headerParameters:[Ss,Bs],mediaType:"json",serializer:js},ko={path:"/v3/transactions/{hash}",httpMethod:"GET",responses:{200:{bodyMapper:Li},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js},Po={path:"/v3/transactions/{hash}/info",httpMethod:"GET",responses:{200:{bodyMapper:Ra},400:{bodyMapper:Ui,isError:!0},404:{bodyMapper:Ui,isError:!0},410:{bodyMapper:Ui,isError:!0}},urlParameters:[As,_s],headerParameters:[Ss],serializer:js};function Eo(e,t,n){Bo(e,t),t.set(e,n)}function Bo(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Oo(e,t){return e.get($o(e,t))}function Ro(e,t,n){return e.set($o(e,t),n),n}function $o(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Do=new WeakMap,Fo=new WeakMap;class Ho extends Us{constructor(e,{ignoreVersion:t=!1,retryCount:n=3,retryOverallDelay:r=800,...i}={}){const a=async e=>(await this._getCachedStatus(e)).nodeVersion;super(e,{allowInsecureConnection:!0,additionalPolicies:[Hi("node",a,"7.1.0","8.0.0",t),Ri(),$i(),Vi(n,r),Fi((e=>[" ",e.reason,null==e.errorCode?"":` (${e.errorCode})`].join("")))],...i}),Eo(this,Do,void 0),Eo(this,Fo,void 0),Ro(Do,this,t),this.pipeline.addPolicy(Oi,{phase:"Deserialize"}),this.pipeline.removePolicy({name:je.OD}),this.pipeline.removePolicy({name:je.PR}),this.pipeline.removePolicy({name:"defaultRetryPolicy"})}async _getCachedStatus(e){return null!=Oo(Fo,this)?Oo(Fo,this):this.getStatus(e)}async getStatus(...e){const t=super.getStatus(...e);return t.then((()=>{Ro(Fo,this,t)}),(()=>{})),t}async getNetworkId(){return(await this._getCachedStatus()).networkId}async getNodeInfo(){const{nodeVersion:e,networkId:t,protocols:n,topBlockHeight:r}=await this.getStatus(),i=n.filter((({effectiveAtHeight:e})=>r>=e)).reduce(((e,t)=>t.effectiveAtHeight>e.effectiveAtHeight?t:e),{effectiveAtHeight:-1,version:0}).version;if(null==Bt[i]){const e=i.toString(),t=Object.values(Bt).filter((e=>"number"===typeof e)).map((e=>+e)),n=Math.min(...t).toString(),r=(Math.max(...t)+1).toString(),a=new A("consensus protocol",e,n,r);if(!Oo(Do,this))throw a;console.warn(a.message)}return{url:this.$host,nodeNetworkId:t,version:e,consensusProtocolVersion:i}}}function Vo(e){const t=mi(e);switch(t.tag){case $t.SignedTx:return Vo(li(t.encodedTx));case $t.GaMetaTx:return t.gaId;default:}const n=ci(t.tag,t.version).find((([e])=>"nonce"===e))?.[1];if(null==n)throw new I(`Transaction doesn't have nonce: ${$t[t.tag]}`);if(!("senderKey"in n))throw new _;const r=t[n.senderKey];return r.replace(/^ok_/,"ak_")}function Go(e,{innerTx:t,gasUsed:n,queryFee:r,isInitiator:i}={}){const a=mi(e);if(a.tag===$t.SignedTx)throw new b("Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead");let s=0n;return"fee"in a&&"freeloader"!==t&&(s+=BigInt(a.fee)),a.tag===$t.NameClaimTx&&(s+=BigInt(a.nameFee)),a.tag===$t.OracleQueryTx&&(s+=BigInt(a.queryFee)),a.tag===$t.OracleRespondTx&&(s-=BigInt(null!==r&&void 0!==r?r:0)),a.tag===$t.ChannelSettleTx&&(!0===i&&(s-=BigInt(a.initiatorAmountFinal)),!1===i&&(s-=BigInt(a.responderAmountFinal))),a.tag!==$t.SpendTx&&a.tag!==$t.ContractCreateTx&&a.tag!==$t.ContractCallTx&&a.tag!==$t.ChannelDepositTx||"fee-payer"===t||(s+=BigInt(a.amount)),a.tag===$t.ContractCreateTx&&(s+=BigInt(a.deposit)),a.tag!==$t.ContractCreateTx&&a.tag!==$t.ContractCallTx&&a.tag!==$t.GaAttachTx&&a.tag!==$t.GaMetaTx||"freeloader"===t||(s+=BigInt(a.gasPrice)*BigInt(null!==n&&void 0!==n?n:a.gasLimit)),a.tag!==$t.GaMetaTx&&a.tag!==$t.PayingForTx||(s+=Go(li(a.tx.encodedTx),a.tag===$t.PayingForTx?{innerTx:"fee-payer"}:{})),s}function Uo(e,t,n){const r=mi(e,$t.SignedTx);if(r.encodedTx.tag===$t.GaMetaTx)return Go(li(r.encodedTx),n);const i=li(r.encodedTx),a=Vo(i),[s,o]=[!0,!1].map((e=>Nt(vi(i,t,e),r.signatures[0],a)));if(!s&&!o)throw new I("Can't verify signature");return Go(li(r.encodedTx),{...s&&{innerTx:"freeloader"},...n})}async function jo(e,t,{isMined:n,...r}={}){let i=mi(e);const a=i.tag===$t.SignedTx,s=a&&!0===n&&di(e);if(i.tag===$t.SignedTx&&(i=i.encodedTx),null==r.gasUsed&&!1!==s&&[$t.ContractCreateTx,$t.ContractCallTx,$t.GaAttachTx,$t.GaMetaTx].includes(i.tag)){const{callInfo:e,gaInfo:n}=await t.getTransactionInfoByHash(s),i=null!==e&&void 0!==e?e:n;if(null==i)throw new q(`callInfo and gaInfo is not available for transaction ${s}`);r.gasUsed=i.gasUsed}if(null==r.queryFee&&$t.OracleRespondTx===i.tag&&(r.queryFee=(await t.getOracleByPubkey(i.oracleId)).queryFee.toString()),null==r.isInitiator&&$t.ChannelSettleTx===i.tag&&!0!==n){const{initiatorId:e}=await t.getChannelByPubkey(i.channelId);r.isInitiator=i.fromId===e}return a?Uo(e,await t.getNetworkId(),r):Go(e,r)}const Wo=[];async function Lo(e,t,n){const r=Vo(li(e)),[i,{height:a},{consensusProtocolVersion:s,nodeNetworkId:o}]=await Promise.all([t.getAccountByPubkey(r).catch((e=>{if(!Ye(e))throw e;return{id:r,balance:0n,nonce:0}})).then((e=>({...e,id:e.id}))),t.getCurrentKeyBlockHeight(),t.getNodeInfo()]);return(await Promise.all(Wo.map((async r=>r(e,{node:t,account:i,height:a,consensusProtocolVersion:s,nodeNetworkId:o,parentTxTypes:n}))))).flat()}async function Ko(e,t){const n=t.pipeline.clone();n.removePolicy({name:"parse-big-int"});const r=new Ho(t.$host,{ignoreVersion:!0,pipeline:n,additionalPolicies:[Di()]});return r._getCachedStatus=async()=>t._getCachedStatus(),Lo(mi(e),r,[])}Wo.push(((e,{account:t,nodeNetworkId:n,parentTxTypes:r})=>{if(e.tag!==$t.SignedTx)return[];const{encodedTx:i,signatures:a}=e;if(null==(null!==i&&void 0!==i?i:a))return[];if(1!==a.length)return[];const s=He.Buffer.from([n,...r.includes($t.PayingForTx)?["inner_tx"]:[]].join("-")),o=ht(li(i)),c=Qe([s,o]),l=Qe([s,gt(o)]);return Nt(c,a[0],t.id)||Nt(l,a[0],t.id)?[]:[{message:"Signature cannot be verified, please ensure that you transaction have the correct prefix and the correct private key for the sender address",key:"InvalidSignature",checkedKeys:["encodedTx","signatures"]}]}),(async(e,{node:t,parentTxTypes:n})=>{let r;return"encodedTx"in e&&(r=e.encodedTx),"tx"in e&&(r=e.tx),null==r?[]:Lo(r,t,[...n,e.tag])}),((e,{height:t})=>"ttl"in e?0===e.ttl||e.ttl>t?[]:[{message:`TTL ${e.ttl} is already expired, current height is ${t}`,key:"ExpiredTTL",checkedKeys:["ttl"]}]:[]),(async(e,{account:t,parentTxTypes:n,node:r})=>{if(0!==n.length)return[];const i=await jo(li(e),r).catch((()=>0n));return i<=t.balance?[]:[{message:`Account balance ${t.balance} is not enough to execute the transaction that costs ${i}`,key:"InsufficientBalance",checkedKeys:["amount","fee","nameFee","gasLimit","gasPrice"]}]}),(async(e,{node:t})=>{if(e.tag!==$t.SpendTx||ft(e.recipientId,et.Name))return[];const n=await t.getAccountByPubkey(e.recipientId).catch((e=>{if(!Ye(e))throw e;return null}));return null==n||!0===n.payable?[]:[{message:"Recipient account is not payable",key:"RecipientAccountNotPayable",checkedKeys:["recipientId"]}]}),((e,{account:t})=>{let n;return e.tag===$t.SignedTx&&"generalized"===t.kind&&0!==e.signatures.length&&(n="Generalized account can't be used to generate SignedTx with signatures"),e.tag===$t.GaMetaTx&&"basic"===t.kind&&(n="Basic account can't be used to generate GaMetaTx"),null==n?[]:[{message:n,key:"InvalidAccountType",checkedKeys:["tag"]}]}),((e,{consensusProtocolVersion:t})=>{var n,r;const i=$t.OracleRegisterTx===e.tag,a=$t.ContractCreateTx===e.tag||$t.GaAttachTx===e.tag,s=$t.ContractCallTx===e.tag||$t.GaMetaTx===e.tag,o=null!==(n=null!==(r=i?"oracle-call":null)&&void 0!==r?r:a?"contract-create":null)&&void 0!==n?n:s?"contract-call":null;if(null==o)return[];const c=Dt[t][o];let l;if("abiVersion"in e&&(l={abiVersion:e.abiVersion}),"ctVersion"in e&&(l=e.ctVersion),null==l)throw new _;return!c.abiVersion.includes(l.abiVersion)||a&&!c.vmVersion.includes(l.vmVersion)?[{message:`ABI/VM version ${JSON.stringify(l)} is wrong, supported is: ${JSON.stringify(c)}`,key:"VmAndAbiVersionMismatch",checkedKeys:["ctVersion","abiVersion"]}]:[]}),(async(e,{node:t})=>{if($t.ContractCallTx!==e.tag)return[];if(e.contractId.startsWith("nm_"))return[];try{const{active:n}=await t.getContract(e.contractId);return n?[]:[{message:`Contract ${e.contractId} is not active`,key:"ContractNotActive",checkedKeys:["contractId"]}]}catch(n){if(!(n instanceof je.pj)||null==n.response?.bodyAsText)throw n;return[{message:JSON.parse(n.response.bodyAsText).reason,key:"ContractNotFound",checkedKeys:["contractId"]}]}}));class Qo extends I{constructor(e,t,n){super(e),this.name="InvalidTxError",this.validation=t,this.transaction=n}}async function Jo(e,{onNode:t,onAccount:n,verify:r=!0,waitMined:i=!0,confirm:a,innerTx:s,...o}){const c=await n.signTransaction(e,{...o,onNode:t,innerTx:s,networkId:await t.getNetworkId()});if(!0===s)return{hash:di(c),rawTx:c};if(r){const e=await Ko(c,t);if(e.length>0){const t=`Transaction verification errors: ${e.map((e=>e.message)).join(", ")}`;throw new Qo(t,e,c)}}try{let e;try{e=null!=n?`tx-${n.address}`:null}catch(l){e=null}const{txHash:r}=await t.postTransaction({tx:c},{requestOptions:{customHeaders:{"__retry-code":"400",...null!=e?{__queue:e}:{}}}});if(i){const e=await Kn(r,{onNode:t,...o}),n={...e,hash:e.hash,rawTx:c};if(null!=a&&+a>0){const e="boolean"===typeof a?void 0:a;return{...n,confirmationHeight:await Jn(r,{onNode:t,confirm:e,...o})}}return n}return{hash:r,rawTx:c}}catch(l){throw Ze(l),Object.assign(l,{rawTx:c,verifyTx:async()=>Ko(c,t)})}}async function Xo(e,t,n){return Jo(await ui({_isInternalBuild:!0,...n,tag:$t.SpendTx,senderId:n.onAccount.address,recipientId:await ur(t,"account_pubkey",n),amount:e}),n)}async function Yo(e,t,n){if(+e<0||+e>1)throw new C("fraction","a number between 0 and 1",e);const r=await ur(t,"account_pubkey",n),i=n.onAccount.address,a=new St.g(await Yn.bind(n.onAccount)(i,n)),s=a.times(e).integerValue(St.g.ROUND_HALF_UP),{fee:o}=mi(await ui({_isInternalBuild:!0,...n,tag:$t.SpendTx,senderId:i,recipientId:r,amount:s}),$t.SpendTx),c=s.plus(o).gt(a)?a.minus(o):s;return Jo(await ui({_isInternalBuild:!0,...n,tag:$t.SpendTx,senderId:i,recipientId:r,amount:c}),n)}async function Zo(e,t){return Jo(await ui({_isInternalBuild:!0,...t,tag:$t.PayingForTx,payerId:t.onAccount.address,tx:e}),t)}n(13579);function ec(e,t,n){nc(e,t),t.set(e,n)}function tc(e,t){nc(e,t),t.add(e)}function nc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function rc(e,t,n){return e.set(ac(e,t),n),n}function ic(e,t){return e.get(ac(e,t))}function ac(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var sc=new WeakSet,oc=new WeakMap;class cc{async $compile(){if(null!=this.$options.bytecode)return this.$options.bytecode;if(null==this.$options.onCompiler)throw new b("Can't compile without compiler");if(null!=this.$options.sourceCode){const{bytecode:e}=await this.$options.onCompiler.compileBySourceCode(this.$options.sourceCode,this.$options.fileSystem);this.$options.bytecode=e}if(null!=this.$options.sourceCodePath){const{bytecode:e}=await this.$options.onCompiler.compile(this.$options.sourceCodePath);this.$options.bytecode=e}if(null==this.$options.bytecode)throw new b("Can't compile without sourceCode and sourceCodePath");return this.$options.bytecode}async $getCallResultByTxHash(e,t,n){const{callInfo:r}=await this.$options.onNode.getTransactionInfoByHash(e);if(null==r)throw new N(`callInfo is not available for transaction ${e}`);const i=r;return{...ac(sc,this,lc).call(this,i,t,void 0,n),result:i}}async _estimateGas(e,t,n={}){const{result:r}=await this.$call(e,t,{...n,callStatic:!0});if(null==r)throw new _;const{gasUsed:i}=r;return Math.floor(1.25*i)}async $deploy(e,t){var n;const{callStatic:r,...i}={...this.$options,...t};if(null==this.$options.bytecode&&await this.$compile(),!0===r)return this.$call("init",e,{...i,callStatic:r});if(null!=this.$options.address)throw new F;if(null==i.onAccount)throw new b("Can't deploy without account");const a=i.onAccount.address;if(null==this.$options.bytecode)throw new b("Can't deploy without bytecode");const s=await ui({_isInternalBuild:!0,...i,tag:$t.ContractCreateTx,gasLimit:null!==(n=i.gasLimit)&&void 0!==n?n:await this._estimateGas("init",e,i),callData:this._calldata.encode(this._name,"init",e),code:this.$options.bytecode,ownerId:a}),{hash:o,...c}=await ac(sc,this,uc).call(this,s,"init",{...i,onAccount:i.onAccount});return this.$options.address=pi(c.rawTx),{...c,...null!=c.result?.log&&{decodedEvents:this.$decodeEvents(c.result.log,i)},owner:a,transaction:o,address:this.$options.address}}async $call(e,t,n={}){var r;const{callStatic:i,top:a,...s}={...this.$options,...n},o=ac(sc,this,mc).call(this,e),{address:c,name:l}=this.$options,u=null!=l?Jt(l):c,{onNode:m}=s;if(null==e)throw new j;if("init"===e&&!0!==i)throw new V('"init" can be called only via dryRun');if("init"!==e&&null!=s.amount&&Number(s.amount)>0&&!o.payable)throw new K(s.amount,e);let d;try{if(null==s.onAccount)throw new q("Use fallback account");d=s.onAccount.address}catch(y){const e=!0===i&&(y instanceof T&&"Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead"===y.message||y instanceof de||y instanceof q&&"Use fallback account"===y.message);if(!e)throw y;d=At.pub}const p=this._calldata.encode(this._name,e,t);if(!0===i){if(null==s.nonce){const e=null!=a&&{["number"===typeof a?"height":"hash"]:a},t=await Xn(d,{...e,onNode:m}).catch((e=>{if(!Ye(e))throw e;return{kind:"basic",nonce:0}}));s.nonce="generalized"===t.kind?0:t.nonce+1}const t={...s,onNode:m,callData:p};let n;if("init"===e){if(null==this.$options.bytecode)throw new b('Can\'t dry-run "init" without bytecode');n=await ui({...t,tag:$t.ContractCreateTx,code:this.$options.bytecode,ownerId:d})}else{if(null==u)throw new G("Can't dry-run contract without address");n=await ui({...t,tag:$t.ContractCallTx,callerId:d,contractId:u})}const{callObj:r,...i}=await sr(n,d,{...s,top:a});if(null==r)throw new q(`callObj is not available for transaction ${n}`);const o=r;return{...i,...ac(sc,this,lc).call(this,o,e,n,s),tx:mi(n),result:o,rawTx:n,hash:di(n),txData:void 0}}if(null!=a)throw new b("Can't handle `top` option in on-chain contract call");if(null==u)throw new G("Can't call contract without address");const h=await ui({_isInternalBuild:!0,...s,tag:$t.ContractCallTx,gasLimit:null!==(r=s.gasLimit)&&void 0!==r?r:await this._estimateGas(e,t,s),callerId:d,contractId:u,callData:p});if(null==s.onAccount)throw new b("Can't call contract on chain without account");return ac(sc,this,uc).call(this,h,e,{...s,onAccount:s.onAccount})}$decodeEvents(e,{omitUnknown:t,...n}={}){return e.map((e=>{let r;try{r=ac(sc,this,dc).call(this,e.address,e.topics[0],n)}catch(o){if(null!==t&&void 0!==t&&t&&o instanceof Q)return null;throw o}const i=this._calldata.decodeEvent(r,e.data,e.topics),[a,s]=Object.entries(i)[0];return{name:a,args:s,contract:{name:r,address:e.address}}})).filter((e=>null!=e))}static async initialize({onCompiler:e,onNode:t,bytecode:n,aci:r,address:i,sourceCodePath:a,sourceCode:s,fileSystem:o,validateBytecode:c,...l}){if(null==r&&null!=e){let t;var u;if(null!=a&&(t=await e.compile(a)),null!=s&&(t=await e.compileBySourceCode(s,o)),null!=t)r=t.aci,null!==(u=n)&&void 0!==u||(n=t.bytecode)}if(null==r)throw new U;let m;if(null!=i&&(i=await ur(i,"contract_pubkey",{resolveByNode:!0,onNode:t}),Zt(i)&&(m=i)),null==i&&null==s&&null==a&&null==n)throw new G("Can't create instance by ACI without address");if(null!=i){const e=await cr(i,{onNode:t});if(null==e.active)throw new H(i)}if(!0===c){if(null==i)throw new G("Can't validate bytecode without contract address");const r=(await or(i,{onNode:t})).bytecode;let c=!1;if(null!=n)c=n===r;else if(null!=s){if(null==e)throw new b("Can't validate bytecode without compiler");c=await e.validateBySourceCode(r,s,o)}else if(null!=a){if(null==e)throw new b("Can't validate bytecode without compiler");c=await e.validate(r,a)}if(!c)throw new D(null!=(null!==s&&void 0!==s?s:a)?"source code":"bytecode")}return new pc({onCompiler:e,onNode:t,sourceCode:s,sourceCodePath:a,bytecode:n,aci:r,address:i,name:m,fileSystem:o,...l})}constructor({aci:e,...t}){tc(this,sc),ec(this,oc,void 0),this._aci=e;const n=e[e.length-1];if(null==n.contract)throw new b(`The last 'aci' item should have 'contract' key, got ${Object.keys(n)} keys instead`);rc(oc,this,n.contract),this._name=ic(oc,this).name,this._calldata=new Ct.Encoder(e),this.$options=t,Object.assign(this,Object.fromEntries(ic(oc,this).functions.map((({name:e,arguments:t,stateful:n})=>{const r="init"!==e&&!n;return[e,async(...n)=>{const i=n.length===t.length+1?n.pop():{};if("object"!==typeof i)throw new T(`Options should be an object: ${i}`);return"init"===e?this.$deploy(n,{callStatic:r,...i}):this.$call(e,n,{callStatic:r,...i})}]}))))}}function lc({returnType:e,returnValue:t,log:n},r,i,a){let s;switch(e){case"ok":{const e=ac(sc,this,mc).call(this,r);return{decodedResult:this._calldata.decode(this._name,e.name,t),decodedEvents:this.$decodeEvents(n,a)}}case"revert":s=this._calldata.decodeFateString(t);break;case"error":if(s=ht(t).toString(),/Expected \d+ arguments, got \d+/.test(s))throw new D("ACI",`. Error provided by node: "${s}".`);if(/Trying to call undefined function: <<\d+,\d+,\d+,\d+>>/.test(s))throw new D("ACI",`. Error provided by node: "${s}", function name: ${r}.`);break;default:throw new q(`Unknown return type: ${e}`)}throw new W(s,i)}async function uc(e,t,n){const r=await Jo(e,{...this.$options,...n});return{hash:r.hash,tx:mi(r.rawTx),txData:r,rawTx:r.rawTx,...null!=r.blockHeight&&await this.$getCallResultByTxHash(r.hash,t,n)}}function mc(e){const t=ic(oc,this).functions.find((t=>t.name===e));if(null!=t)return t;if("init"===e)return{arguments:[],name:"init",payable:!1,returns:"unit",stateful:!0};throw new L(e)}function dc(e,t,{contractAddressToName:n}){const r={...this.$options.contractAddressToName,...n};if(null!=r[e])return r[e];const i=(e,t)=>JSON.stringify(e)===JSON.stringify(t),a=this._aci.map((({contract:e})=>e)).filter((e=>e?.event)),s=a.map((e=>[e.name,e.event.variant])).map((([e,t])=>t.map((t=>[e,Object.keys(t)[0],Object.values(t)[0]])))).flat().filter((([,e])=>BigInt(`0x${gt(e).toString("hex")}`)===t)).filter((([,,e],t,n)=>!n.slice(0,t).some((t=>i(t[2],e)))));switch(s.length){case 0:throw new Q(t.toString(),e);case 1:return s[0][0];default:throw new J(e,s)}}const pc=cc;var hc=pc;async function yc(e,t,{onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l,...u}){var m;const d=n.address;if("generalized"===(await Xn(d,{onNode:i})).kind)throw new b(`Account ${d} is already GA`);const p=await hc.initialize({onAccount:n,onCompiler:r,onNode:i,bytecode:a,aci:s,sourceCodePath:o,sourceCode:c,fileSystem:l}),h=await ui({_isInternalBuild:!0,...u,tag:$t.GaAttachTx,onNode:i,code:await p.$compile(),gasLimit:null!==(m=u.gasLimit)&&void 0!==m?m:await p._estimateGas("init",t,u),ownerId:d,callData:p._calldata.encode(p._name,"init",t),authFun:gt(e)}),{hash:y,rawTx:f}=await Jo(h,{onNode:i,onAccount:n,onCompiler:r,...u}),g=pi(f);return Object.freeze({owner:d,transaction:y,rawTx:f,gaContractId:g})}async function fc(e,{fee:t,gasPrice:n,onNode:r}){const{nodeNetworkId:i,consensusProtocolVersion:a}=await r.getNodeInfo();let s=gt(Qe([He.Buffer.from(i),ht(e)]));if(a===Bt.Ceres){if(null==t)throw new C("fee","provided (in Ceres)",t);if(null==n)throw new C("gasPrice","provided (in Ceres)",n);s=gt(ht(si({tag:yr.GaMetaTxAuthData,fee:t,gasPrice:n,txHash:yt(s,et.TxHash)})))}return s}async function gc(e,{onNode:t}){const n=mi(e,$t.SignedTx);if(n.encodedTx.tag!==$t.GaMetaTx)throw new C("transaction","to include GaMetaTx",$t[n.encodedTx.tag]);return fc(li(n.encodedTx.tx.encodedTx),{fee:n.encodedTx.fee,gasPrice:n.encodedTx.gasPrice,onNode:t})}function Nc(e,t,n){vc(e,t),t.set(e,n)}function vc(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function xc(e,t){return e.get(wc(e,t))}function Ic(e,t,n){return e.set(wc(e,t),n),n}function wc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}const Cc={...r,sendTransaction:Jo,...a,...s};var bc=new WeakMap;class zc{constructor(e={}){(0,ye.A)(this,"_options",{}),Nc(this,bc,void 0),Object.assign(this._options,e),Ic(bc,this,{onAccount:Gn((()=>this._options.onAccount)),onNode:Gn((()=>this._options.onNode)),onCompiler:Gn((()=>this._options.onCompiler))})}getContext(e={}){return{...this._options,...xc(bc,this),...e}}async buildTx(e){return ui({...this.getContext(),...e})}}Object.assign(zc.prototype,Le(Cc,(([e,t])=>[e,function(...e){e.length=t.length;const n=e[e.length-1];return e[e.length-1]=this.getContext(n),t(...e)}])));const Mc=zc;var Tc=Mc;function Sc(e,t,n){Ac(e,t),t.set(e,n)}function Ac(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function qc(e,t){return e.get(kc(e,t))}function _c(e,t,n){return e.set(kc(e,t),n),n}function kc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Pc=new WeakMap;class Ec extends Tc{constructor({nodes:e=[],...t}={}){super(t),(0,ye.A)(this,"pool",new Map),Sc(this,Pc,void 0),e.forEach((({name:e,instance:t},n)=>this.addNode(e,t,0===n))),_c(Pc,this,{onNode:Gn((()=>this.api)),onCompiler:Gn((()=>this.compilerApi)),onAccount:Gn((()=>this._resolveAccount()))})}get compilerApi(){if(null==this._options.onCompiler)throw new g("You can't use Compiler API. Compiler is not ready!");return this._options.onCompiler}get api(){return this.ensureNodeConnected(),this.pool.get(this.selectedNodeName)}addNode(e,t,n=!1){if(this.pool.has(e))throw new ne(e);this.pool.set(e,t),(n||null==this.selectedNodeName)&&this.selectNode(e)}selectNode(e){if(!this.pool.has(e))throw new re(`Node with name ${e} not in pool`);this.selectedNodeName=e}isNodeConnected(){return null!=this.selectedNodeName}ensureNodeConnected(){if(!this.isNodeConnected())throw new re("You can't use Node API. Node is not connected or not defined!")}async getNodeInfo(){return this.ensureNodeConnected(),{name:this.selectedNodeName,...await this.api.getNodeInfo()}}async getNodesInPool(){return Promise.all(Array.from(this.pool.entries()).map((async([e,t])=>({name:e,...await t.getNodeInfo()}))))}addresses(){return[]}_resolveAccount(e=this._options.onAccount){if("string"===typeof e)throw new S("Address in AccountResolver");if("object"===typeof e)return e;throw new T(`Account should be an address (ak-prefixed string), or instance of AccountBase, got ${String(e)} instead`)}get address(){return this._resolveAccount().address}async sign(e,t={}){return this.unsafeSign(e,t)}async unsafeSign(e,{onAccount:t,...n}={}){return this._resolveAccount(t).unsafeSign(e,n)}async signTransaction(e,{onAccount:t,...n}={}){const r=null!==this.selectedNodeName?await this.api.getNetworkId():void 0;return this._resolveAccount(t).signTransaction(e,{networkId:r,...n})}async signMessage(e,{onAccount:t,...n}={}){return this._resolveAccount(t).signMessage(e,n)}async signTypedData(e,t,{onAccount:n,...r}={}){return this._resolveAccount(n).signTypedData(e,t,r)}async signDelegation(e,{onAccount:t,...n}={}){var r;return null!==(r=n.networkId)&&void 0!==r||(n.networkId=null!==this.selectedNodeName?await this.api.getNetworkId():void 0),this._resolveAccount(t).signDelegation(e,n)}getContext(e={}){return{...this._options,...qc(Pc,this),...e,...null!=e.onAccount&&{onAccount:this._resolveAccount(e.onAccount)}}}}class Bc extends Ec{constructor({accounts:e,...t}={}){super(t),(0,ye.A)(this,"accounts",{}),e?.forEach(((e,t)=>this.addAccount(e,{select:0===t})))}_resolveAccount(e=this.selectedAddress){if("string"===typeof e){const t=e;if(ht(t),null==this.accounts[t])throw new k(e);e=this.accounts[t]}return super._resolveAccount(e)}addresses(){return Object.keys(this.accounts)}addAccount(e,{select:t}={}){const{address:n}=e;this.accounts[n]=e,!0===t&&this.selectAccount(n)}removeAccount(e){if(null==this.accounts[e])throw new k(e);delete this.accounts[e],this.selectedAddress===e&&delete this.selectedAddress}selectAccount(e){if(ht(e),null==this.accounts[e])throw new k(e);this.selectedAddress=e}}function Oc(e,t){$c(e,t),t.add(e)}function Rc(e,t,n){$c(e,t),t.set(e,n)}function $c(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Dc(e,t){return e.get(Hc(e,t))}function Fc(e,t,n){return e.set(Hc(e,t),n),n}function Hc(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var Vc=new WeakMap,Gc=new WeakMap,Uc=new WeakMap,jc=new WeakSet;class Wc{constructor(e,t,n){Oc(this,jc),Rc(this,Vc,new Map),Rc(this,Gc,0),Rc(this,Uc,void 0),this.connection=e,Fc(Uc,this,n),e.connect(Hc(jc,this,Lc).bind(this),t)}async request(e,t){return Hc(jc,this,Kc).call(this,Fc(Gc,this,Dc(Gc,this)+1),e,t),new Promise(((e,t)=>{Dc(Vc,this).set(Dc(Gc,this),{resolve:e,reject:t})}))}notify(e,t){Hc(jc,this,Kc).call(this,void 0,e,t)}}async function Lc(e,t){if("2.0"!==e?.jsonrpc)throw new O(JSON.stringify(e));if("result"in e||"error"in e)return void Hc(jc,this,Jc).call(this,e);const n=e;let r,i;try{if(!(n.method in Dc(Uc,this)))throw new _e;const e=n.method;r=await Dc(Uc,this)[e](n.params,t)}catch(a){Ze(a),i=a}if(null!=n.id&&Hc(jc,this,Qc).call(this,n.id,n.method,r,null==i||i instanceof we?i:new Ae),null!=i&&!(i instanceof we))throw i}function Kc(e,t,n){this.connection.sendMessage({jsonrpc:"2.0",...null!=e?{id:e}:{},method:t,...null!=n?{params:n}:{}})}function Qc(e,t,n,r){this.connection.sendMessage({jsonrpc:"2.0",id:e,method:t,...null!=r?{error:r.toJSON()}:{result:n}})}function Jc({id:e,error:t,result:n}){const r=Dc(Vc,this).get(e);if(null==r)throw new R(e);null!=t?r.reject(we.deserialize(t)):r.resolve(n),Dc(Vc,this).delete(e)}const Xc=1;var Yc=n(59643);const Zc=Yc({storeAsString:!0}),el=e=>{if("object"===typeof e&&null!==e&&e.constructor===Object)return Le(e,(([e,t])=>[e,el(t)]));if(Array.isArray(e))return e.map((e=>el(e)));if("string"===typeof e&&new St.g(e).toString(10)===e){const t=new St.g(e);return t.toJSON=()=>t.toString(10),t}return e};var tl={stringify:(...e)=>Zc.stringify(el(e[0]),...e.slice(1)),parse:Zc.parse};class nl extends Bc{constructor({name:e,id:t,type:n,onConnection:r,onSubscription:i,onDisconnect:a,onAskAccounts:s,onAskToSelectNetwork:o,...c}){super(c),(0,ye.A)(this,"_clients",new Map),this.onConnection=r,this.onSubscription=i,this.onDisconnect=a,this.onAskAccounts=s,this.onAskToSelectNetwork=o,this.name=e,this.id=t,this._type=n}_getAccountsForClient({addressSubscription:e}){const{current:t,connected:n}=this.getAccounts();return{current:e.has("current")||e.has("connected")?t:{},connected:e.has("connected")?n:{}}}_pushAccountsToApps(){null!=this._clients&&Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).filter((e=>0!==e.addressSubscription.size)).forEach((e=>e.rpc.notify(ve.updateAddress,this._getAccountsForClient(e))))}selectAccount(e){super.selectAccount(e),this._pushAccountsToApps()}addAccount(e,t){super.addAccount(e,t),this._pushAccountsToApps()}_getNode(){return this.ensureNodeConnected(),{node:{url:this.api.$host,name:this.selectedNodeName}}}async selectNode(e){super.selectNode(e);const t=await this.api.getNetworkId();Array.from(this._clients.keys()).filter((e=>this._isRpcClientConnected(e))).map((e=>this._getClient(e))).forEach((e=>{e.rpc.notify(ve.updateNetwork,{networkId:t,...e.connectNode&&this._getNode()})}))}_getClient(e){const t=this._clients.get(e);if(null==t)throw new $(e);return t}_isRpcClientConnected(e){return xe.CONNECTED===this._getClient(e).status&&this._getClient(e).rpc.connection.isConnected()}_disconnectRpcClient(e){const t=this._getClient(e);t.rpc.connection.disconnect(),t.status=xe.DISCONNECTED,t.addressSubscription=new Set}removeRpcClient(e){this._disconnectRpcClient(e),this._clients.delete(e)}addRpcClient(e){const t=He.Buffer.from(Ve.randomBytes(8)).toString("base64");let n;const r={id:t,status:xe.WAITING_FOR_CONNECTION_REQUEST,addressSubscription:new Set,connectNode:!1,rpc:new Wc(e,(()=>{this._clients.delete(t),this.onDisconnect(t,n)}),{[ve.closeConnection]:e=>{n=e,this._disconnectRpcClient(t)},[ve.connect]:async({name:e,version:n,icons:i,connectNode:a},s)=>{if(n!==Xc)throw new ze;return await this.onConnection(t,{name:e,icons:i,connectNode:a},s),r.status=xe.CONNECTED,r.connectNode=a,{...await this.getWalletInfo(),...a&&this._getNode()}},[ve.subscribeAddress]:async({type:e,value:n},i)=>{if(!this._isRpcClientConnected(t))throw new Te;switch(e){case Ne.subscribe:await this.onSubscription(t,{type:e,value:n},i),r.addressSubscription.add(n);break;case Ne.unsubscribe:r.addressSubscription.delete(n);break;default:throw new q(`Unknown subscription type: ${e}`)}return{subscription:Array.from(r.addressSubscription),address:this._getAccountsForClient(r)}},[ve.address]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new Te;return await this.onAskAccounts(t,e,n),this.addresses()},[ve.sign]:async({tx:e,onAccount:n=this.address,returnSigned:r,innerTx:i},a)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const s={onAccount:n,aeppOrigin:a,aeppRpcClientId:t,innerTx:i};if(r||!0===i)return{signedTransaction:await this.signTransaction(e,s)};try{return tl.parse(tl.stringify({transactionHash:await this.sendTransaction(e,{...s,verify:!1})}))}catch(o){const t=await Ko(e,this.api);if(t.length>0)throw new Ce(t);throw o}},[ve.signMessage]:async({message:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t};return{signature:He.Buffer.from(await this.signMessage(e,i)).toString("hex")}},[ve.signTypedData]:async({domain:e,aci:n,data:r,onAccount:i=this.address},a)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(i))throw new Se(i);const s={...e,onAccount:i,aeppOrigin:a,aeppRpcClientId:t};return{signature:await this.signTypedData(r,n,s)}},[ve.unsafeSign]:async({data:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=yt(await this.unsafeSign(ht(e),i),et.Signature);return{signature:a}},[ve.signDelegation]:async({delegation:e,onAccount:n=this.address},r)=>{if(!this._isRpcClientConnected(t))throw new Te;if(!this.addresses().includes(n))throw new Se(n);const i={onAccount:n,aeppOrigin:r,aeppRpcClientId:t},a=await this.signDelegation(e,i);return{signature:a}},[ve.updateNetwork]:async(e,n)=>{if(!this._isRpcClientConnected(t))throw new Te;return await this.onAskToSelectNetwork(t,e,n),null}})};return this._clients.set(t,r),t}async shareWalletInfo(e){this._getClient(e).rpc.notify(ve.readyToConnect,await this.getWalletInfo())}async getWalletInfo(){const{origin:e}=window.location;return{id:this.id,name:this.name,networkId:await this.api.getNetworkId(),origin:"file://"===e?"*":e,type:this._type}}getAccounts(){return{current:null!=this.selectedAddress?{[this.selectedAddress]:{}}:{},connected:this.addresses().filter((e=>e!==this.selectedAddress)).reduce(((e,t)=>({...e,[t]:{}})),{})}}}var rl=n(367),il=n(9293);function al(e,t,n,r,i,a){return(0,c.uX)(),(0,c.CE)("div",{class:(0,l.C4)({error:e.error})},(0,l.v_)(e.text),3)}var sl={props:{value:{type:[Object,Array,String,Number,Promise],default:null}},data:()=>({text:"",error:!1}),watch:{value:{async handler(e){e?.then?(this.text="Waiting for resolving",this.error=!1,this.text=await e.then((e=>this.valueToString(e)),(e=>(console.warn(e),this.error=!0,e)))):this.text=this.valueToString(e)},immediate:!0}},methods:{valueToString(e){return"object"!==typeof e?e:JSON.stringify(e,((e,t)=>"bigint"===typeof t?`${t} (as BigInt)`:t),2)}}},ol=n(66262);const cl=(0,ol.A)(sl,[["render",al]]);var ll=cl,ul={components:{Value:ll},data:()=>({nextAeppUrl:"../aepp/",aeppUrl:"",runningInFrame:window.parent!==window,nodeName:"",address:"",balancePromise:null,clientId:null,clientStatus:null,stopSharingWalletInfo:null}),methods:{navigate(){/^https?:\/\//.test(this.nextAeppUrl)||this.nextAeppUrl.startsWith(".")||(this.nextAeppUrl="http://"+this.nextAeppUrl),this.aeppUrl="",this.$nextTick((()=>{this.aeppUrl=this.nextAeppUrl}))},shareWalletInfo({interval:e=5e3,attempts:t=5}={}){const n=this.runningInFrame?window.parent:this.$refs.aepp.contentWindow,r=new Fe({target:n});this.clientId=this.aeSdk.addRpcClient(r),this.aeSdk.shareWalletInfo(this.clientId);const i=setInterval((()=>{if(this.aeSdk.shareWalletInfo(this.clientId),t-=1,!t)return this.stopSharingWalletInfo()}),e);this.stopSharingWalletInfo=()=>{clearInterval(i);const e=this.aeSdk._getClient(this.clientId);e.status===xe.WAITING_FOR_CONNECTION_REQUEST&&this.aeSdk.removeRpcClient(this.clientId),this.stopSharingWalletInfo=null}},disconnect(){const e=this.aeSdk._getClient(this.clientId);e.status===xe.CONNECTED&&e.rpc.notify(ve.closeConnection,null),this.aeSdk.removeRpcClient(this.clientId),this.clientId=null},async switchAccount(){this.address=this.aeSdk.addresses().find((e=>e!==this.address)),this.aeSdk.selectAccount(this.address)},async switchNode(){const e=(await this.aeSdk.getNodesInPool()).map((({name:e})=>e));this.nodeName=e[(e.indexOf(this.nodeName)+1)%e.length],this.aeSdk.selectNode(this.nodeName)},updateClientStatus(){if(!this.clientId)return void(this.clientStatus=null);const e=this.aeSdk._getClient(this.clientId);this.clientStatus=e.status}},mounted(){this.navigate();const e={},t=t=>(n,r,i)=>{if(!confirm(`Client ${e[n].name} with id ${n} at ${i} want to ${t}`+ll.methods.valueToString(r)))throw new be};class n extends Ii{async signTransaction(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){if(null!=n){const a={...i,unpackedTx:mi(e)};a.onCompiler&&(a.onCompiler="<Compiler>"),a.onNode&&(a.onNode="<Node>"),t(`sign transaction ${e}`)(n,a,r)}return super.signTransaction(e,i)}async signMessage(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign message ${e}`)(n,i,r),super.signMessage(e,i)}async signTypedData(e,n,{aeppRpcClientId:r,aeppOrigin:i,...a}){if(null!=r){const s=(new rl.A).resolveType(n),o=(new il.A).decodeWithType(e,s),c={...a,aci:n,decodedData:o};t(`sign typed data ${e}`)(r,c,i)}return super.signTypedData(e,n,a)}async unsafeSign(e,{aeppRpcClientId:n,aeppOrigin:r,...i}={}){return null!=n&&t(`sign raw data ${e}`)(n,i,r),super.unsafeSign(e,i)}async signDelegation(e,{aeppRpcClientId:n,aeppOrigin:r,...i}){if(null!=n){const a={...i,...Ti(e)};t("sign delegation")(n,a,r)}return super.signDelegation(e,i)}static generate(){return new n(super.generate().secretKey)}}this.aeSdk=new nl({id:window.origin,type:ge.window,nodes:[{name:"ae_uat",instance:new Ho("https://testnet.aeternity.io")},{name:"ae_mainnet",instance:new Ho("https://mainnet.aeternity.io")}],accounts:[new n("sk_2CuofqWZHrABCrM7GY95YSQn8PyFvKQadnvFnpwhjUnDCFAWmf"),n.generate()],name:"Wallet Iframe",onConnection:(t,n,r)=>{if(!confirm(`Client ${n.name} with id ${t} at ${r} want to connect`))throw new Me;e[t]=n,setTimeout((()=>this.stopSharingWalletInfo()))},onSubscription:t("subscription"),onAskAccounts:t("get accounts"),onDisconnect:e=>{console.log("disconnected client",e),this.clientId=null},onAskToSelectNetwork:async(e,n,r)=>{if(await t("select network")(e,n,r),n.networkId){if(!this.aeSdk.pool.has(n.networkId))throw new qe(n.networkId);await this.aeSdk.selectNode(n.networkId),this.nodeName=n.networkId}else this.aeSdk.pool.delete("by-aepp"),this.aeSdk.addNode("by-aepp",new Ho(n.nodeUrl)),await this.aeSdk.selectNode("by-aepp"),this.nodeName="by-aepp"}}),this.runningInFrame&&this.shareWalletInfo(),this.nodeName=this.aeSdk.selectedNodeName,[this.address]=this.aeSdk.addresses(),this.$watch((({address:e,nodeName:t})=>[e,t]),(([e])=>{this.balancePromise=this.aeSdk.getBalance(e)}),{immediate:!0}),setInterval((()=>this.updateClientStatus()),1e3),this.$watch((({clientId:e})=>[e]),(()=>this.updateClientStatus()),{immediate:!0})}};const ml=(0,ol.A)(ul,[["render",d],["__scopeId","data-v-b43a3c46"]]);var dl=ml;(0,o.Ef)(dl).mount("#app")},73519:function(){}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.m=e,function(){var e=[];n.O=function(t,r,i,a){if(!r){var s=1/0;for(u=0;u<e.length;u++){r=e[u][0],i=e[u][1],a=e[u][2];for(var o=!0,c=0;c<r.length;c++)(!1&a||s>=a)&&Object.keys(n.O).every((function(e){return n.O[e](r[c])}))?r.splice(c--,1):(o=!1,a<s&&(s=a));if(o){e.splice(u--,1);var l=i();void 0!==l&&(t=l)}}return t}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[r,i,a]}}(),function(){n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,r){var i,a,s=r[0],o=r[1],c=r[2],l=0;if(s.some((function(t){return 0!==e[t]}))){for(i in o)n.o(o,i)&&(n.m[i]=o[i]);if(c)var u=c(n)}for(t&&t(r);l<s.length;l++)a=s[l],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(u)},r=self["webpackChunkwallet_iframe"]=self["webpackChunkwallet_iframe"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=n.O(void 0,[504],(function(){return n(61399)}));r=n.O(r)})();
//# sourceMappingURL=app.ab39c56b.js.map